# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Hugging Face Team, Licenced under the Apache
# License, Version 2.0
# This file is distributed under the same license as the transformers
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: transformers \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-10 04:49+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/model_doc/auto.rst:14
msgid "Auto Classes"
msgstr ""

#: ../../source/model_doc/auto.rst:16
msgid ""
"In many cases, the architecture you want to use can be guessed from the "
"name or the path of the pretrained model you are supplying to the "
":obj:`from_pretrained()` method. AutoClasses are here to do this job for "
"you so that you automatically retrieve the relevant model given the "
"name/path to the pretrained weights/config/vocabulary."
msgstr ""

#: ../../source/model_doc/auto.rst:20
msgid ""
"Instantiating one of :class:`~transformers.AutoConfig`, "
":class:`~transformers.AutoModel`, and "
":class:`~transformers.AutoTokenizer` will directly create a class of the "
"relevant architecture. For instance"
msgstr ""

#: ../../source/model_doc/auto.rst:28
msgid ""
"will create a model that is an instance of "
":class:`~transformers.BertModel`."
msgstr ""

#: ../../source/model_doc/auto.rst:30
msgid ""
"There is one class of :obj:`AutoModel` for each task, and for each "
"backend (PyTorch or TensorFlow)."
msgstr ""

#: ../../source/model_doc/auto.rst:34
msgid "AutoConfig"
msgstr ""

#: of transformers.AutoConfig:1
msgid ""
"This is a generic configuration class that will be instantiated as one of"
" the configuration classes of the library when created with the "
":meth:`~transformers.AutoConfig.from_pretrained` class method."
msgstr ""

#: of transformers.AutoConfig:4 transformers.AutoFeatureExtractor:4
#: transformers.AutoModel:5 transformers.AutoModelForCausalLM:5
#: transformers.AutoModelForImageClassification:5
#: transformers.AutoModelForMaskedLM:5
#: transformers.AutoModelForMultipleChoice:5
#: transformers.AutoModelForNextSentencePrediction:5
#: transformers.AutoModelForPreTraining:5
#: transformers.AutoModelForQuestionAnswering:5
#: transformers.AutoModelForSeq2SeqLM:5
#: transformers.AutoModelForSequenceClassification:5
#: transformers.AutoModelForTableQuestionAnswering:5
#: transformers.AutoModelForTokenClassification:5 transformers.AutoTokenizer:4
#: transformers.FlaxAutoModel:5 transformers.FlaxAutoModelForCausalLM:5
#: transformers.FlaxAutoModelForImageClassification:5
#: transformers.FlaxAutoModelForMaskedLM:5
#: transformers.FlaxAutoModelForMultipleChoice:5
#: transformers.FlaxAutoModelForNextSentencePrediction:5
#: transformers.FlaxAutoModelForPreTraining:5
#: transformers.FlaxAutoModelForQuestionAnswering:5
#: transformers.FlaxAutoModelForSeq2SeqLM:5
#: transformers.FlaxAutoModelForSequenceClassification:5
#: transformers.FlaxAutoModelForTokenClassification:5
#: transformers.TFAutoModel:5 transformers.TFAutoModelForCausalLM:5
#: transformers.TFAutoModelForMaskedLM:5
#: transformers.TFAutoModelForMultipleChoice:5
#: transformers.TFAutoModelForPreTraining:5
#: transformers.TFAutoModelForQuestionAnswering:5
#: transformers.TFAutoModelForSeq2SeqLM:5
#: transformers.TFAutoModelForSequenceClassification:5
#: transformers.TFAutoModelForTokenClassification:5
msgid ""
"This class cannot be instantiated directly using ``__init__()`` (throws "
"an error)."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:1
msgid ""
"Instantiate one of the configuration classes of the library from a "
"pretrained model configuration."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:3
msgid ""
"The configuration class to instantiate is selected based on the "
":obj:`model_type` property of the config object that is loaded, or when "
"it's missing, by falling back to using pattern matching on "
":obj:`pretrained_model_name_or_path`:"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:7
msgid "**albert** -- :class:`~transformers.AlbertConfig` (ALBERT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:8
msgid "**bart** -- :class:`~transformers.BartConfig` (BART model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:9
msgid "**beit** -- :class:`~transformers.BeitConfig` (BeiT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:10
msgid "**bert** -- :class:`~transformers.BertConfig` (BERT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:11
msgid ""
"**bert-generation** -- :class:`~transformers.BertGenerationConfig` (Bert "
"Generation model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:12
msgid "**big_bird** -- :class:`~transformers.BigBirdConfig` (BigBird model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:13
msgid ""
"**bigbird_pegasus** -- :class:`~transformers.BigBirdPegasusConfig` "
"(BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:14
msgid ""
"**blenderbot** -- :class:`~transformers.BlenderbotConfig` (Blenderbot "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:15
msgid ""
"**blenderbot-small** -- :class:`~transformers.BlenderbotSmallConfig` "
"(BlenderbotSmall model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:16
msgid "**camembert** -- :class:`~transformers.CamembertConfig` (CamemBERT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:17
msgid "**canine** -- :class:`~transformers.CanineConfig` (Canine model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:18
msgid "**clip** -- :class:`~transformers.CLIPConfig` (CLIP model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:19
msgid "**convbert** -- :class:`~transformers.ConvBertConfig` (ConvBERT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:20
msgid "**ctrl** -- :class:`~transformers.CTRLConfig` (CTRL model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:21
msgid "**deberta** -- :class:`~transformers.DebertaConfig` (DeBERTa model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:22
msgid ""
"**deberta-v2** -- :class:`~transformers.DebertaV2Config` (DeBERTa-v2 "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:23
msgid "**deit** -- :class:`~transformers.DeiTConfig` (DeiT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:24
msgid "**detr** -- :class:`~transformers.DetrConfig` (DETR model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:25
msgid ""
"**distilbert** -- :class:`~transformers.DistilBertConfig` (DistilBERT "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:26
msgid "**dpr** -- :class:`~transformers.DPRConfig` (DPR model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:27
msgid "**electra** -- :class:`~transformers.ElectraConfig` (ELECTRA model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:28
msgid ""
"**encoder-decoder** -- :class:`~transformers.EncoderDecoderConfig` "
"(Encoder decoder model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:29
msgid "**flaubert** -- :class:`~transformers.FlaubertConfig` (FlauBERT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:30
msgid ""
"**fsmt** -- :class:`~transformers.FSMTConfig` (FairSeq Machine-"
"Translation model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:31
msgid ""
"**funnel** -- :class:`~transformers.FunnelConfig` (Funnel Transformer "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:32
msgid "**gpt2** -- :class:`~transformers.GPT2Config` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:33
msgid "**gpt_neo** -- :class:`~transformers.GPTNeoConfig` (GPT Neo model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:34
msgid "**hubert** -- :class:`~transformers.HubertConfig` (Hubert model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:35
msgid "**ibert** -- :class:`~transformers.IBertConfig` (I-BERT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:36
msgid "**layoutlm** -- :class:`~transformers.LayoutLMConfig` (LayoutLM model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:37
msgid "**led** -- :class:`~transformers.LEDConfig` (LED model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:38
msgid ""
"**longformer** -- :class:`~transformers.LongformerConfig` (Longformer "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:39
msgid "**luke** -- :class:`~transformers.LukeConfig` (LUKE model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:40
msgid "**lxmert** -- :class:`~transformers.LxmertConfig` (LXMERT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:41
msgid "**m2m_100** -- :class:`~transformers.M2M100Config` (M2M100 model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:42
msgid "**marian** -- :class:`~transformers.MarianConfig` (Marian model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:43
msgid "**mbart** -- :class:`~transformers.MBartConfig` (mBART model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:44
msgid ""
"**megatron-bert** -- :class:`~transformers.MegatronBertConfig` "
"(MegatronBert model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:45
msgid ""
"**mobilebert** -- :class:`~transformers.MobileBertConfig` (MobileBERT "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:46
msgid "**mpnet** -- :class:`~transformers.MPNetConfig` (MPNet model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:47
msgid "**mt5** -- :class:`~transformers.MT5Config` (mT5 model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:48
msgid ""
"**openai-gpt** -- :class:`~transformers.OpenAIGPTConfig` (OpenAI GPT "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:49
msgid "**pegasus** -- :class:`~transformers.PegasusConfig` (Pegasus model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:50
msgid ""
"**prophetnet** -- :class:`~transformers.ProphetNetConfig` (ProphetNet "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:51
msgid "**rag** -- :class:`~transformers.RagConfig` (RAG model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:52
msgid "**reformer** -- :class:`~transformers.ReformerConfig` (Reformer model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:53
msgid "**rembert** -- :class:`~transformers.RemBertConfig` (RemBERT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:54
msgid "**retribert** -- :class:`~transformers.RetriBertConfig` (RetriBERT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:55
msgid "**roberta** -- :class:`~transformers.RobertaConfig` (RoBERTa model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:56
msgid "**roformer** -- :class:`~transformers.RoFormerConfig` (RoFormer model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:57
msgid ""
"**speech_to_text** -- :class:`~transformers.Speech2TextConfig` "
"(Speech2Text model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:58
msgid ""
"**squeezebert** -- :class:`~transformers.SqueezeBertConfig` (SqueezeBERT "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:59
msgid "**t5** -- :class:`~transformers.T5Config` (T5 model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:60
msgid "**tapas** -- :class:`~transformers.TapasConfig` (TAPAS model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:61
msgid ""
"**transfo-xl** -- :class:`~transformers.TransfoXLConfig` (Transformer-XL "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:62
msgid ""
"**visual_bert** -- :class:`~transformers.VisualBertConfig` (VisualBert "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:63
msgid "**vit** -- :class:`~transformers.ViTConfig` (ViT model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:64
msgid "**wav2vec2** -- :class:`~transformers.Wav2Vec2Config` (Wav2Vec2 model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:65
msgid "**xlm** -- :class:`~transformers.XLMConfig` (XLM model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:66
msgid ""
"**xlm-prophetnet** -- :class:`~transformers.XLMProphetNetConfig` "
"(XLMProphetNet model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:67
msgid ""
"**xlm-roberta** -- :class:`~transformers.XLMRobertaConfig` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:68
msgid "**xlnet** -- :class:`~transformers.XLNetConfig` (XLNet model)"
msgstr ""

#: of transformers.AutoConfig.from_pretrained
#: transformers.AutoModel.from_config transformers.AutoModel.from_pretrained
#: transformers.AutoModelForCausalLM.from_config
#: transformers.AutoModelForCausalLM.from_pretrained
#: transformers.AutoModelForImageClassification.from_config
#: transformers.AutoModelForImageClassification.from_pretrained
#: transformers.AutoModelForMaskedLM.from_config
#: transformers.AutoModelForMaskedLM.from_pretrained
#: transformers.AutoModelForMultipleChoice.from_config
#: transformers.AutoModelForMultipleChoice.from_pretrained
#: transformers.AutoModelForNextSentencePrediction.from_config
#: transformers.AutoModelForNextSentencePrediction.from_pretrained
#: transformers.AutoModelForPreTraining.from_config
#: transformers.AutoModelForPreTraining.from_pretrained
#: transformers.AutoModelForQuestionAnswering.from_config
#: transformers.AutoModelForQuestionAnswering.from_pretrained
#: transformers.AutoModelForSeq2SeqLM.from_config
#: transformers.AutoModelForSeq2SeqLM.from_pretrained
#: transformers.AutoModelForSequenceClassification.from_config
#: transformers.AutoModelForSequenceClassification.from_pretrained
#: transformers.AutoModelForTableQuestionAnswering.from_config
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained
#: transformers.AutoModelForTokenClassification.from_config
#: transformers.AutoModelForTokenClassification.from_pretrained
#: transformers.FlaxAutoModel.from_config
#: transformers.FlaxAutoModel.from_pretrained
#: transformers.FlaxAutoModelForCausalLM.from_config
#: transformers.FlaxAutoModelForCausalLM.from_pretrained
#: transformers.FlaxAutoModelForImageClassification.from_config
#: transformers.FlaxAutoModelForImageClassification.from_pretrained
#: transformers.FlaxAutoModelForMaskedLM.from_config
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained
#: transformers.FlaxAutoModelForMultipleChoice.from_config
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained
#: transformers.FlaxAutoModelForNextSentencePrediction.from_config
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained
#: transformers.FlaxAutoModelForPreTraining.from_config
#: transformers.FlaxAutoModelForPreTraining.from_pretrained
#: transformers.FlaxAutoModelForQuestionAnswering.from_config
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained
#: transformers.FlaxAutoModelForSeq2SeqLM.from_config
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained
#: transformers.FlaxAutoModelForSequenceClassification.from_config
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained
#: transformers.FlaxAutoModelForTokenClassification.from_config
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained
#: transformers.TFAutoModel.from_config
#: transformers.TFAutoModel.from_pretrained
#: transformers.TFAutoModelForCausalLM.from_config
#: transformers.TFAutoModelForCausalLM.from_pretrained
#: transformers.TFAutoModelForMaskedLM.from_config
#: transformers.TFAutoModelForMaskedLM.from_pretrained
#: transformers.TFAutoModelForMultipleChoice.from_config
#: transformers.TFAutoModelForMultipleChoice.from_pretrained
#: transformers.TFAutoModelForPreTraining.from_config
#: transformers.TFAutoModelForPreTraining.from_pretrained
#: transformers.TFAutoModelForQuestionAnswering.from_config
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained
#: transformers.TFAutoModelForSeq2SeqLM.from_config
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained
#: transformers.TFAutoModelForSequenceClassification.from_config
#: transformers.TFAutoModelForSequenceClassification.from_pretrained
#: transformers.TFAutoModelForTokenClassification.from_config
#: transformers.TFAutoModelForTokenClassification.from_pretrained
msgid "Parameters"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:70
msgid ""
"Can be either:      - A string, the `model id` of a pretrained model "
"configuration hosted inside a model repo on       huggingface.co. Valid "
"model ids can be located at the root-level, like ``bert-base-uncased``, "
"or       namespaced under a user or organization name, like ``dbmdz/bert-"
"base-german-cased``.     - A path to a `directory` containing a "
"configuration file saved using the       "
":meth:`~transformers.PretrainedConfig.save_pretrained` method, or the"
"       :meth:`~transformers.PreTrainedModel.save_pretrained` method, "
"e.g., ``./my_model_directory/``.     - A path or url to a saved "
"configuration JSON `file`, e.g.,       "
"``./my_model_directory/configuration.json``."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:71
#: transformers.AutoModel.from_pretrained:72
#: transformers.AutoModelForCausalLM.from_pretrained:38
#: transformers.AutoModelForImageClassification.from_pretrained:15
#: transformers.AutoModelForMaskedLM.from_pretrained:40
#: transformers.AutoModelForMultipleChoice.from_pretrained:34
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:15
#: transformers.AutoModelForPreTraining.from_pretrained:45
#: transformers.AutoModelForQuestionAnswering.from_pretrained:42
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:27
#: transformers.AutoModelForSequenceClassification.from_pretrained:48
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:13
#: transformers.AutoModelForTokenClassification.from_pretrained:37
#: transformers.AutoTokenizer.from_pretrained:70
#: transformers.FlaxAutoModel.from_pretrained:23
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:11
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:10
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:15
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:13
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:10
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:18
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:15
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:13
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:15
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:13
#: transformers.TFAutoModel.from_pretrained:44
#: transformers.TFAutoModelForCausalLM.from_pretrained:18
#: transformers.TFAutoModelForMaskedLM.from_pretrained:26
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:26
#: transformers.TFAutoModelForPreTraining.from_pretrained:30
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:26
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:18
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:31
#: transformers.TFAutoModelForTokenClassification.from_pretrained:27
msgid "Can be either:"
msgstr ""

#: of transformers.AutoConfig.from_pretrained:73
msgid ""
"A string, the `model id` of a pretrained model configuration hosted "
"inside a model repo on huggingface.co. Valid model ids can be located at "
"the root-level, like ``bert-base-uncased``, or namespaced under a user or"
" organization name, like ``dbmdz/bert-base-german-cased``."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:76
msgid ""
"A path to a `directory` containing a configuration file saved using the "
":meth:`~transformers.PretrainedConfig.save_pretrained` method, or the "
":meth:`~transformers.PreTrainedModel.save_pretrained` method, e.g., "
"``./my_model_directory/``."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:79
msgid ""
"A path or url to a saved configuration JSON `file`, e.g., "
"``./my_model_directory/configuration.json``."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:82
#: transformers.AutoModel.from_pretrained:103
#: transformers.AutoModelForCausalLM.from_pretrained:69
#: transformers.AutoModelForImageClassification.from_pretrained:46
#: transformers.AutoModelForMaskedLM.from_pretrained:71
#: transformers.AutoModelForMultipleChoice.from_pretrained:65
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:46
#: transformers.AutoModelForPreTraining.from_pretrained:76
#: transformers.AutoModelForQuestionAnswering.from_pretrained:73
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:58
#: transformers.AutoModelForSequenceClassification.from_pretrained:79
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:44
#: transformers.AutoModelForTokenClassification.from_pretrained:68
#: transformers.AutoTokenizer.from_pretrained:86
#: transformers.FlaxAutoModel.from_pretrained:48
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:36
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:35
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:40
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:38
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:35
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:43
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:40
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:38
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:40
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:38
#: transformers.TFAutoModel.from_pretrained:69
#: transformers.TFAutoModelForCausalLM.from_pretrained:43
#: transformers.TFAutoModelForMaskedLM.from_pretrained:51
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:51
#: transformers.TFAutoModelForPreTraining.from_pretrained:55
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:51
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:43
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:56
#: transformers.TFAutoModelForTokenClassification.from_pretrained:52
msgid ""
"Path to a directory in which a downloaded pretrained model configuration "
"should be cached if the standard cache should not be used."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:85
#: transformers.AutoTokenizer.from_pretrained:89
msgid ""
"Whether or not to force the (re-)download the model weights and "
"configuration files and override the cached versions if they exist."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:88
#: transformers.AutoModel.from_pretrained:112
#: transformers.AutoModelForCausalLM.from_pretrained:78
#: transformers.AutoModelForImageClassification.from_pretrained:55
#: transformers.AutoModelForMaskedLM.from_pretrained:80
#: transformers.AutoModelForMultipleChoice.from_pretrained:74
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:55
#: transformers.AutoModelForPreTraining.from_pretrained:85
#: transformers.AutoModelForQuestionAnswering.from_pretrained:82
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:67
#: transformers.AutoModelForSequenceClassification.from_pretrained:88
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:53
#: transformers.AutoModelForTokenClassification.from_pretrained:77
#: transformers.AutoTokenizer.from_pretrained:92
#: transformers.FlaxAutoModel.from_pretrained:57
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:45
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:44
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:49
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:47
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:44
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:52
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:49
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:47
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:49
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:47
#: transformers.TFAutoModel.from_pretrained:78
#: transformers.TFAutoModelForCausalLM.from_pretrained:52
#: transformers.TFAutoModelForMaskedLM.from_pretrained:60
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:60
#: transformers.TFAutoModelForPreTraining.from_pretrained:64
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:60
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:52
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:65
#: transformers.TFAutoModelForTokenClassification.from_pretrained:61
msgid ""
"Whether or not to delete incompletely received files. Will attempt to "
"resume the download if such a file exists."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:91
#: transformers.AutoModel.from_pretrained:115
#: transformers.AutoModelForCausalLM.from_pretrained:81
#: transformers.AutoModelForImageClassification.from_pretrained:58
#: transformers.AutoModelForMaskedLM.from_pretrained:83
#: transformers.AutoModelForMultipleChoice.from_pretrained:77
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:58
#: transformers.AutoModelForPreTraining.from_pretrained:88
#: transformers.AutoModelForQuestionAnswering.from_pretrained:85
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:70
#: transformers.AutoModelForSequenceClassification.from_pretrained:91
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:56
#: transformers.AutoModelForTokenClassification.from_pretrained:80
#: transformers.AutoTokenizer.from_pretrained:95
#: transformers.FlaxAutoModel.from_pretrained:60
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:48
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:47
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:52
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:50
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:47
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:55
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:52
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:50
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:52
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:50
#: transformers.TFAutoModel.from_pretrained:81
#: transformers.TFAutoModelForCausalLM.from_pretrained:55
#: transformers.TFAutoModelForMaskedLM.from_pretrained:63
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:63
#: transformers.TFAutoModelForPreTraining.from_pretrained:67
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:63
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:55
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:68
#: transformers.TFAutoModelForTokenClassification.from_pretrained:64
msgid ""
"A dictionary of proxy servers to use by protocol or endpoint, e.g., "
":obj:`{'http': 'foo.bar:3128', 'http://hostname': 'foo.bar:4012'}`. The "
"proxies are used on each request."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:94
#: transformers.AutoFeatureExtractor.from_pretrained:41
#: transformers.AutoModel.from_pretrained:122
#: transformers.AutoModelForCausalLM.from_pretrained:88
#: transformers.AutoModelForImageClassification.from_pretrained:65
#: transformers.AutoModelForMaskedLM.from_pretrained:90
#: transformers.AutoModelForMultipleChoice.from_pretrained:84
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:65
#: transformers.AutoModelForPreTraining.from_pretrained:95
#: transformers.AutoModelForQuestionAnswering.from_pretrained:92
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:77
#: transformers.AutoModelForSequenceClassification.from_pretrained:98
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:63
#: transformers.AutoModelForTokenClassification.from_pretrained:87
#: transformers.AutoTokenizer.from_pretrained:98
#: transformers.FlaxAutoModel.from_pretrained:67
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:55
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:54
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:59
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:57
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:54
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:62
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:59
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:57
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:59
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:57
#: transformers.TFAutoModel.from_pretrained:88
#: transformers.TFAutoModelForCausalLM.from_pretrained:62
#: transformers.TFAutoModelForMaskedLM.from_pretrained:70
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:70
#: transformers.TFAutoModelForPreTraining.from_pretrained:74
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:70
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:62
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:75
#: transformers.TFAutoModelForTokenClassification.from_pretrained:71
msgid ""
"The specific model version to use. It can be a branch name, a tag name, "
"or a commit id, since we use a git-based system for storing models and "
"other artifacts on huggingface.co, so ``revision`` can be any identifier "
"allowed by git."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:98
msgid ""
"If :obj:`False`, then this function returns just the final configuration "
"object.  If :obj:`True`, then this functions returns a "
":obj:`Tuple(config, unused_kwargs)` where `unused_kwargs` is a dictionary"
" consisting of the key/value pairs whose keys are not configuration "
"attributes: i.e., the part of ``kwargs`` which has not been used to "
"update ``config`` and is otherwise ignored."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:98
msgid ""
"If :obj:`False`, then this function returns just the final configuration "
"object."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:100
msgid ""
"If :obj:`True`, then this functions returns a :obj:`Tuple(config, "
"unused_kwargs)` where `unused_kwargs` is a dictionary consisting of the "
"key/value pairs whose keys are not configuration attributes: i.e., the "
"part of ``kwargs`` which has not been used to update ``config`` and is "
"otherwise ignored."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:104
msgid ""
"The values in kwargs of any keys which are configuration attributes will "
"be used to override the loaded values. Behavior concerning key/value "
"pairs whose keys are *not* configuration attributes is controlled by the "
"``return_unused_kwargs`` keyword parameter."
msgstr ""

#: of transformers.AutoConfig.from_pretrained:109
#: transformers.AutoFeatureExtractor.from_pretrained:58
#: transformers.AutoModel.from_config:73
#: transformers.AutoModel.from_pretrained:140
#: transformers.AutoModelForCausalLM.from_config:39
#: transformers.AutoModelForCausalLM.from_pretrained:106
#: transformers.AutoModelForImageClassification.from_config:16
#: transformers.AutoModelForImageClassification.from_pretrained:83
#: transformers.AutoModelForMaskedLM.from_config:41
#: transformers.AutoModelForMaskedLM.from_pretrained:108
#: transformers.AutoModelForMultipleChoice.from_config:35
#: transformers.AutoModelForMultipleChoice.from_pretrained:102
#: transformers.AutoModelForNextSentencePrediction.from_config:16
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:83
#: transformers.AutoModelForPreTraining.from_config:46
#: transformers.AutoModelForPreTraining.from_pretrained:113
#: transformers.AutoModelForQuestionAnswering.from_config:43
#: transformers.AutoModelForQuestionAnswering.from_pretrained:110
#: transformers.AutoModelForSeq2SeqLM.from_config:28
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:95
#: transformers.AutoModelForSequenceClassification.from_config:49
#: transformers.AutoModelForSequenceClassification.from_pretrained:116
#: transformers.AutoModelForTableQuestionAnswering.from_config:14
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:81
#: transformers.AutoModelForTokenClassification.from_config:38
#: transformers.AutoModelForTokenClassification.from_pretrained:105
#: transformers.AutoTokenizer.from_pretrained:111
#: transformers.FlaxAutoModel.from_config:27
#: transformers.FlaxAutoModel.from_pretrained:85
#: transformers.FlaxAutoModelForCausalLM.from_config:15
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:73
#: transformers.FlaxAutoModelForImageClassification.from_config:14
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:72
#: transformers.FlaxAutoModelForMaskedLM.from_config:19
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:77
#: transformers.FlaxAutoModelForMultipleChoice.from_config:17
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:75
#: transformers.FlaxAutoModelForNextSentencePrediction.from_config:14
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:72
#: transformers.FlaxAutoModelForPreTraining.from_config:22
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:80
#: transformers.FlaxAutoModelForQuestionAnswering.from_config:19
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:77
#: transformers.FlaxAutoModelForSeq2SeqLM.from_config:17
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:75
#: transformers.FlaxAutoModelForSequenceClassification.from_config:19
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:77
#: transformers.FlaxAutoModelForTokenClassification.from_config:17
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:75
#: transformers.TFAutoModel.from_config:48
#: transformers.TFAutoModel.from_pretrained:106
#: transformers.TFAutoModelForCausalLM.from_config:22
#: transformers.TFAutoModelForCausalLM.from_pretrained:80
#: transformers.TFAutoModelForMaskedLM.from_config:30
#: transformers.TFAutoModelForMaskedLM.from_pretrained:88
#: transformers.TFAutoModelForMultipleChoice.from_config:30
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:88
#: transformers.TFAutoModelForPreTraining.from_config:34
#: transformers.TFAutoModelForPreTraining.from_pretrained:92
#: transformers.TFAutoModelForQuestionAnswering.from_config:30
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:88
#: transformers.TFAutoModelForSeq2SeqLM.from_config:22
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:80
#: transformers.TFAutoModelForSequenceClassification.from_config:35
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:93
#: transformers.TFAutoModelForTokenClassification.from_config:31
#: transformers.TFAutoModelForTokenClassification.from_pretrained:89
msgid "Examples::"
msgstr ""

#: ../../source/model_doc/auto.rst:41
msgid "AutoTokenizer"
msgstr ""

#: of transformers.AutoTokenizer:1
msgid ""
"This is a generic tokenizer class that will be instantiated as one of the"
" tokenizer classes of the library when created with the "
":meth:`AutoTokenizer.from_pretrained` class method."
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:1
msgid ""
"Instantiate one of the tokenizer classes of the library from a pretrained"
" model vocabulary."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:3
#: transformers.AutoTokenizer.from_pretrained:3
msgid ""
"The tokenizer class to instantiate is selected based on the "
":obj:`model_type` property of the config object (either passed as an "
"argument or loaded from :obj:`pretrained_model_name_or_path` if "
"possible), or when it's missing, by falling back to using pattern "
"matching on :obj:`pretrained_model_name_or_path`:"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:7
msgid ""
"**albert** -- :class:`~transformers.AlbertTokenizer` or "
":class:`~transformers.AlbertTokenizerFast` (ALBERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:8
msgid ""
"**bart** -- :class:`~transformers.BartTokenizer` or "
":class:`~transformers.BartTokenizerFast` (BART model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:9
msgid ""
"**barthez** -- :class:`~transformers.BarthezTokenizer` or "
":class:`~transformers.BarthezTokenizerFast` (BARThez model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:10
msgid ""
"**bert** -- :class:`~transformers.BertTokenizer` or "
":class:`~transformers.BertTokenizerFast` (BERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:11
msgid ""
"**bert-generation** -- :class:`~transformers.BertGenerationTokenizer` "
"(Bert Generation model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:12
msgid ""
"**bert-japanese** -- :class:`~transformers.BertJapaneseTokenizer` "
"(BertJapanese model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:13
msgid "**bertweet** -- :class:`~transformers.BertweetTokenizer` (Bertweet model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:14
msgid ""
"**big_bird** -- :class:`~transformers.BigBirdTokenizer` or "
":class:`~transformers.BigBirdTokenizerFast` (BigBird model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:15
msgid ""
"**bigbird_pegasus** -- :class:`~transformers.PegasusTokenizer` or "
":class:`~transformers.PegasusTokenizerFast` (BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:16
msgid ""
"**blenderbot** -- :class:`~transformers.BlenderbotTokenizer` (Blenderbot "
"model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:17
msgid ""
"**blenderbot-small** -- :class:`~transformers.BlenderbotSmallTokenizer` "
"(BlenderbotSmall model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:18
msgid "**byt5** -- :class:`~transformers.ByT5Tokenizer` (ByT5 model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:19
msgid ""
"**camembert** -- :class:`~transformers.CamembertTokenizer` or "
":class:`~transformers.CamembertTokenizerFast` (CamemBERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:20
msgid "**canine** -- :class:`~transformers.CanineTokenizer` (Canine model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:21
msgid ""
"**convbert** -- :class:`~transformers.ConvBertTokenizer` or "
":class:`~transformers.ConvBertTokenizerFast` (ConvBERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:22
msgid ""
"**cpm** -- :class:`~transformers.CpmTokenizer` or "
":class:`~transformers.CpmTokenizerFast` (CPM model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:23
msgid "**ctrl** -- :class:`~transformers.CTRLTokenizer` (CTRL model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:24
msgid ""
"**deberta** -- :class:`~transformers.DebertaTokenizer` or "
":class:`~transformers.DebertaTokenizerFast` (DeBERTa model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:25
msgid ""
"**deberta-v2** -- :class:`~transformers.DebertaV2Tokenizer` (DeBERTa-v2 "
"model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:26
msgid ""
"**distilbert** -- :class:`~transformers.DistilBertTokenizer` or "
":class:`~transformers.DistilBertTokenizerFast` (DistilBERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:27
msgid ""
"**dpr** -- :class:`~transformers.DPRQuestionEncoderTokenizer` or "
":class:`~transformers.DPRQuestionEncoderTokenizerFast` (DPR model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:28
msgid ""
"**electra** -- :class:`~transformers.ElectraTokenizer` or "
":class:`~transformers.ElectraTokenizerFast` (ELECTRA model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:29
msgid "**flaubert** -- :class:`~transformers.FlaubertTokenizer` (FlauBERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:30
msgid ""
"**fsmt** -- :class:`~transformers.FSMTTokenizer` (FairSeq Machine-"
"Translation model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:31
msgid ""
"**funnel** -- :class:`~transformers.FunnelTokenizer` or "
":class:`~transformers.FunnelTokenizerFast` (Funnel Transformer model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:32
msgid ""
"**gpt2** -- :class:`~transformers.GPT2Tokenizer` or "
":class:`~transformers.GPT2TokenizerFast` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:33
msgid ""
"**gpt_neo** -- :class:`~transformers.GPT2Tokenizer` or "
":class:`~transformers.GPT2TokenizerFast` (GPT Neo model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:34
msgid "**hubert** -- :class:`~transformers.Wav2Vec2CTCTokenizer` (Hubert model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:35
msgid ""
"**ibert** -- :class:`~transformers.RobertaTokenizer` or "
":class:`~transformers.RobertaTokenizerFast` (I-BERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:36
msgid ""
"**layoutlm** -- :class:`~transformers.LayoutLMTokenizer` or "
":class:`~transformers.LayoutLMTokenizerFast` (LayoutLM model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:37
msgid ""
"**led** -- :class:`~transformers.LEDTokenizer` or "
":class:`~transformers.LEDTokenizerFast` (LED model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:38
msgid ""
"**longformer** -- :class:`~transformers.LongformerTokenizer` or "
":class:`~transformers.LongformerTokenizerFast` (Longformer model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:39
msgid "**luke** -- :class:`~transformers.LukeTokenizer` (LUKE model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:40
msgid ""
"**lxmert** -- :class:`~transformers.LxmertTokenizer` or "
":class:`~transformers.LxmertTokenizerFast` (LXMERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:41
msgid "**m2m_100** -- :class:`~transformers.M2M100Tokenizer` (M2M100 model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:42
msgid "**marian** -- :class:`~transformers.MarianTokenizer` (Marian model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:43
msgid ""
"**mbart** -- :class:`~transformers.MBartTokenizer` or "
":class:`~transformers.MBartTokenizerFast` (mBART model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:44
msgid ""
"**mbart50** -- :class:`~transformers.MBart50Tokenizer` or "
":class:`~transformers.MBart50TokenizerFast` (mBART-50 model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:45
msgid ""
"**mobilebert** -- :class:`~transformers.MobileBertTokenizer` or "
":class:`~transformers.MobileBertTokenizerFast` (MobileBERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:46
msgid ""
"**mpnet** -- :class:`~transformers.MPNetTokenizer` or "
":class:`~transformers.MPNetTokenizerFast` (MPNet model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:47
msgid ""
"**mt5** -- :class:`~transformers.MT5Tokenizer` or "
":class:`~transformers.MT5TokenizerFast` (mT5 model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:48
msgid ""
"**openai-gpt** -- :class:`~transformers.OpenAIGPTTokenizer` or "
":class:`~transformers.OpenAIGPTTokenizerFast` (OpenAI GPT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:49
msgid ""
"**pegasus** -- :class:`~transformers.PegasusTokenizer` or "
":class:`~transformers.PegasusTokenizerFast` (Pegasus model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:50
msgid "**phobert** -- :class:`~transformers.PhobertTokenizer` (PhoBERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:51
msgid ""
"**prophetnet** -- :class:`~transformers.ProphetNetTokenizer` (ProphetNet "
"model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:52
msgid "**rag** -- :class:`~transformers.RagTokenizer` (RAG model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:53
msgid ""
"**reformer** -- :class:`~transformers.ReformerTokenizer` or "
":class:`~transformers.ReformerTokenizerFast` (Reformer model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:54
msgid ""
"**retribert** -- :class:`~transformers.RetriBertTokenizer` or "
":class:`~transformers.RetriBertTokenizerFast` (RetriBERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:55
msgid ""
"**roberta** -- :class:`~transformers.RobertaTokenizer` or "
":class:`~transformers.RobertaTokenizerFast` (RoBERTa model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:56
msgid ""
"**roformer** -- :class:`~transformers.RoFormerTokenizer` or "
":class:`~transformers.RoFormerTokenizerFast` (RoFormer model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:57
msgid ""
"**speech_to_text** -- :class:`~transformers.Speech2TextTokenizer` "
"(Speech2Text model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:58
msgid ""
"**squeezebert** -- :class:`~transformers.SqueezeBertTokenizer` or "
":class:`~transformers.SqueezeBertTokenizerFast` (SqueezeBERT model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:59
msgid ""
"**t5** -- :class:`~transformers.T5Tokenizer` or "
":class:`~transformers.T5TokenizerFast` (T5 model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:60
msgid "**tapas** -- :class:`~transformers.TapasTokenizer` (TAPAS model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:61
msgid ""
"**transfo-xl** -- :class:`~transformers.TransfoXLTokenizer` (Transformer-"
"XL model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:62
msgid ""
"**wav2vec2** -- :class:`~transformers.Wav2Vec2CTCTokenizer` (Wav2Vec2 "
"model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:63
msgid "**xlm** -- :class:`~transformers.XLMTokenizer` (XLM model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:64
msgid ""
"**xlm-prophetnet** -- :class:`~transformers.XLMProphetNetTokenizer` "
"(XLMProphetNet model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:65
msgid ""
"**xlm-roberta** -- :class:`~transformers.XLMRobertaTokenizer` or "
":class:`~transformers.XLMRobertaTokenizerFast` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:66
msgid ""
"**xlnet** -- :class:`~transformers.XLNetTokenizer` or "
":class:`~transformers.XLNetTokenizerFast` (XLNet model)"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:52
#: transformers.AutoTokenizer.from_pretrained:109
msgid "Params:"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:23
#: transformers.AutoTokenizer.from_pretrained:79
msgid "pretrained_model_name_or_path (:obj:`str` or :obj:`os.PathLike`):"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:72
msgid ""
"A string, the `model id` of a predefined tokenizer hosted inside a model "
"repo on huggingface.co. Valid model ids can be located at the root-level,"
" like ``bert-base-uncased``, or namespaced under a user or organization "
"name, like ``dbmdz/bert-base-german-cased``."
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:75
msgid ""
"A path to a `directory` containing vocabulary files required by the "
"tokenizer, for instance saved using the "
":func:`~transformers.PreTrainedTokenizer.save_pretrained` method, e.g., "
"``./my_model_directory/``."
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:78
msgid ""
"A path or url to a single saved vocabulary file if and only if the "
"tokenizer only requires a single vocabulary file (like Bert or XLNet), "
"e.g.: ``./my_model_directory/vocab.txt``. (Not applicable to all derived "
"classes)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:81
msgid "inputs (additional positional arguments, `optional`):"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:82
msgid "Will be passed along to the Tokenizer ``__init__()`` method."
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:83
msgid "config (:class:`~transformers.PretrainedConfig`, `optional`)"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:84
msgid ""
"The configuration object used to dertermine the tokenizer class to "
"instantiate."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:26
#: transformers.AutoTokenizer.from_pretrained:86
msgid "cache_dir (:obj:`str` or :obj:`os.PathLike`, `optional`):"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:29
#: transformers.AutoTokenizer.from_pretrained:89
msgid "force_download (:obj:`bool`, `optional`, defaults to :obj:`False`):"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:32
#: transformers.AutoTokenizer.from_pretrained:92
msgid "resume_download (:obj:`bool`, `optional`, defaults to :obj:`False`):"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:35
#: transformers.AutoTokenizer.from_pretrained:95
msgid "proxies (:obj:`Dict[str, str]`, `optional`):"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:42
#: transformers.AutoTokenizer.from_pretrained:99
msgid "revision(:obj:`str`, `optional`, defaults to :obj:`\"main\"`):"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:102
msgid "subfolder (:obj:`str`, `optional`):"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:102
msgid ""
"In case the relevant files are located inside a subfolder of the model "
"repo on huggingface.co (e.g. for facebook/rag-token-base), specify it "
"here."
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:104
msgid "use_fast (:obj:`bool`, `optional`, defaults to :obj:`True`):"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:105
msgid "Whether or not to try to load the fast version of the tokenizer."
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:109
msgid "kwargs (additional keyword arguments, `optional`):"
msgstr ""

#: of transformers.AutoTokenizer.from_pretrained:107
msgid ""
"Will be passed to the Tokenizer ``__init__()`` method. Can be used to set"
" special tokens like ``bos_token``, ``eos_token``, ``unk_token``, "
"``sep_token``, ``pad_token``, ``cls_token``, ``mask_token``, "
"``additional_special_tokens``. See parameters in the ``__init__()`` for "
"more details."
msgstr ""

#: ../../source/model_doc/auto.rst:48
msgid "AutoFeatureExtractor"
msgstr ""

#: of transformers.AutoFeatureExtractor:1
msgid ""
"This is a generic feature extractor class that will be instantiated as "
"one of the feature extractor classes of the library when created with the"
" :meth:`AutoFeatureExtractor.from_pretrained` class method."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:1
msgid ""
"Instantiate one of the feature extractor classes of the library from a "
"pretrained model vocabulary."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:7
msgid "**beit** -- :class:`~transformers.BeitFeatureExtractor` (BeiT model)"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:8
msgid "**deit** -- :class:`~transformers.DeiTFeatureExtractor` (DeiT model)"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:9
msgid ""
"**speech_to_text** -- :class:`~transformers.Speech2TextFeatureExtractor` "
"(Speech2Text model)"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:10
msgid "**vit** -- :class:`~transformers.ViTFeatureExtractor` (ViT model)"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:11
msgid ""
"**wav2vec2** -- :class:`~transformers.Wav2Vec2FeatureExtractor` (Wav2Vec2"
" model)"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:15
msgid "This can be either:"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:17
msgid ""
"a string, the `model id` of a pretrained feature_extractor hosted inside "
"a model repo on huggingface.co. Valid model ids can be located at the "
"root-level, like ``bert-base-uncased``, or namespaced under a user or "
"organization name, like ``dbmdz/bert-base-german-cased``."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:20
msgid ""
"a path to a `directory` containing a feature extractor file saved using "
"the "
":func:`~transformers.feature_extraction_utils.FeatureExtractionMixin.save_pretrained`"
" method, e.g., ``./my_model_directory/``."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:23
msgid ""
"a path or url to a saved feature extractor JSON `file`, e.g., "
"``./my_model_directory/preprocessor_config.json``."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:26
msgid ""
"Path to a directory in which a downloaded pretrained model feature "
"extractor should be cached if the standard cache should not be used."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:29
msgid ""
"Whether or not to force to (re-)download the feature extractor files and "
"override the cached versions if they exist."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:32
msgid ""
"Whether or not to delete incompletely received file. Attempts to resume "
"the download if such a file exists."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:35
msgid ""
"A dictionary of proxy servers to use by protocol or endpoint, e.g., "
":obj:`{'http': 'foo.bar:3128', 'http://hostname': 'foo.bar:4012'}.` The "
"proxies are used on each request."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:38
msgid "use_auth_token (:obj:`str` or `bool`, `optional`):"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:38
msgid ""
"The token to use as HTTP bearer authorization for remote files. If "
":obj:`True`, will use the token generated when running :obj"
":`transformers-cli login` (stored in :obj:`~/.huggingface`)."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:47
msgid "return_unused_kwargs (:obj:`bool`, `optional`, defaults to :obj:`False`):"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:45
msgid ""
"If :obj:`False`, then this function returns just the final feature "
"extractor object. If :obj:`True`, then this functions returns a "
":obj:`Tuple(feature_extractor, unused_kwargs)` where `unused_kwargs` is a"
" dictionary consisting of the key/value pairs whose keys are not feature "
"extractor attributes: i.e., the part of ``kwargs`` which has not been "
"used to update ``feature_extractor`` and is otherwise ignored."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:52
msgid "kwargs (:obj:`Dict[str, Any]`, `optional`):"
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:50
msgid ""
"The values in kwargs of any keys which are feature extractor attributes "
"will be used to override the loaded values. Behavior concerning key/value"
" pairs whose keys are *not* feature extractor attributes is controlled by"
" the ``return_unused_kwargs`` keyword parameter."
msgstr ""

#: of transformers.AutoFeatureExtractor.from_pretrained:56
msgid ""
"Passing :obj:`use_auth_token=True` is required when you want to use a "
"private model."
msgstr ""

#: ../../source/model_doc/auto.rst:55
msgid "AutoModel"
msgstr ""

#: of transformers.AutoModel:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"base model classes of the library when created with the "
":meth:`~transformers.AutoModel.from_pretrained` class method or the "
":meth:`~transformers.AutoModel.from_config` class method."
msgstr ""

#: of transformers.AutoModel.from_config:1
#: transformers.FlaxAutoModel.from_config:1
#: transformers.TFAutoModel.from_config:1
msgid ""
"Instantiates one of the base model classes of the library from a "
"configuration."
msgstr ""

#: of transformers.AutoModel.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModel.from_pretrained` to load the model "
"weights."
msgstr ""

#: of transformers.AutoModel.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertModel` (ALBERT model) - "
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartModel` (BART model) - "
":class:`~transformers.BeitConfig` configuration class: "
":class:`~transformers.BeitModel` (BeiT model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertModel` (BERT model) - "
":class:`~transformers.BertGenerationConfig` configuration class: "
":class:`~transformers.BertGenerationEncoder` (Bert Generation model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdModel` (BigBird model) - "
":class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusModel` (BigBirdPegasus model) - "
":class:`~transformers.BlenderbotConfig` configuration class: "
":class:`~transformers.BlenderbotModel` (Blenderbot model) - "
":class:`~transformers.BlenderbotSmallConfig` configuration class: "
":class:`~transformers.BlenderbotSmallModel` (BlenderbotSmall model) - "
":class:`~transformers.CLIPConfig` configuration class: "
":class:`~transformers.CLIPModel` (CLIP model) - "
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.CTRLModel` (CTRL model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertModel` (CamemBERT model) - "
":class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineModel` (Canine model) - "
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertModel` (ConvBERT model) - "
":class:`~transformers.DPRConfig` configuration class: "
":class:`~transformers.DPRQuestionEncoder` (DPR model) - "
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaModel` (DeBERTa model) - "
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2Model` (DeBERTa-v2 model) - "
":class:`~transformers.DeiTConfig` configuration class: "
":class:`~transformers.DeiTModel` (DeiT model) - "
":class:`~transformers.DetrConfig` configuration class: "
":class:`~transformers.DetrModel` (DETR model) - "
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertModel` (DistilBERT model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraModel` (ELECTRA model) - "
":class:`~transformers.FSMTConfig` configuration class: "
":class:`~transformers.FSMTModel` (FairSeq Machine-Translation model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertModel` (FlauBERT model) - "
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelModel` or "
":class:`~transformers.FunnelBaseModel` (Funnel Transformer model) - "
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.GPT2Model` (OpenAI GPT-2 model) - "
":class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.GPTNeoModel` (GPT Neo model) - "
":class:`~transformers.HubertConfig` configuration class: "
":class:`~transformers.HubertModel` (Hubert model) - "
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertModel` (I-BERT model) - "
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.LEDModel` (LED model) - "
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.LayoutLMModel` (LayoutLM model) - "
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerModel` (Longformer model) - "
":class:`~transformers.LukeConfig` configuration class: "
":class:`~transformers.LukeModel` (LUKE model) - "
":class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.LxmertModel` (LXMERT model) - "
":class:`~transformers.M2M100Config` configuration class: "
":class:`~transformers.M2M100Model` (M2M100 model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartModel` (mBART model) - "
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetModel` (MPNet model) - "
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.MT5Model` (mT5 model) - "
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.MarianModel` (Marian model) - "
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertModel` (MegatronBert model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertModel` (MobileBERT model) - "
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.OpenAIGPTModel` (OpenAI GPT model) - "
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.PegasusModel` (Pegasus model) - "
":class:`~transformers.ProphetNetConfig` configuration class: "
":class:`~transformers.ProphetNetModel` (ProphetNet model) - "
":class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerModel` (Reformer model) - "
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertModel` (RemBERT model) - "
":class:`~transformers.RetriBertConfig` configuration class: "
":class:`~transformers.RetriBertModel` (RetriBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerModel` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaModel` (RoBERTa model) - "
":class:`~transformers.Speech2TextConfig` configuration class: "
":class:`~transformers.Speech2TextModel` (Speech2Text model) - "
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertModel` (SqueezeBERT model) - "
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.T5Model` (T5 model) - "
":class:`~transformers.TapasConfig` configuration class: "
":class:`~transformers.TapasModel` (TAPAS model) - "
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TransfoXLModel` (Transformer-XL model) - "
":class:`~transformers.ViTConfig` configuration class: "
":class:`~transformers.ViTModel` (ViT model) - "
":class:`~transformers.VisualBertConfig` configuration class: "
":class:`~transformers.VisualBertModel` (VisualBert model) - "
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.Wav2Vec2Model` (Wav2Vec2 model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMModel` (XLM model) - "
":class:`~transformers.XLMProphetNetConfig` configuration class: "
":class:`~transformers.XLMProphetNetModel` (XLMProphetNet model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaModel` (XLM-RoBERTa model) - "
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetModel` (XLNet model)"
msgstr ""

#: of transformers.AutoModel.from_config:9
#: transformers.AutoModelForCausalLM.from_config:9
#: transformers.AutoModelForImageClassification.from_config:9
#: transformers.AutoModelForMaskedLM.from_config:9
#: transformers.AutoModelForMultipleChoice.from_config:9
#: transformers.AutoModelForNextSentencePrediction.from_config:9
#: transformers.AutoModelForPreTraining.from_config:9
#: transformers.AutoModelForQuestionAnswering.from_config:9
#: transformers.AutoModelForSeq2SeqLM.from_config:9
#: transformers.AutoModelForSequenceClassification.from_config:9
#: transformers.AutoModelForTableQuestionAnswering.from_config:9
#: transformers.AutoModelForTokenClassification.from_config:9
#: transformers.FlaxAutoModel.from_config:9
#: transformers.FlaxAutoModelForCausalLM.from_config:9
#: transformers.FlaxAutoModelForImageClassification.from_config:9
#: transformers.FlaxAutoModelForMaskedLM.from_config:9
#: transformers.FlaxAutoModelForMultipleChoice.from_config:9
#: transformers.FlaxAutoModelForNextSentencePrediction.from_config:9
#: transformers.FlaxAutoModelForPreTraining.from_config:9
#: transformers.FlaxAutoModelForQuestionAnswering.from_config:9
#: transformers.FlaxAutoModelForSeq2SeqLM.from_config:9
#: transformers.FlaxAutoModelForSequenceClassification.from_config:9
#: transformers.FlaxAutoModelForTokenClassification.from_config:9
#: transformers.TFAutoModel.from_config:9
#: transformers.TFAutoModelForCausalLM.from_config:9
#: transformers.TFAutoModelForMaskedLM.from_config:9
#: transformers.TFAutoModelForMultipleChoice.from_config:9
#: transformers.TFAutoModelForPreTraining.from_config:9
#: transformers.TFAutoModelForQuestionAnswering.from_config:9
#: transformers.TFAutoModelForSeq2SeqLM.from_config:9
#: transformers.TFAutoModelForSequenceClassification.from_config:9
#: transformers.TFAutoModelForTokenClassification.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:"
msgstr ""

#: of transformers.AutoModel.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertModel` (ALBERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:12
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartModel` (BART model)"
msgstr ""

#: of transformers.AutoModel.from_config:13
msgid ""
":class:`~transformers.BeitConfig` configuration class: "
":class:`~transformers.BeitModel` (BeiT model)"
msgstr ""

#: of transformers.AutoModel.from_config:14
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertModel` (BERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:15
msgid ""
":class:`~transformers.BertGenerationConfig` configuration class: "
":class:`~transformers.BertGenerationEncoder` (Bert Generation model)"
msgstr ""

#: of transformers.AutoModel.from_config:16
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdModel` (BigBird model)"
msgstr ""

#: of transformers.AutoModel.from_config:17
msgid ""
":class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusModel` (BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoModel.from_config:18
msgid ""
":class:`~transformers.BlenderbotConfig` configuration class: "
":class:`~transformers.BlenderbotModel` (Blenderbot model)"
msgstr ""

#: of transformers.AutoModel.from_config:19
msgid ""
":class:`~transformers.BlenderbotSmallConfig` configuration class: "
":class:`~transformers.BlenderbotSmallModel` (BlenderbotSmall model)"
msgstr ""

#: of transformers.AutoModel.from_config:20
msgid ""
":class:`~transformers.CLIPConfig` configuration class: "
":class:`~transformers.CLIPModel` (CLIP model)"
msgstr ""

#: of transformers.AutoModel.from_config:21
msgid ""
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.CTRLModel` (CTRL model)"
msgstr ""

#: of transformers.AutoModel.from_config:22
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertModel` (CamemBERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:23
msgid ""
":class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineModel` (Canine model)"
msgstr ""

#: of transformers.AutoModel.from_config:24
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertModel` (ConvBERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:25
msgid ""
":class:`~transformers.DPRConfig` configuration class: "
":class:`~transformers.DPRQuestionEncoder` (DPR model)"
msgstr ""

#: of transformers.AutoModel.from_config:26
msgid ""
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaModel` (DeBERTa model)"
msgstr ""

#: of transformers.AutoModel.from_config:27
msgid ""
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2Model` (DeBERTa-v2 model)"
msgstr ""

#: of transformers.AutoModel.from_config:28
msgid ""
":class:`~transformers.DeiTConfig` configuration class: "
":class:`~transformers.DeiTModel` (DeiT model)"
msgstr ""

#: of transformers.AutoModel.from_config:29
msgid ""
":class:`~transformers.DetrConfig` configuration class: "
":class:`~transformers.DetrModel` (DETR model)"
msgstr ""

#: of transformers.AutoModel.from_config:30
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertModel` (DistilBERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:31
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraModel` (ELECTRA model)"
msgstr ""

#: of transformers.AutoModel.from_config:32
msgid ""
":class:`~transformers.FSMTConfig` configuration class: "
":class:`~transformers.FSMTModel` (FairSeq Machine-Translation model)"
msgstr ""

#: of transformers.AutoModel.from_config:33
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertModel` (FlauBERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:34
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelModel` or "
":class:`~transformers.FunnelBaseModel` (Funnel Transformer model)"
msgstr ""

#: of transformers.AutoModel.from_config:35
msgid ""
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.GPT2Model` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.AutoModel.from_config:36
msgid ""
":class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.GPTNeoModel` (GPT Neo model)"
msgstr ""

#: of transformers.AutoModel.from_config:37
msgid ""
":class:`~transformers.HubertConfig` configuration class: "
":class:`~transformers.HubertModel` (Hubert model)"
msgstr ""

#: of transformers.AutoModel.from_config:38
msgid ""
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertModel` (I-BERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:39
msgid ""
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.LEDModel` (LED model)"
msgstr ""

#: of transformers.AutoModel.from_config:40
msgid ""
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.LayoutLMModel` (LayoutLM model)"
msgstr ""

#: of transformers.AutoModel.from_config:41
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerModel` (Longformer model)"
msgstr ""

#: of transformers.AutoModel.from_config:42
msgid ""
":class:`~transformers.LukeConfig` configuration class: "
":class:`~transformers.LukeModel` (LUKE model)"
msgstr ""

#: of transformers.AutoModel.from_config:43
msgid ""
":class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.LxmertModel` (LXMERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:44
msgid ""
":class:`~transformers.M2M100Config` configuration class: "
":class:`~transformers.M2M100Model` (M2M100 model)"
msgstr ""

#: of transformers.AutoModel.from_config:45
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartModel` (mBART model)"
msgstr ""

#: of transformers.AutoModel.from_config:46
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetModel` (MPNet model)"
msgstr ""

#: of transformers.AutoModel.from_config:47
msgid ""
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.MT5Model` (mT5 model)"
msgstr ""

#: of transformers.AutoModel.from_config:48
msgid ""
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.MarianModel` (Marian model)"
msgstr ""

#: of transformers.AutoModel.from_config:49
msgid ""
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertModel` (MegatronBert model)"
msgstr ""

#: of transformers.AutoModel.from_config:50
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertModel` (MobileBERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:51
msgid ""
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.OpenAIGPTModel` (OpenAI GPT model)"
msgstr ""

#: of transformers.AutoModel.from_config:52
msgid ""
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.PegasusModel` (Pegasus model)"
msgstr ""

#: of transformers.AutoModel.from_config:53
msgid ""
":class:`~transformers.ProphetNetConfig` configuration class: "
":class:`~transformers.ProphetNetModel` (ProphetNet model)"
msgstr ""

#: of transformers.AutoModel.from_config:54
msgid ""
":class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerModel` (Reformer model)"
msgstr ""

#: of transformers.AutoModel.from_config:55
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertModel` (RemBERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:56
#: transformers.AutoModelForPreTraining.from_config:33
msgid ""
":class:`~transformers.RetriBertConfig` configuration class: "
":class:`~transformers.RetriBertModel` (RetriBERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:57
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerModel` (RoFormer model)"
msgstr ""

#: of transformers.AutoModel.from_config:58
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaModel` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModel.from_config:59
msgid ""
":class:`~transformers.Speech2TextConfig` configuration class: "
":class:`~transformers.Speech2TextModel` (Speech2Text model)"
msgstr ""

#: of transformers.AutoModel.from_config:60
msgid ""
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertModel` (SqueezeBERT model)"
msgstr ""

#: of transformers.AutoModel.from_config:61
msgid ""
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.T5Model` (T5 model)"
msgstr ""

#: of transformers.AutoModel.from_config:62
msgid ""
":class:`~transformers.TapasConfig` configuration class: "
":class:`~transformers.TapasModel` (TAPAS model)"
msgstr ""

#: of transformers.AutoModel.from_config:63
msgid ""
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TransfoXLModel` (Transformer-XL model)"
msgstr ""

#: of transformers.AutoModel.from_config:64
msgid ""
":class:`~transformers.ViTConfig` configuration class: "
":class:`~transformers.ViTModel` (ViT model)"
msgstr ""

#: of transformers.AutoModel.from_config:65
msgid ""
":class:`~transformers.VisualBertConfig` configuration class: "
":class:`~transformers.VisualBertModel` (VisualBert model)"
msgstr ""

#: of transformers.AutoModel.from_config:66
msgid ""
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.Wav2Vec2Model` (Wav2Vec2 model)"
msgstr ""

#: of transformers.AutoModel.from_config:67
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMModel` (XLM model)"
msgstr ""

#: of transformers.AutoModel.from_config:68
msgid ""
":class:`~transformers.XLMProphetNetConfig` configuration class: "
":class:`~transformers.XLMProphetNetModel` (XLMProphetNet model)"
msgstr ""

#: of transformers.AutoModel.from_config:69
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaModel` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.AutoModel.from_config:70
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetModel` (XLNet model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:1
#: transformers.FlaxAutoModel.from_pretrained:1
#: transformers.TFAutoModel.from_pretrained:1
msgid ""
"Instantiate one of the base model classes of the library from a "
"pretrained model."
msgstr ""

#: of transformers.AutoModel.from_pretrained:3
#: transformers.AutoModelForCausalLM.from_pretrained:3
#: transformers.AutoModelForImageClassification.from_pretrained:3
#: transformers.AutoModelForMaskedLM.from_pretrained:3
#: transformers.AutoModelForMultipleChoice.from_pretrained:3
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:3
#: transformers.AutoModelForPreTraining.from_pretrained:3
#: transformers.AutoModelForQuestionAnswering.from_pretrained:3
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:3
#: transformers.AutoModelForSequenceClassification.from_pretrained:3
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:3
#: transformers.AutoModelForTokenClassification.from_pretrained:3
#: transformers.FlaxAutoModel.from_pretrained:3
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:3
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:3
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:3
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:3
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:3
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:3
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:3
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:3
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:3
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:3
#: transformers.TFAutoModel.from_pretrained:3
#: transformers.TFAutoModelForCausalLM.from_pretrained:3
#: transformers.TFAutoModelForMaskedLM.from_pretrained:3
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:3
#: transformers.TFAutoModelForPreTraining.from_pretrained:3
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:3
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:3
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:3
#: transformers.TFAutoModelForTokenClassification.from_pretrained:3
msgid ""
"The model class to instantiate is selected based on the :obj:`model_type`"
" property of the config object (either passed as an argument or loaded "
"from :obj:`pretrained_model_name_or_path` if possible), or when it's "
"missing, by falling back to using pattern matching on "
":obj:`pretrained_model_name_or_path`:"
msgstr ""

#: of transformers.AutoModel.from_pretrained:7
msgid "**albert** -- :class:`~transformers.AlbertModel` (ALBERT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:8
msgid "**bart** -- :class:`~transformers.BartModel` (BART model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:9
msgid "**beit** -- :class:`~transformers.BeitModel` (BeiT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:10
msgid "**bert** -- :class:`~transformers.BertModel` (BERT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:11
msgid ""
"**bert-generation** -- :class:`~transformers.BertGenerationEncoder` (Bert"
" Generation model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:12
msgid "**big_bird** -- :class:`~transformers.BigBirdModel` (BigBird model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:13
msgid ""
"**bigbird_pegasus** -- :class:`~transformers.BigBirdPegasusModel` "
"(BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:14
msgid ""
"**blenderbot** -- :class:`~transformers.BlenderbotModel` (Blenderbot "
"model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:15
msgid ""
"**blenderbot-small** -- :class:`~transformers.BlenderbotSmallModel` "
"(BlenderbotSmall model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:16
msgid "**camembert** -- :class:`~transformers.CamembertModel` (CamemBERT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:17
msgid "**canine** -- :class:`~transformers.CanineModel` (Canine model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:18
msgid "**clip** -- :class:`~transformers.CLIPModel` (CLIP model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:19
msgid "**convbert** -- :class:`~transformers.ConvBertModel` (ConvBERT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:20
msgid "**ctrl** -- :class:`~transformers.CTRLModel` (CTRL model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:21
msgid "**deberta** -- :class:`~transformers.DebertaModel` (DeBERTa model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:22
msgid "**deberta-v2** -- :class:`~transformers.DebertaV2Model` (DeBERTa-v2 model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:23
msgid "**deit** -- :class:`~transformers.DeiTModel` (DeiT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:24
msgid "**detr** -- :class:`~transformers.DetrModel` (DETR model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:25
msgid ""
"**distilbert** -- :class:`~transformers.DistilBertModel` (DistilBERT "
"model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:26
msgid "**dpr** -- :class:`~transformers.DPRQuestionEncoder` (DPR model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:27
msgid "**electra** -- :class:`~transformers.ElectraModel` (ELECTRA model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:28
msgid "**flaubert** -- :class:`~transformers.FlaubertModel` (FlauBERT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:29
msgid ""
"**fsmt** -- :class:`~transformers.FSMTModel` (FairSeq Machine-Translation"
" model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:30
msgid ""
"**funnel** -- :class:`~transformers.FunnelModel` or "
":class:`~transformers.FunnelBaseModel` (Funnel Transformer model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:31
msgid "**gpt2** -- :class:`~transformers.GPT2Model` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:32
msgid "**gpt_neo** -- :class:`~transformers.GPTNeoModel` (GPT Neo model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:33
msgid "**hubert** -- :class:`~transformers.HubertModel` (Hubert model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:34
msgid "**ibert** -- :class:`~transformers.IBertModel` (I-BERT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:35
msgid "**layoutlm** -- :class:`~transformers.LayoutLMModel` (LayoutLM model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:36
msgid "**led** -- :class:`~transformers.LEDModel` (LED model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:37
msgid ""
"**longformer** -- :class:`~transformers.LongformerModel` (Longformer "
"model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:38
msgid "**luke** -- :class:`~transformers.LukeModel` (LUKE model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:39
msgid "**lxmert** -- :class:`~transformers.LxmertModel` (LXMERT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:40
msgid "**m2m_100** -- :class:`~transformers.M2M100Model` (M2M100 model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:41
msgid "**marian** -- :class:`~transformers.MarianModel` (Marian model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:42
msgid "**mbart** -- :class:`~transformers.MBartModel` (mBART model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:43
msgid ""
"**megatron-bert** -- :class:`~transformers.MegatronBertModel` "
"(MegatronBert model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:44
msgid ""
"**mobilebert** -- :class:`~transformers.MobileBertModel` (MobileBERT "
"model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:45
msgid "**mpnet** -- :class:`~transformers.MPNetModel` (MPNet model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:46
msgid "**mt5** -- :class:`~transformers.MT5Model` (mT5 model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:47
msgid "**openai-gpt** -- :class:`~transformers.OpenAIGPTModel` (OpenAI GPT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:48
msgid "**pegasus** -- :class:`~transformers.PegasusModel` (Pegasus model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:49
msgid ""
"**prophetnet** -- :class:`~transformers.ProphetNetModel` (ProphetNet "
"model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:50
msgid "**reformer** -- :class:`~transformers.ReformerModel` (Reformer model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:51
msgid "**rembert** -- :class:`~transformers.RemBertModel` (RemBERT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:52
#: transformers.AutoModelForPreTraining.from_pretrained:29
msgid "**retribert** -- :class:`~transformers.RetriBertModel` (RetriBERT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:53
msgid "**roberta** -- :class:`~transformers.RobertaModel` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:54
msgid "**roformer** -- :class:`~transformers.RoFormerModel` (RoFormer model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:55
msgid ""
"**speech_to_text** -- :class:`~transformers.Speech2TextModel` "
"(Speech2Text model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:56
msgid ""
"**squeezebert** -- :class:`~transformers.SqueezeBertModel` (SqueezeBERT "
"model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:57
msgid "**t5** -- :class:`~transformers.T5Model` (T5 model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:58
msgid "**tapas** -- :class:`~transformers.TapasModel` (TAPAS model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:59
msgid ""
"**transfo-xl** -- :class:`~transformers.TransfoXLModel` (Transformer-XL "
"model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:60
msgid ""
"**visual_bert** -- :class:`~transformers.VisualBertModel` (VisualBert "
"model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:61
msgid "**vit** -- :class:`~transformers.ViTModel` (ViT model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:62
msgid "**wav2vec2** -- :class:`~transformers.Wav2Vec2Model` (Wav2Vec2 model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:63
msgid "**xlm** -- :class:`~transformers.XLMModel` (XLM model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:64
msgid ""
"**xlm-prophetnet** -- :class:`~transformers.XLMProphetNetModel` "
"(XLMProphetNet model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:65
msgid ""
"**xlm-roberta** -- :class:`~transformers.XLMRobertaModel` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:66
msgid "**xlnet** -- :class:`~transformers.XLNetModel` (XLNet model)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:68
#: transformers.AutoModelForCausalLM.from_pretrained:34
#: transformers.AutoModelForImageClassification.from_pretrained:11
#: transformers.AutoModelForMaskedLM.from_pretrained:36
#: transformers.AutoModelForMultipleChoice.from_pretrained:30
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:11
#: transformers.AutoModelForPreTraining.from_pretrained:41
#: transformers.AutoModelForQuestionAnswering.from_pretrained:38
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:23
#: transformers.AutoModelForSequenceClassification.from_pretrained:44
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:9
#: transformers.AutoModelForTokenClassification.from_pretrained:33
msgid ""
"The model is set in evaluation mode by default using ``model.eval()`` (so"
" for instance, dropout modules are deactivated). To train the model, you "
"should first set it back in training mode with ``model.train()``"
msgstr ""

#: of transformers.AutoModel.from_pretrained:71
#: transformers.AutoModelForCausalLM.from_pretrained:37
#: transformers.AutoModelForImageClassification.from_pretrained:14
#: transformers.AutoModelForMaskedLM.from_pretrained:39
#: transformers.AutoModelForMultipleChoice.from_pretrained:33
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:14
#: transformers.AutoModelForPreTraining.from_pretrained:44
#: transformers.AutoModelForQuestionAnswering.from_pretrained:41
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:26
#: transformers.AutoModelForSequenceClassification.from_pretrained:47
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:12
#: transformers.AutoModelForTokenClassification.from_pretrained:36
msgid ""
"Can be either:      - A string, the `model id` of a pretrained model "
"hosted inside a model repo on huggingface.co.       Valid model ids can "
"be located at the root-level, like ``bert-base-uncased``, or namespaced "
"under       a user or organization name, like ``dbmdz/bert-base-german-"
"cased``.     - A path to a `directory` containing model weights saved "
"using       :func:`~transformers.PreTrainedModel.save_pretrained`, e.g., "
"``./my_model_directory/``.     - A path or url to a `tensorflow index "
"checkpoint file` (e.g, ``./tf_model/model.ckpt.index``). In       this "
"case, ``from_tf`` should be set to :obj:`True` and a configuration object"
" should be provided       as ``config`` argument. This loading path is "
"slower than converting the TensorFlow checkpoint in       a PyTorch model"
" using the provided conversion scripts and loading the PyTorch model "
"afterwards."
msgstr ""

#: of transformers.AutoModel.from_pretrained:74
#: transformers.AutoModelForCausalLM.from_pretrained:40
#: transformers.AutoModelForImageClassification.from_pretrained:17
#: transformers.AutoModelForMaskedLM.from_pretrained:42
#: transformers.AutoModelForMultipleChoice.from_pretrained:36
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:17
#: transformers.AutoModelForPreTraining.from_pretrained:47
#: transformers.AutoModelForQuestionAnswering.from_pretrained:44
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:29
#: transformers.AutoModelForSequenceClassification.from_pretrained:50
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:15
#: transformers.AutoModelForTokenClassification.from_pretrained:39
#: transformers.FlaxAutoModel.from_pretrained:25
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:13
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:12
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:17
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:15
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:12
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:20
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:17
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:15
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:17
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:15
#: transformers.TFAutoModel.from_pretrained:46
#: transformers.TFAutoModelForCausalLM.from_pretrained:20
#: transformers.TFAutoModelForMaskedLM.from_pretrained:28
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:28
#: transformers.TFAutoModelForPreTraining.from_pretrained:32
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:28
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:20
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:33
#: transformers.TFAutoModelForTokenClassification.from_pretrained:29
msgid ""
"A string, the `model id` of a pretrained model hosted inside a model repo"
" on huggingface.co. Valid model ids can be located at the root-level, "
"like ``bert-base-uncased``, or namespaced under a user or organization "
"name, like ``dbmdz/bert-base-german-cased``."
msgstr ""

#: of transformers.AutoModel.from_pretrained:77
#: transformers.AutoModelForCausalLM.from_pretrained:43
#: transformers.AutoModelForImageClassification.from_pretrained:20
#: transformers.AutoModelForMaskedLM.from_pretrained:45
#: transformers.AutoModelForMultipleChoice.from_pretrained:39
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:20
#: transformers.AutoModelForPreTraining.from_pretrained:50
#: transformers.AutoModelForQuestionAnswering.from_pretrained:47
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:32
#: transformers.AutoModelForSequenceClassification.from_pretrained:53
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:18
#: transformers.AutoModelForTokenClassification.from_pretrained:42
#: transformers.FlaxAutoModel.from_pretrained:28
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:16
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:15
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:20
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:18
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:15
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:23
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:20
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:18
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:20
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:18
#: transformers.TFAutoModel.from_pretrained:49
#: transformers.TFAutoModelForCausalLM.from_pretrained:23
#: transformers.TFAutoModelForMaskedLM.from_pretrained:31
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:31
#: transformers.TFAutoModelForPreTraining.from_pretrained:35
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:31
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:23
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:36
#: transformers.TFAutoModelForTokenClassification.from_pretrained:32
msgid ""
"A path to a `directory` containing model weights saved using "
":func:`~transformers.PreTrainedModel.save_pretrained`, e.g., "
"``./my_model_directory/``."
msgstr ""

#: of transformers.AutoModel.from_pretrained:79
#: transformers.AutoModelForCausalLM.from_pretrained:45
#: transformers.AutoModelForImageClassification.from_pretrained:22
#: transformers.AutoModelForMaskedLM.from_pretrained:47
#: transformers.AutoModelForMultipleChoice.from_pretrained:41
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:22
#: transformers.AutoModelForPreTraining.from_pretrained:52
#: transformers.AutoModelForQuestionAnswering.from_pretrained:49
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:34
#: transformers.AutoModelForSequenceClassification.from_pretrained:55
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:20
#: transformers.AutoModelForTokenClassification.from_pretrained:44
msgid ""
"A path or url to a `tensorflow index checkpoint file` (e.g, "
"``./tf_model/model.ckpt.index``). In this case, ``from_tf`` should be set"
" to :obj:`True` and a configuration object should be provided as "
"``config`` argument. This loading path is slower than converting the "
"TensorFlow checkpoint in a PyTorch model using the provided conversion "
"scripts and loading the PyTorch model afterwards."
msgstr ""

#: of transformers.AutoModel.from_pretrained:84
#: transformers.AutoModelForCausalLM.from_pretrained:50
#: transformers.AutoModelForImageClassification.from_pretrained:27
#: transformers.AutoModelForMaskedLM.from_pretrained:52
#: transformers.AutoModelForMultipleChoice.from_pretrained:46
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:27
#: transformers.AutoModelForPreTraining.from_pretrained:57
#: transformers.AutoModelForQuestionAnswering.from_pretrained:54
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:39
#: transformers.AutoModelForSequenceClassification.from_pretrained:60
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:25
#: transformers.AutoModelForTokenClassification.from_pretrained:49
#: transformers.FlaxAutoModel.from_pretrained:36
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:24
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:23
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:28
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:26
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:23
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:31
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:28
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:26
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:28
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:26
#: transformers.TFAutoModel.from_pretrained:57
#: transformers.TFAutoModelForCausalLM.from_pretrained:31
#: transformers.TFAutoModelForMaskedLM.from_pretrained:39
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:39
#: transformers.TFAutoModelForPreTraining.from_pretrained:43
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:39
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:31
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:44
#: transformers.TFAutoModelForTokenClassification.from_pretrained:40
msgid "Will be passed along to the underlying model ``__init__()`` method."
msgstr ""

#: of transformers.AutoModel.from_pretrained:86
#: transformers.AutoModelForCausalLM.from_pretrained:52
#: transformers.AutoModelForImageClassification.from_pretrained:29
#: transformers.AutoModelForMaskedLM.from_pretrained:54
#: transformers.AutoModelForMultipleChoice.from_pretrained:48
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:29
#: transformers.AutoModelForPreTraining.from_pretrained:59
#: transformers.AutoModelForQuestionAnswering.from_pretrained:56
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:41
#: transformers.AutoModelForSequenceClassification.from_pretrained:62
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:27
#: transformers.AutoModelForTokenClassification.from_pretrained:51
#: transformers.FlaxAutoModel.from_pretrained:38
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:26
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:25
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:30
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:28
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:25
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:33
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:30
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:28
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:30
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:28
#: transformers.TFAutoModel.from_pretrained:59
#: transformers.TFAutoModelForCausalLM.from_pretrained:33
#: transformers.TFAutoModelForMaskedLM.from_pretrained:41
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:41
#: transformers.TFAutoModelForPreTraining.from_pretrained:45
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:41
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:33
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:46
#: transformers.TFAutoModelForTokenClassification.from_pretrained:42
msgid ""
"Configuration for the model to use instead of an automatically loaded "
"configuration. Configuration can be automatically loaded when:      - The"
" model is a model provided by the library (loaded with the `model id` "
"string of a pretrained       model).     - The model was saved using "
":meth:`~transformers.PreTrainedModel.save_pretrained` and is reloaded"
"       by supplying the save directory.     - The model is loaded by "
"supplying a local directory as ``pretrained_model_name_or_path`` and a"
"       configuration JSON file named `config.json` is found in the "
"directory."
msgstr ""

#: of transformers.AutoModel.from_pretrained:86
#: transformers.AutoModelForCausalLM.from_pretrained:52
#: transformers.AutoModelForImageClassification.from_pretrained:29
#: transformers.AutoModelForMaskedLM.from_pretrained:54
#: transformers.AutoModelForMultipleChoice.from_pretrained:48
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:29
#: transformers.AutoModelForPreTraining.from_pretrained:59
#: transformers.AutoModelForQuestionAnswering.from_pretrained:56
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:41
#: transformers.AutoModelForSequenceClassification.from_pretrained:62
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:27
#: transformers.AutoModelForTokenClassification.from_pretrained:51
#: transformers.FlaxAutoModel.from_pretrained:38
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:26
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:25
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:30
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:28
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:25
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:33
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:30
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:28
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:30
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:28
#: transformers.TFAutoModel.from_pretrained:59
#: transformers.TFAutoModelForCausalLM.from_pretrained:33
#: transformers.TFAutoModelForMaskedLM.from_pretrained:41
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:41
#: transformers.TFAutoModelForPreTraining.from_pretrained:45
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:41
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:33
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:46
#: transformers.TFAutoModelForTokenClassification.from_pretrained:42
msgid ""
"Configuration for the model to use instead of an automatically loaded "
"configuration. Configuration can be automatically loaded when:"
msgstr ""

#: of transformers.AutoModel.from_pretrained:89
#: transformers.AutoModelForCausalLM.from_pretrained:55
#: transformers.AutoModelForImageClassification.from_pretrained:32
#: transformers.AutoModelForMaskedLM.from_pretrained:57
#: transformers.AutoModelForMultipleChoice.from_pretrained:51
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:32
#: transformers.AutoModelForPreTraining.from_pretrained:62
#: transformers.AutoModelForQuestionAnswering.from_pretrained:59
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:44
#: transformers.AutoModelForSequenceClassification.from_pretrained:65
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:30
#: transformers.AutoModelForTokenClassification.from_pretrained:54
#: transformers.FlaxAutoModel.from_pretrained:41
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:29
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:28
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:33
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:31
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:28
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:36
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:33
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:31
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:33
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:31
#: transformers.TFAutoModel.from_pretrained:62
#: transformers.TFAutoModelForCausalLM.from_pretrained:36
#: transformers.TFAutoModelForMaskedLM.from_pretrained:44
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:44
#: transformers.TFAutoModelForPreTraining.from_pretrained:48
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:44
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:36
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:49
#: transformers.TFAutoModelForTokenClassification.from_pretrained:45
msgid ""
"The model is a model provided by the library (loaded with the `model id` "
"string of a pretrained model)."
msgstr ""

#: of transformers.AutoModel.from_pretrained:91
#: transformers.AutoModelForCausalLM.from_pretrained:57
#: transformers.AutoModelForImageClassification.from_pretrained:34
#: transformers.AutoModelForMaskedLM.from_pretrained:59
#: transformers.AutoModelForMultipleChoice.from_pretrained:53
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:34
#: transformers.AutoModelForPreTraining.from_pretrained:64
#: transformers.AutoModelForQuestionAnswering.from_pretrained:61
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:46
#: transformers.AutoModelForSequenceClassification.from_pretrained:67
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:32
#: transformers.AutoModelForTokenClassification.from_pretrained:56
#: transformers.FlaxAutoModel.from_pretrained:43
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:31
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:30
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:35
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:33
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:30
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:38
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:35
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:33
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:35
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:33
#: transformers.TFAutoModel.from_pretrained:64
#: transformers.TFAutoModelForCausalLM.from_pretrained:38
#: transformers.TFAutoModelForMaskedLM.from_pretrained:46
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:46
#: transformers.TFAutoModelForPreTraining.from_pretrained:50
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:46
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:38
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:51
#: transformers.TFAutoModelForTokenClassification.from_pretrained:47
msgid ""
"The model was saved using "
":meth:`~transformers.PreTrainedModel.save_pretrained` and is reloaded by "
"supplying the save directory."
msgstr ""

#: of transformers.AutoModel.from_pretrained:93
#: transformers.AutoModelForCausalLM.from_pretrained:59
#: transformers.AutoModelForImageClassification.from_pretrained:36
#: transformers.AutoModelForMaskedLM.from_pretrained:61
#: transformers.AutoModelForMultipleChoice.from_pretrained:55
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:36
#: transformers.AutoModelForPreTraining.from_pretrained:66
#: transformers.AutoModelForQuestionAnswering.from_pretrained:63
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:48
#: transformers.AutoModelForSequenceClassification.from_pretrained:69
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:34
#: transformers.AutoModelForTokenClassification.from_pretrained:58
#: transformers.FlaxAutoModel.from_pretrained:45
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:33
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:32
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:37
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:35
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:32
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:40
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:37
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:35
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:37
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:35
#: transformers.TFAutoModel.from_pretrained:66
#: transformers.TFAutoModelForCausalLM.from_pretrained:40
#: transformers.TFAutoModelForMaskedLM.from_pretrained:48
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:48
#: transformers.TFAutoModelForPreTraining.from_pretrained:52
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:48
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:40
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:53
#: transformers.TFAutoModelForTokenClassification.from_pretrained:49
msgid ""
"The model is loaded by supplying a local directory as "
"``pretrained_model_name_or_path`` and a configuration JSON file named "
"`config.json` is found in the directory."
msgstr ""

#: of transformers.AutoModel.from_pretrained:96
#: transformers.AutoModelForCausalLM.from_pretrained:62
#: transformers.AutoModelForImageClassification.from_pretrained:39
#: transformers.AutoModelForMaskedLM.from_pretrained:64
#: transformers.AutoModelForMultipleChoice.from_pretrained:58
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:39
#: transformers.AutoModelForPreTraining.from_pretrained:69
#: transformers.AutoModelForQuestionAnswering.from_pretrained:66
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:51
#: transformers.AutoModelForSequenceClassification.from_pretrained:72
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:37
#: transformers.AutoModelForTokenClassification.from_pretrained:61
msgid ""
"A state dictionary to use instead of a state dictionary loaded from saved"
" weights file.  This option can be used if you want to create a model "
"from a pretrained configuration but load your own weights. In this case "
"though, you should check if using "
":func:`~transformers.PreTrainedModel.save_pretrained` and "
":func:`~transformers.PreTrainedModel.from_pretrained` is not a simpler "
"option."
msgstr ""

#: of transformers.AutoModel.from_pretrained:96
#: transformers.AutoModelForCausalLM.from_pretrained:62
#: transformers.AutoModelForImageClassification.from_pretrained:39
#: transformers.AutoModelForMaskedLM.from_pretrained:64
#: transformers.AutoModelForMultipleChoice.from_pretrained:58
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:39
#: transformers.AutoModelForPreTraining.from_pretrained:69
#: transformers.AutoModelForQuestionAnswering.from_pretrained:66
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:51
#: transformers.AutoModelForSequenceClassification.from_pretrained:72
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:37
#: transformers.AutoModelForTokenClassification.from_pretrained:61
msgid ""
"A state dictionary to use instead of a state dictionary loaded from saved"
" weights file."
msgstr ""

#: of transformers.AutoModel.from_pretrained:98
#: transformers.AutoModelForCausalLM.from_pretrained:64
#: transformers.AutoModelForImageClassification.from_pretrained:41
#: transformers.AutoModelForMaskedLM.from_pretrained:66
#: transformers.AutoModelForMultipleChoice.from_pretrained:60
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:41
#: transformers.AutoModelForPreTraining.from_pretrained:71
#: transformers.AutoModelForQuestionAnswering.from_pretrained:68
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:53
#: transformers.AutoModelForSequenceClassification.from_pretrained:74
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:39
#: transformers.AutoModelForTokenClassification.from_pretrained:63
msgid ""
"This option can be used if you want to create a model from a pretrained "
"configuration but load your own weights. In this case though, you should "
"check if using :func:`~transformers.PreTrainedModel.save_pretrained` and "
":func:`~transformers.PreTrainedModel.from_pretrained` is not a simpler "
"option."
msgstr ""

#: of transformers.AutoModel.from_pretrained:106
#: transformers.AutoModelForCausalLM.from_pretrained:72
#: transformers.AutoModelForImageClassification.from_pretrained:49
#: transformers.AutoModelForMaskedLM.from_pretrained:74
#: transformers.AutoModelForMultipleChoice.from_pretrained:68
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:49
#: transformers.AutoModelForPreTraining.from_pretrained:79
#: transformers.AutoModelForQuestionAnswering.from_pretrained:76
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:61
#: transformers.AutoModelForSequenceClassification.from_pretrained:82
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:47
#: transformers.AutoModelForTokenClassification.from_pretrained:71
msgid ""
"Load the model weights from a TensorFlow checkpoint save file (see "
"docstring of ``pretrained_model_name_or_path`` argument)."
msgstr ""

#: of transformers.AutoModel.from_pretrained:109
#: transformers.AutoModelForCausalLM.from_pretrained:75
#: transformers.AutoModelForImageClassification.from_pretrained:52
#: transformers.AutoModelForMaskedLM.from_pretrained:77
#: transformers.AutoModelForMultipleChoice.from_pretrained:71
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:52
#: transformers.AutoModelForPreTraining.from_pretrained:82
#: transformers.AutoModelForQuestionAnswering.from_pretrained:79
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:64
#: transformers.AutoModelForSequenceClassification.from_pretrained:85
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:50
#: transformers.AutoModelForTokenClassification.from_pretrained:74
#: transformers.FlaxAutoModel.from_pretrained:54
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:42
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:41
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:46
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:44
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:41
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:49
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:46
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:44
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:46
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:44
#: transformers.TFAutoModel.from_pretrained:75
#: transformers.TFAutoModelForCausalLM.from_pretrained:49
#: transformers.TFAutoModelForMaskedLM.from_pretrained:57
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:57
#: transformers.TFAutoModelForPreTraining.from_pretrained:61
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:57
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:49
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:62
#: transformers.TFAutoModelForTokenClassification.from_pretrained:58
msgid ""
"Whether or not to force the (re-)download of the model weights and "
"configuration files, overriding the cached versions if they exist."
msgstr ""

#: of transformers.AutoModel.from_pretrained:118
#: transformers.AutoModelForCausalLM.from_pretrained:84
#: transformers.AutoModelForImageClassification.from_pretrained:61
#: transformers.AutoModelForMaskedLM.from_pretrained:86
#: transformers.AutoModelForMultipleChoice.from_pretrained:80
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:61
#: transformers.AutoModelForPreTraining.from_pretrained:91
#: transformers.AutoModelForQuestionAnswering.from_pretrained:88
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:73
#: transformers.AutoModelForSequenceClassification.from_pretrained:94
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:59
#: transformers.AutoModelForTokenClassification.from_pretrained:83
#: transformers.FlaxAutoModel.from_pretrained:63
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:51
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:50
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:55
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:53
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:50
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:58
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:55
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:53
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:55
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:53
#: transformers.TFAutoModel.from_pretrained:84
#: transformers.TFAutoModelForCausalLM.from_pretrained:58
#: transformers.TFAutoModelForMaskedLM.from_pretrained:66
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:66
#: transformers.TFAutoModelForPreTraining.from_pretrained:70
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:66
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:58
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:71
#: transformers.TFAutoModelForTokenClassification.from_pretrained:67
msgid ""
"Whether ot not to also return a dictionary containing missing keys, "
"unexpected keys and error messages."
msgstr ""

#: of transformers.AutoModel.from_pretrained:120
#: transformers.AutoModelForCausalLM.from_pretrained:86
#: transformers.AutoModelForImageClassification.from_pretrained:63
#: transformers.AutoModelForMaskedLM.from_pretrained:88
#: transformers.AutoModelForMultipleChoice.from_pretrained:82
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:63
#: transformers.AutoModelForPreTraining.from_pretrained:93
#: transformers.AutoModelForQuestionAnswering.from_pretrained:90
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:75
#: transformers.AutoModelForSequenceClassification.from_pretrained:96
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:61
#: transformers.AutoModelForTokenClassification.from_pretrained:85
#: transformers.FlaxAutoModel.from_pretrained:65
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:53
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:52
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:57
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:55
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:52
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:60
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:57
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:55
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:57
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:55
#: transformers.TFAutoModel.from_pretrained:86
#: transformers.TFAutoModelForCausalLM.from_pretrained:60
#: transformers.TFAutoModelForMaskedLM.from_pretrained:68
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:68
#: transformers.TFAutoModelForPreTraining.from_pretrained:72
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:68
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:60
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:73
#: transformers.TFAutoModelForTokenClassification.from_pretrained:69
msgid ""
"Whether or not to only look at local files (e.g., not try downloading the"
" model)."
msgstr ""

#: of transformers.AutoModel.from_pretrained:126
#: transformers.AutoModelForCausalLM.from_pretrained:92
#: transformers.AutoModelForImageClassification.from_pretrained:69
#: transformers.AutoModelForMaskedLM.from_pretrained:94
#: transformers.AutoModelForMultipleChoice.from_pretrained:88
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:69
#: transformers.AutoModelForPreTraining.from_pretrained:99
#: transformers.AutoModelForQuestionAnswering.from_pretrained:96
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:81
#: transformers.AutoModelForSequenceClassification.from_pretrained:102
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:67
#: transformers.AutoModelForTokenClassification.from_pretrained:91
#: transformers.FlaxAutoModel.from_pretrained:71
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:59
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:58
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:63
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:61
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:58
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:66
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:63
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:61
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:63
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:61
#: transformers.TFAutoModel.from_pretrained:92
#: transformers.TFAutoModelForCausalLM.from_pretrained:66
#: transformers.TFAutoModelForMaskedLM.from_pretrained:74
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:74
#: transformers.TFAutoModelForPreTraining.from_pretrained:78
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:74
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:66
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:79
#: transformers.TFAutoModelForTokenClassification.from_pretrained:75
msgid ""
"Can be used to update the configuration object (after it being loaded) "
"and initiate the model (e.g., :obj:`output_attentions=True`). Behaves "
"differently depending on whether a ``config`` is provided or "
"automatically loaded:      - If a configuration is provided with "
"``config``, ``**kwargs`` will be directly passed to the       underlying "
"model's ``__init__`` method (we assume all relevant updates to the "
"configuration have       already been done)     - If a configuration is "
"not provided, ``kwargs`` will be first passed to the configuration class"
"       initialization function "
"(:func:`~transformers.PretrainedConfig.from_pretrained`). Each key of"
"       ``kwargs`` that corresponds to a configuration attribute will be "
"used to override said attribute       with the supplied ``kwargs`` value."
" Remaining keys that do not correspond to any configuration       "
"attribute will be passed to the underlying model's ``__init__`` function."
msgstr ""

#: of transformers.AutoModel.from_pretrained:126
#: transformers.AutoModelForCausalLM.from_pretrained:92
#: transformers.AutoModelForImageClassification.from_pretrained:69
#: transformers.AutoModelForMaskedLM.from_pretrained:94
#: transformers.AutoModelForMultipleChoice.from_pretrained:88
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:69
#: transformers.AutoModelForPreTraining.from_pretrained:99
#: transformers.AutoModelForQuestionAnswering.from_pretrained:96
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:81
#: transformers.AutoModelForSequenceClassification.from_pretrained:102
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:67
#: transformers.AutoModelForTokenClassification.from_pretrained:91
#: transformers.FlaxAutoModel.from_pretrained:71
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:59
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:58
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:63
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:61
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:58
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:66
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:63
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:61
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:63
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:61
#: transformers.TFAutoModel.from_pretrained:92
#: transformers.TFAutoModelForCausalLM.from_pretrained:66
#: transformers.TFAutoModelForMaskedLM.from_pretrained:74
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:74
#: transformers.TFAutoModelForPreTraining.from_pretrained:78
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:74
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:66
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:79
#: transformers.TFAutoModelForTokenClassification.from_pretrained:75
msgid ""
"Can be used to update the configuration object (after it being loaded) "
"and initiate the model (e.g., :obj:`output_attentions=True`). Behaves "
"differently depending on whether a ``config`` is provided or "
"automatically loaded:"
msgstr ""

#: of transformers.AutoModel.from_pretrained:130
#: transformers.AutoModelForCausalLM.from_pretrained:96
#: transformers.AutoModelForImageClassification.from_pretrained:73
#: transformers.AutoModelForMaskedLM.from_pretrained:98
#: transformers.AutoModelForMultipleChoice.from_pretrained:92
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:73
#: transformers.AutoModelForPreTraining.from_pretrained:103
#: transformers.AutoModelForQuestionAnswering.from_pretrained:100
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:85
#: transformers.AutoModelForSequenceClassification.from_pretrained:106
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:71
#: transformers.AutoModelForTokenClassification.from_pretrained:95
#: transformers.FlaxAutoModel.from_pretrained:75
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:63
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:62
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:67
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:65
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:62
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:70
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:67
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:65
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:67
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:65
#: transformers.TFAutoModel.from_pretrained:96
#: transformers.TFAutoModelForCausalLM.from_pretrained:70
#: transformers.TFAutoModelForMaskedLM.from_pretrained:78
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:78
#: transformers.TFAutoModelForPreTraining.from_pretrained:82
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:78
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:70
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:83
#: transformers.TFAutoModelForTokenClassification.from_pretrained:79
msgid ""
"If a configuration is provided with ``config``, ``**kwargs`` will be "
"directly passed to the underlying model's ``__init__`` method (we assume "
"all relevant updates to the configuration have already been done)"
msgstr ""

#: of transformers.AutoModel.from_pretrained:133
#: transformers.AutoModelForCausalLM.from_pretrained:99
#: transformers.AutoModelForImageClassification.from_pretrained:76
#: transformers.AutoModelForMaskedLM.from_pretrained:101
#: transformers.AutoModelForMultipleChoice.from_pretrained:95
#: transformers.AutoModelForNextSentencePrediction.from_pretrained:76
#: transformers.AutoModelForPreTraining.from_pretrained:106
#: transformers.AutoModelForQuestionAnswering.from_pretrained:103
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:88
#: transformers.AutoModelForSequenceClassification.from_pretrained:109
#: transformers.AutoModelForTableQuestionAnswering.from_pretrained:74
#: transformers.AutoModelForTokenClassification.from_pretrained:98
#: transformers.FlaxAutoModel.from_pretrained:78
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:66
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:65
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:70
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:68
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:65
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:73
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:70
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:68
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:70
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:68
#: transformers.TFAutoModel.from_pretrained:99
#: transformers.TFAutoModelForCausalLM.from_pretrained:73
#: transformers.TFAutoModelForMaskedLM.from_pretrained:81
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:81
#: transformers.TFAutoModelForPreTraining.from_pretrained:85
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:81
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:73
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:86
#: transformers.TFAutoModelForTokenClassification.from_pretrained:82
msgid ""
"If a configuration is not provided, ``kwargs`` will be first passed to "
"the configuration class initialization function "
"(:func:`~transformers.PretrainedConfig.from_pretrained`). Each key of "
"``kwargs`` that corresponds to a configuration attribute will be used to "
"override said attribute with the supplied ``kwargs`` value. Remaining "
"keys that do not correspond to any configuration attribute will be passed"
" to the underlying model's ``__init__`` function."
msgstr ""

#: ../../source/model_doc/auto.rst:62
msgid "AutoModelForPreTraining"
msgstr ""

#: of transformers.AutoModelForPreTraining:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a pretraining head) when created with "
"the :meth:`~transformers.AutoModelForPreTraining.from_pretrained` class "
"method or the :meth:`~transformers.AutoModelForPreTraining.from_config` "
"class method."
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:1
#: transformers.FlaxAutoModelForPreTraining.from_config:1
#: transformers.TFAutoModelForPreTraining.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a pretraining "
"head) from a configuration."
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForPreTraining.from_pretrained` to load the"
" model weights."
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForPreTraining` (ALBERT model) - "
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForConditionalGeneration` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForPreTraining` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForPreTraining` (BigBird model) - "
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.CTRLLMHeadModel` (CTRL model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForMaskedLM` (CamemBERT model) - "
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaForMaskedLM` (DeBERTa model) - "
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2ForMaskedLM` (DeBERTa-v2 model) - "
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForMaskedLM` (DistilBERT model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForPreTraining` (ELECTRA model) - "
":class:`~transformers.FSMTConfig` configuration class: "
":class:`~transformers.FSMTForConditionalGeneration` (FairSeq Machine-"
"Translation model) - :class:`~transformers.FlaubertConfig` configuration "
"class: :class:`~transformers.FlaubertWithLMHeadModel` (FlauBERT model) - "
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForPreTraining` (Funnel Transformer model) - "
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.GPT2LMHeadModel` (OpenAI GPT-2 model) - "
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForMaskedLM` (I-BERT model) - "
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.LayoutLMForMaskedLM` (LayoutLM model) - "
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForMaskedLM` (Longformer model) - "
":class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.LxmertForPreTraining` (LXMERT model) - "
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForMaskedLM` (MPNet model) - "
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForPreTraining` (MegatronBert model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForPreTraining` (MobileBERT model) - "
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.OpenAIGPTLMHeadModel` (OpenAI GPT model) - "
":class:`~transformers.RetriBertConfig` configuration class: "
":class:`~transformers.RetriBertModel` (RetriBERT model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForMaskedLM` (RoBERTa model) - "
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForMaskedLM` (SqueezeBERT model) - "
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.T5ForConditionalGeneration` (T5 model) - "
":class:`~transformers.TapasConfig` configuration class: "
":class:`~transformers.TapasForMaskedLM` (TAPAS model) - "
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TransfoXLLMHeadModel` (Transformer-XL model) - "
":class:`~transformers.VisualBertConfig` configuration class: "
":class:`~transformers.VisualBertForPreTraining` (VisualBert model) - "
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.Wav2Vec2ForPreTraining` (Wav2Vec2 model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMWithLMHeadModel` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForMaskedLM` (XLM-RoBERTa model) - "
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetLMHeadModel` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForPreTraining` (ALBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:12
#: transformers.AutoModelForPreTraining.from_config:12
#: transformers.AutoModelForSeq2SeqLM.from_config:11
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForConditionalGeneration` (BART model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:13
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForPreTraining` (BERT model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:14
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForPreTraining` (BigBird model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:18
#: transformers.AutoModelForPreTraining.from_config:15
msgid ""
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.CTRLLMHeadModel` (CTRL model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:15
#: transformers.AutoModelForPreTraining.from_config:16
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForMaskedLM` (CamemBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:17
#: transformers.AutoModelForPreTraining.from_config:17
msgid ""
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaForMaskedLM` (DeBERTa model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:18
#: transformers.AutoModelForPreTraining.from_config:18
msgid ""
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2ForMaskedLM` (DeBERTa-v2 model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:19
#: transformers.AutoModelForPreTraining.from_config:19
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForMaskedLM` (DistilBERT model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:20
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForPreTraining` (ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:21
#: transformers.AutoModelForSeq2SeqLM.from_config:16
msgid ""
":class:`~transformers.FSMTConfig` configuration class: "
":class:`~transformers.FSMTForConditionalGeneration` (FairSeq Machine-"
"Translation model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:21
#: transformers.AutoModelForPreTraining.from_config:22
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertWithLMHeadModel` (FlauBERT model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:23
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForPreTraining` (Funnel Transformer model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:20
#: transformers.AutoModelForPreTraining.from_config:24
msgid ""
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.GPT2LMHeadModel` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:23
#: transformers.AutoModelForPreTraining.from_config:25
msgid ""
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForMaskedLM` (I-BERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:24
#: transformers.AutoModelForPreTraining.from_config:26
msgid ""
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.LayoutLMForMaskedLM` (LayoutLM model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:25
#: transformers.AutoModelForPreTraining.from_config:27
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForMaskedLM` (Longformer model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:28
msgid ""
":class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.LxmertForPreTraining` (LXMERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:27
#: transformers.AutoModelForPreTraining.from_config:29
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForMaskedLM` (MPNet model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:30
msgid ""
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForPreTraining` (MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:31
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForPreTraining` (MobileBERT model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:25
#: transformers.AutoModelForPreTraining.from_config:32
msgid ""
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.OpenAIGPTLMHeadModel` (OpenAI GPT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:33
#: transformers.AutoModelForPreTraining.from_config:34
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForMaskedLM` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:34
#: transformers.AutoModelForPreTraining.from_config:35
msgid ""
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForMaskedLM` (SqueezeBERT model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:36
#: transformers.AutoModelForSeq2SeqLM.from_config:24
msgid ""
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.T5ForConditionalGeneration` (T5 model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:35
#: transformers.AutoModelForPreTraining.from_config:37
msgid ""
":class:`~transformers.TapasConfig` configuration class: "
":class:`~transformers.TapasForMaskedLM` (TAPAS model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:32
#: transformers.AutoModelForPreTraining.from_config:38
msgid ""
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TransfoXLLMHeadModel` (Transformer-XL model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:39
msgid ""
":class:`~transformers.VisualBertConfig` configuration class: "
":class:`~transformers.VisualBertForPreTraining` (VisualBert model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_config:40
msgid ""
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.Wav2Vec2ForPreTraining` (Wav2Vec2 model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:33
#: transformers.AutoModelForMaskedLM.from_config:37
#: transformers.AutoModelForPreTraining.from_config:41
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMWithLMHeadModel` (XLM model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:38
#: transformers.AutoModelForPreTraining.from_config:42
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForMaskedLM` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:36
#: transformers.AutoModelForPreTraining.from_config:43
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetLMHeadModel` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:1
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:1
#: transformers.TFAutoModelForPreTraining.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a pretraining "
"head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:7
msgid "**albert** -- :class:`~transformers.AlbertForPreTraining` (ALBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:8
#: transformers.AutoModelForPreTraining.from_pretrained:8
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:7
msgid ""
"**bart** -- :class:`~transformers.BartForConditionalGeneration` (BART "
"model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:9
msgid "**bert** -- :class:`~transformers.BertForPreTraining` (BERT model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:10
msgid ""
"**big_bird** -- :class:`~transformers.BigBirdForPreTraining` (BigBird "
"model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:11
#: transformers.AutoModelForPreTraining.from_pretrained:11
msgid ""
"**camembert** -- :class:`~transformers.CamembertForMaskedLM` (CamemBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:15
#: transformers.AutoModelForPreTraining.from_pretrained:12
msgid "**ctrl** -- :class:`~transformers.CTRLLMHeadModel` (CTRL model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:13
#: transformers.AutoModelForPreTraining.from_pretrained:13
msgid "**deberta** -- :class:`~transformers.DebertaForMaskedLM` (DeBERTa model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:14
#: transformers.AutoModelForPreTraining.from_pretrained:14
msgid ""
"**deberta-v2** -- :class:`~transformers.DebertaV2ForMaskedLM` (DeBERTa-v2"
" model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:15
#: transformers.AutoModelForPreTraining.from_pretrained:15
msgid ""
"**distilbert** -- :class:`~transformers.DistilBertForMaskedLM` "
"(DistilBERT model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:16
msgid ""
"**electra** -- :class:`~transformers.ElectraForPreTraining` (ELECTRA "
"model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:17
#: transformers.AutoModelForPreTraining.from_pretrained:17
msgid ""
"**flaubert** -- :class:`~transformers.FlaubertWithLMHeadModel` (FlauBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:18
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:12
msgid ""
"**fsmt** -- :class:`~transformers.FSMTForConditionalGeneration` (FairSeq "
"Machine-Translation model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:19
msgid ""
"**funnel** -- :class:`~transformers.FunnelForPreTraining` (Funnel "
"Transformer model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:16
#: transformers.AutoModelForPreTraining.from_pretrained:20
msgid "**gpt2** -- :class:`~transformers.GPT2LMHeadModel` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:19
#: transformers.AutoModelForPreTraining.from_pretrained:21
msgid "**ibert** -- :class:`~transformers.IBertForMaskedLM` (I-BERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:20
#: transformers.AutoModelForPreTraining.from_pretrained:22
msgid ""
"**layoutlm** -- :class:`~transformers.LayoutLMForMaskedLM` (LayoutLM "
"model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:21
#: transformers.AutoModelForPreTraining.from_pretrained:23
msgid ""
"**longformer** -- :class:`~transformers.LongformerForMaskedLM` "
"(Longformer model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:24
msgid "**lxmert** -- :class:`~transformers.LxmertForPreTraining` (LXMERT model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:25
msgid ""
"**megatron-bert** -- :class:`~transformers.MegatronBertForPreTraining` "
"(MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:26
msgid ""
"**mobilebert** -- :class:`~transformers.MobileBertForPreTraining` "
"(MobileBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:25
#: transformers.AutoModelForPreTraining.from_pretrained:27
msgid "**mpnet** -- :class:`~transformers.MPNetForMaskedLM` (MPNet model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:21
#: transformers.AutoModelForPreTraining.from_pretrained:28
msgid ""
"**openai-gpt** -- :class:`~transformers.OpenAIGPTLMHeadModel` (OpenAI GPT"
" model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:28
#: transformers.AutoModelForPreTraining.from_pretrained:30
msgid "**roberta** -- :class:`~transformers.RobertaForMaskedLM` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:30
#: transformers.AutoModelForPreTraining.from_pretrained:31
msgid ""
"**squeezebert** -- :class:`~transformers.SqueezeBertForMaskedLM` "
"(SqueezeBERT model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:32
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:20
msgid "**t5** -- :class:`~transformers.T5ForConditionalGeneration` (T5 model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:31
#: transformers.AutoModelForPreTraining.from_pretrained:33
msgid "**tapas** -- :class:`~transformers.TapasForMaskedLM` (TAPAS model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:28
#: transformers.AutoModelForPreTraining.from_pretrained:34
msgid ""
"**transfo-xl** -- :class:`~transformers.TransfoXLLMHeadModel` "
"(Transformer-XL model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:35
msgid ""
"**visual_bert** -- :class:`~transformers.VisualBertForPreTraining` "
"(VisualBert model)"
msgstr ""

#: of transformers.AutoModelForPreTraining.from_pretrained:36
msgid ""
"**wav2vec2** -- :class:`~transformers.Wav2Vec2ForPreTraining` (Wav2Vec2 "
"model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:29
#: transformers.AutoModelForMaskedLM.from_pretrained:33
#: transformers.AutoModelForPreTraining.from_pretrained:37
msgid "**xlm** -- :class:`~transformers.XLMWithLMHeadModel` (XLM model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:34
#: transformers.AutoModelForPreTraining.from_pretrained:38
msgid ""
"**xlm-roberta** -- :class:`~transformers.XLMRobertaForMaskedLM` (XLM-"
"RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:32
#: transformers.AutoModelForPreTraining.from_pretrained:39
msgid "**xlnet** -- :class:`~transformers.XLNetLMHeadModel` (XLNet model)"
msgstr ""

#: ../../source/model_doc/auto.rst:69
msgid "AutoModelForCausalLM"
msgstr ""

#: of transformers.AutoModelForCausalLM:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a causal language modeling head) when "
"created with the "
":meth:`~transformers.AutoModelForCausalLM.from_pretrained` class method "
"or the :meth:`~transformers.AutoModelForCausalLM.from_config` class "
"method."
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:1
#: transformers.FlaxAutoModelForCausalLM.from_config:1
#: transformers.TFAutoModelForCausalLM.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a causal "
"language modeling head) from a configuration."
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForCausalLM.from_pretrained` to load the "
"model weights."
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForCausalLM` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertLMHeadModel` (BERT model) - "
":class:`~transformers.BertGenerationConfig` configuration class: "
":class:`~transformers.BertGenerationDecoder` (Bert Generation model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForCausalLM` (BigBird model) - "
":class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusForCausalLM` (BigBirdPegasus model) -"
" :class:`~transformers.BlenderbotConfig` configuration class: "
":class:`~transformers.BlenderbotForCausalLM` (Blenderbot model) - "
":class:`~transformers.BlenderbotSmallConfig` configuration class: "
":class:`~transformers.BlenderbotSmallForCausalLM` (BlenderbotSmall model)"
" - :class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.CTRLLMHeadModel` (CTRL model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForCausalLM` (CamemBERT model) - "
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.GPT2LMHeadModel` (OpenAI GPT-2 model) - "
":class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.GPTNeoForCausalLM` (GPT Neo model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartForCausalLM` (mBART model) - "
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.MarianForCausalLM` (Marian model) - "
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForCausalLM` (MegatronBert model) - "
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.OpenAIGPTLMHeadModel` (OpenAI GPT model) - "
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.PegasusForCausalLM` (Pegasus model) - "
":class:`~transformers.ProphetNetConfig` configuration class: "
":class:`~transformers.ProphetNetForCausalLM` (ProphetNet model) - "
":class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerModelWithLMHead` (Reformer model) - "
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForCausalLM` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForCausalLM` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForCausalLM` (RoBERTa model) - "
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TransfoXLLMHeadModel` (Transformer-XL model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMWithLMHeadModel` (XLM model) - "
":class:`~transformers.XLMProphetNetConfig` configuration class: "
":class:`~transformers.XLMProphetNetForCausalLM` (XLMProphetNet model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForCausalLM` (XLM-RoBERTa model) - "
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetLMHeadModel` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:11
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForCausalLM` (BART model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertLMHeadModel` (BERT model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:13
msgid ""
":class:`~transformers.BertGenerationConfig` configuration class: "
":class:`~transformers.BertGenerationDecoder` (Bert Generation model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:14
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForCausalLM` (BigBird model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:15
msgid ""
":class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusForCausalLM` (BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:16
msgid ""
":class:`~transformers.BlenderbotConfig` configuration class: "
":class:`~transformers.BlenderbotForCausalLM` (Blenderbot model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:17
msgid ""
":class:`~transformers.BlenderbotSmallConfig` configuration class: "
":class:`~transformers.BlenderbotSmallForCausalLM` (BlenderbotSmall model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:19
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForCausalLM` (CamemBERT model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:21
msgid ""
":class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.GPTNeoForCausalLM` (GPT Neo model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:22
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartForCausalLM` (mBART model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:23
msgid ""
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.MarianForCausalLM` (Marian model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:24
msgid ""
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForCausalLM` (MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:26
msgid ""
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.PegasusForCausalLM` (Pegasus model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:27
msgid ""
":class:`~transformers.ProphetNetConfig` configuration class: "
":class:`~transformers.ProphetNetForCausalLM` (ProphetNet model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:28
msgid ""
":class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerModelWithLMHead` (Reformer model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:29
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForCausalLM` (RemBERT model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:30
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForCausalLM` (RoFormer model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:31
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForCausalLM` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:34
msgid ""
":class:`~transformers.XLMProphetNetConfig` configuration class: "
":class:`~transformers.XLMProphetNetForCausalLM` (XLMProphetNet model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_config:35
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForCausalLM` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:1
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:1
#: transformers.TFAutoModelForCausalLM.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a causal "
"language modeling head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:7
msgid "**bart** -- :class:`~transformers.BartForCausalLM` (BART model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:8
msgid "**bert** -- :class:`~transformers.BertLMHeadModel` (BERT model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:9
msgid ""
"**bert-generation** -- :class:`~transformers.BertGenerationDecoder` (Bert"
" Generation model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:10
msgid "**big_bird** -- :class:`~transformers.BigBirdForCausalLM` (BigBird model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:11
msgid ""
"**bigbird_pegasus** -- :class:`~transformers.BigBirdPegasusForCausalLM` "
"(BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:12
msgid ""
"**blenderbot** -- :class:`~transformers.BlenderbotForCausalLM` "
"(Blenderbot model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:13
msgid ""
"**blenderbot-small** -- :class:`~transformers.BlenderbotSmallForCausalLM`"
" (BlenderbotSmall model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:14
msgid ""
"**camembert** -- :class:`~transformers.CamembertForCausalLM` (CamemBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:17
msgid "**gpt_neo** -- :class:`~transformers.GPTNeoForCausalLM` (GPT Neo model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:18
msgid "**marian** -- :class:`~transformers.MarianForCausalLM` (Marian model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:19
msgid "**mbart** -- :class:`~transformers.MBartForCausalLM` (mBART model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:20
msgid ""
"**megatron-bert** -- :class:`~transformers.MegatronBertForCausalLM` "
"(MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:22
msgid "**pegasus** -- :class:`~transformers.PegasusForCausalLM` (Pegasus model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:23
msgid ""
"**prophetnet** -- :class:`~transformers.ProphetNetForCausalLM` "
"(ProphetNet model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:24
msgid ""
"**reformer** -- :class:`~transformers.ReformerModelWithLMHead` (Reformer "
"model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:25
msgid "**rembert** -- :class:`~transformers.RemBertForCausalLM` (RemBERT model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:26
msgid "**roberta** -- :class:`~transformers.RobertaForCausalLM` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:27
msgid ""
"**roformer** -- :class:`~transformers.RoFormerForCausalLM` (RoFormer "
"model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:30
msgid ""
"**xlm-prophetnet** -- :class:`~transformers.XLMProphetNetForCausalLM` "
"(XLMProphetNet model)"
msgstr ""

#: of transformers.AutoModelForCausalLM.from_pretrained:31
msgid ""
"**xlm-roberta** -- :class:`~transformers.XLMRobertaForCausalLM` (XLM-"
"RoBERTa model)"
msgstr ""

#: ../../source/model_doc/auto.rst:76
msgid "AutoModelForMaskedLM"
msgstr ""

#: of transformers.AutoModelForMaskedLM:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a masked language modeling head) when "
"created with the "
":meth:`~transformers.AutoModelForMaskedLM.from_pretrained` class method "
"or the :meth:`~transformers.AutoModelForMaskedLM.from_config` class "
"method."
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:1
#: transformers.FlaxAutoModelForMaskedLM.from_config:1
#: transformers.TFAutoModelForMaskedLM.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a masked "
"language modeling head) from a configuration."
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForMaskedLM.from_pretrained` to load the "
"model weights."
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForMaskedLM` (ALBERT model) - "
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForConditionalGeneration` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForMaskedLM` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForMaskedLM` (BigBird model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForMaskedLM` (CamemBERT model) - "
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForMaskedLM` (ConvBERT model) - "
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaForMaskedLM` (DeBERTa model) - "
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2ForMaskedLM` (DeBERTa-v2 model) - "
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForMaskedLM` (DistilBERT model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForMaskedLM` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertWithLMHeadModel` (FlauBERT model) - "
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForMaskedLM` (Funnel Transformer model) - "
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForMaskedLM` (I-BERT model) - "
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.LayoutLMForMaskedLM` (LayoutLM model) - "
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForMaskedLM` (Longformer model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartForConditionalGeneration` (mBART model) - "
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForMaskedLM` (MPNet model) - "
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForMaskedLM` (MegatronBert model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForMaskedLM` (MobileBERT model) - "
":class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerForMaskedLM` (Reformer model) - "
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForMaskedLM` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForMaskedLM` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForMaskedLM` (RoBERTa model) - "
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForMaskedLM` (SqueezeBERT model) - "
":class:`~transformers.TapasConfig` configuration class: "
":class:`~transformers.TapasForMaskedLM` (TAPAS model) - "
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.Wav2Vec2ForMaskedLM` (Wav2Vec2 model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMWithLMHeadModel` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForMaskedLM` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForMaskedLM` (ALBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:13
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForMaskedLM` (BERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:14
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForMaskedLM` (BigBird model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:16
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForMaskedLM` (ConvBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:20
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForMaskedLM` (ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:22
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForMaskedLM` (Funnel Transformer model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:26
#: transformers.AutoModelForSeq2SeqLM.from_config:19
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartForConditionalGeneration` (mBART model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:28
msgid ""
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForMaskedLM` (MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:29
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForMaskedLM` (MobileBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:30
msgid ""
":class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerForMaskedLM` (Reformer model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:31
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForMaskedLM` (RemBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:32
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForMaskedLM` (RoFormer model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_config:36
msgid ""
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.Wav2Vec2ForMaskedLM` (Wav2Vec2 model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:1
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:1
#: transformers.TFAutoModelForMaskedLM.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a masked "
"language modeling head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:7
msgid "**albert** -- :class:`~transformers.AlbertForMaskedLM` (ALBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:9
msgid "**bert** -- :class:`~transformers.BertForMaskedLM` (BERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:10
msgid "**big_bird** -- :class:`~transformers.BigBirdForMaskedLM` (BigBird model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:12
msgid ""
"**convbert** -- :class:`~transformers.ConvBertForMaskedLM` (ConvBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:16
msgid "**electra** -- :class:`~transformers.ElectraForMaskedLM` (ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:18
msgid ""
"**funnel** -- :class:`~transformers.FunnelForMaskedLM` (Funnel "
"Transformer model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:22
#: transformers.AutoModelForSeq2SeqLM.from_pretrained:16
msgid ""
"**mbart** -- :class:`~transformers.MBartForConditionalGeneration` (mBART "
"model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:23
msgid ""
"**megatron-bert** -- :class:`~transformers.MegatronBertForMaskedLM` "
"(MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:24
msgid ""
"**mobilebert** -- :class:`~transformers.MobileBertForMaskedLM` "
"(MobileBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:26
msgid ""
"**reformer** -- :class:`~transformers.ReformerForMaskedLM` (Reformer "
"model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:27
msgid "**rembert** -- :class:`~transformers.RemBertForMaskedLM` (RemBERT model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:29
msgid ""
"**roformer** -- :class:`~transformers.RoFormerForMaskedLM` (RoFormer "
"model)"
msgstr ""

#: of transformers.AutoModelForMaskedLM.from_pretrained:32
msgid ""
"**wav2vec2** -- :class:`~transformers.Wav2Vec2ForMaskedLM` (Wav2Vec2 "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:83
msgid "AutoModelForSeq2SeqLM"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a sequence-to-sequence language "
"modeling head) when created with the "
":meth:`~transformers.AutoModelForSeq2SeqLM.from_pretrained` class method "
"or the :meth:`~transformers.AutoModelForSeq2SeqLM.from_config` class "
"method."
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:1
#: transformers.FlaxAutoModelForSeq2SeqLM.from_config:1
#: transformers.TFAutoModelForSeq2SeqLM.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a sequence-to-"
"sequence language modeling head) from a configuration."
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForSeq2SeqLM.from_pretrained` to load the "
"model weights."
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForConditionalGeneration` (BART model) - "
":class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusForConditionalGeneration` "
"(BigBirdPegasus model) - :class:`~transformers.BlenderbotConfig` "
"configuration class: "
":class:`~transformers.BlenderbotForConditionalGeneration` (Blenderbot "
"model) - :class:`~transformers.BlenderbotSmallConfig` configuration "
"class: :class:`~transformers.BlenderbotSmallForConditionalGeneration` "
"(BlenderbotSmall model) - :class:`~transformers.EncoderDecoderConfig` "
"configuration class: :class:`~transformers.EncoderDecoderModel` (Encoder "
"decoder model) - :class:`~transformers.FSMTConfig` configuration class: "
":class:`~transformers.FSMTForConditionalGeneration` (FairSeq Machine-"
"Translation model) - :class:`~transformers.LEDConfig` configuration "
"class: :class:`~transformers.LEDForConditionalGeneration` (LED model) - "
":class:`~transformers.M2M100Config` configuration class: "
":class:`~transformers.M2M100ForConditionalGeneration` (M2M100 model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartForConditionalGeneration` (mBART model) - "
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.MT5ForConditionalGeneration` (mT5 model) - "
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.MarianMTModel` (Marian model) - "
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.PegasusForConditionalGeneration` (Pegasus model) - "
":class:`~transformers.ProphetNetConfig` configuration class: "
":class:`~transformers.ProphetNetForConditionalGeneration` (ProphetNet "
"model) - :class:`~transformers.T5Config` configuration class: "
":class:`~transformers.T5ForConditionalGeneration` (T5 model) - "
":class:`~transformers.XLMProphetNetConfig` configuration class: "
":class:`~transformers.XLMProphetNetForConditionalGeneration` "
"(XLMProphetNet model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:12
msgid ""
":class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusForConditionalGeneration` "
"(BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:13
msgid ""
":class:`~transformers.BlenderbotConfig` configuration class: "
":class:`~transformers.BlenderbotForConditionalGeneration` (Blenderbot "
"model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:14
msgid ""
":class:`~transformers.BlenderbotSmallConfig` configuration class: "
":class:`~transformers.BlenderbotSmallForConditionalGeneration` "
"(BlenderbotSmall model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:15
msgid ""
":class:`~transformers.EncoderDecoderConfig` configuration class: "
":class:`~transformers.EncoderDecoderModel` (Encoder decoder model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:17
msgid ""
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.LEDForConditionalGeneration` (LED model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:18
msgid ""
":class:`~transformers.M2M100Config` configuration class: "
":class:`~transformers.M2M100ForConditionalGeneration` (M2M100 model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:20
msgid ""
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.MT5ForConditionalGeneration` (mT5 model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:21
msgid ""
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.MarianMTModel` (Marian model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:22
msgid ""
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.PegasusForConditionalGeneration` (Pegasus model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:23
msgid ""
":class:`~transformers.ProphetNetConfig` configuration class: "
":class:`~transformers.ProphetNetForConditionalGeneration` (ProphetNet "
"model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_config:25
msgid ""
":class:`~transformers.XLMProphetNetConfig` configuration class: "
":class:`~transformers.XLMProphetNetForConditionalGeneration` "
"(XLMProphetNet model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:1
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:1
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a sequence-to-"
"sequence language modeling head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:8
msgid ""
"**bigbird_pegasus** -- "
":class:`~transformers.BigBirdPegasusForConditionalGeneration` "
"(BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:9
msgid ""
"**blenderbot** -- "
":class:`~transformers.BlenderbotForConditionalGeneration` (Blenderbot "
"model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:10
msgid ""
"**blenderbot-small** -- "
":class:`~transformers.BlenderbotSmallForConditionalGeneration` "
"(BlenderbotSmall model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:11
msgid ""
"**encoder-decoder** -- :class:`~transformers.EncoderDecoderModel` "
"(Encoder decoder model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:13
msgid "**led** -- :class:`~transformers.LEDForConditionalGeneration` (LED model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:14
msgid ""
"**m2m_100** -- :class:`~transformers.M2M100ForConditionalGeneration` "
"(M2M100 model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:15
msgid "**marian** -- :class:`~transformers.MarianMTModel` (Marian model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:17
msgid "**mt5** -- :class:`~transformers.MT5ForConditionalGeneration` (mT5 model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:18
msgid ""
"**pegasus** -- :class:`~transformers.PegasusForConditionalGeneration` "
"(Pegasus model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:19
msgid ""
"**prophetnet** -- "
":class:`~transformers.ProphetNetForConditionalGeneration` (ProphetNet "
"model)"
msgstr ""

#: of transformers.AutoModelForSeq2SeqLM.from_pretrained:21
msgid ""
"**xlm-prophetnet** -- "
":class:`~transformers.XLMProphetNetForConditionalGeneration` "
"(XLMProphetNet model)"
msgstr ""

#: ../../source/model_doc/auto.rst:90
msgid "AutoModelForSequenceClassification"
msgstr ""

#: of transformers.AutoModelForSequenceClassification:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a sequence classification head) when "
"created with the "
":meth:`~transformers.AutoModelForSequenceClassification.from_pretrained` "
"class method or the "
":meth:`~transformers.AutoModelForSequenceClassification.from_config` "
"class method."
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:1
#: transformers.FlaxAutoModelForSequenceClassification.from_config:1
#: transformers.TFAutoModelForSequenceClassification.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a sequence "
"classification head) from a configuration."
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForSequenceClassification.from_pretrained` "
"to load the model weights."
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForSequenceClassification` (ALBERT model) - "
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForSequenceClassification` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForSequenceClassification` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForSequenceClassification` (BigBird model) -"
" :class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusForSequenceClassification` "
"(BigBirdPegasus model) - :class:`~transformers.CTRLConfig` configuration "
"class: :class:`~transformers.CTRLForSequenceClassification` (CTRL model) "
"- :class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForSequenceClassification` (CamemBERT "
"model) - :class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineForSequenceClassification` (Canine model) - "
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForSequenceClassification` (ConvBERT model)"
" - :class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaForSequenceClassification` (DeBERTa model) -"
" :class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2ForSequenceClassification` (DeBERTa-v2 "
"model) - :class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForSequenceClassification` (DistilBERT "
"model) - :class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForSequenceClassification` (ELECTRA model) -"
" :class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertForSequenceClassification` (FlauBERT model)"
" - :class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForSequenceClassification` (Funnel "
"Transformer model) - :class:`~transformers.GPT2Config` configuration "
"class: :class:`~transformers.GPT2ForSequenceClassification` (OpenAI GPT-2"
" model) - :class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.GPTNeoForSequenceClassification` (GPT Neo model) - "
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForSequenceClassification` (I-BERT model) - "
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.LEDForSequenceClassification` (LED model) - "
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.LayoutLMForSequenceClassification` (LayoutLM model)"
" - :class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForSequenceClassification` (Longformer "
"model) - :class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartForSequenceClassification` (mBART model) - "
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForSequenceClassification` (MPNet model) - "
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForSequenceClassification` "
"(MegatronBert model) - :class:`~transformers.MobileBertConfig` "
"configuration class: "
":class:`~transformers.MobileBertForSequenceClassification` (MobileBERT "
"model) - :class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.OpenAIGPTForSequenceClassification` (OpenAI GPT "
"model) - :class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerForSequenceClassification` (Reformer model)"
" - :class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForSequenceClassification` (RemBERT model) -"
" :class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForSequenceClassification` (RoFormer model)"
" - :class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForSequenceClassification` (RoBERTa model) -"
" :class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForSequenceClassification` (SqueezeBERT "
"model) - :class:`~transformers.TapasConfig` configuration class: "
":class:`~transformers.TapasForSequenceClassification` (TAPAS model) - "
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TransfoXLForSequenceClassification` (Transformer-XL"
" model) - :class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMForSequenceClassification` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForSequenceClassification` (XLM-RoBERTa "
"model) - :class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetForSequenceClassification` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForSequenceClassification` (ALBERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:12
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForSequenceClassification` (BART model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:13
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForSequenceClassification` (BERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:14
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForSequenceClassification` (BigBird model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:15
msgid ""
":class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusForSequenceClassification` "
"(BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:16
msgid ""
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.CTRLForSequenceClassification` (CTRL model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:17
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForSequenceClassification` (CamemBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:18
msgid ""
":class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineForSequenceClassification` (Canine model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:19
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForSequenceClassification` (ConvBERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:20
msgid ""
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaForSequenceClassification` (DeBERTa model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:21
msgid ""
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2ForSequenceClassification` (DeBERTa-v2 "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:22
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForSequenceClassification` (DistilBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:23
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForSequenceClassification` (ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:24
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertForSequenceClassification` (FlauBERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:25
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForSequenceClassification` (Funnel "
"Transformer model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:26
msgid ""
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.GPT2ForSequenceClassification` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:27
msgid ""
":class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.GPTNeoForSequenceClassification` (GPT Neo model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:28
msgid ""
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForSequenceClassification` (I-BERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:29
msgid ""
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.LEDForSequenceClassification` (LED model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:30
msgid ""
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.LayoutLMForSequenceClassification` (LayoutLM model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:31
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForSequenceClassification` (Longformer "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:32
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartForSequenceClassification` (mBART model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:33
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForSequenceClassification` (MPNet model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:34
msgid ""
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForSequenceClassification` "
"(MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:35
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForSequenceClassification` (MobileBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:36
msgid ""
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.OpenAIGPTForSequenceClassification` (OpenAI GPT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:37
msgid ""
":class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerForSequenceClassification` (Reformer model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:38
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForSequenceClassification` (RemBERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:39
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForSequenceClassification` (RoFormer model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:40
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForSequenceClassification` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:41
msgid ""
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForSequenceClassification` (SqueezeBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:42
msgid ""
":class:`~transformers.TapasConfig` configuration class: "
":class:`~transformers.TapasForSequenceClassification` (TAPAS model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:43
msgid ""
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TransfoXLForSequenceClassification` (Transformer-XL"
" model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:44
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMForSequenceClassification` (XLM model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:45
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForSequenceClassification` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_config:46
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetForSequenceClassification` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:1
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:1
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a sequence "
"classification head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:7
msgid ""
"**albert** -- :class:`~transformers.AlbertForSequenceClassification` "
"(ALBERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:8
msgid ""
"**bart** -- :class:`~transformers.BartForSequenceClassification` (BART "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:9
msgid ""
"**bert** -- :class:`~transformers.BertForSequenceClassification` (BERT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:10
msgid ""
"**big_bird** -- :class:`~transformers.BigBirdForSequenceClassification` "
"(BigBird model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:11
msgid ""
"**bigbird_pegasus** -- "
":class:`~transformers.BigBirdPegasusForSequenceClassification` "
"(BigBirdPegasus model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:12
msgid ""
"**camembert** -- "
":class:`~transformers.CamembertForSequenceClassification` (CamemBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:13
msgid ""
"**canine** -- :class:`~transformers.CanineForSequenceClassification` "
"(Canine model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:14
msgid ""
"**convbert** -- :class:`~transformers.ConvBertForSequenceClassification` "
"(ConvBERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:15
msgid ""
"**ctrl** -- :class:`~transformers.CTRLForSequenceClassification` (CTRL "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:16
msgid ""
"**deberta** -- :class:`~transformers.DebertaForSequenceClassification` "
"(DeBERTa model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:17
msgid ""
"**deberta-v2** -- "
":class:`~transformers.DebertaV2ForSequenceClassification` (DeBERTa-v2 "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:18
msgid ""
"**distilbert** -- "
":class:`~transformers.DistilBertForSequenceClassification` (DistilBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:19
msgid ""
"**electra** -- :class:`~transformers.ElectraForSequenceClassification` "
"(ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:20
msgid ""
"**flaubert** -- :class:`~transformers.FlaubertForSequenceClassification` "
"(FlauBERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:21
msgid ""
"**funnel** -- :class:`~transformers.FunnelForSequenceClassification` "
"(Funnel Transformer model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:22
msgid ""
"**gpt2** -- :class:`~transformers.GPT2ForSequenceClassification` (OpenAI "
"GPT-2 model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:23
msgid ""
"**gpt_neo** -- :class:`~transformers.GPTNeoForSequenceClassification` "
"(GPT Neo model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:24
msgid ""
"**ibert** -- :class:`~transformers.IBertForSequenceClassification` "
"(I-BERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:25
msgid ""
"**layoutlm** -- :class:`~transformers.LayoutLMForSequenceClassification` "
"(LayoutLM model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:26
msgid "**led** -- :class:`~transformers.LEDForSequenceClassification` (LED model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:27
msgid ""
"**longformer** -- "
":class:`~transformers.LongformerForSequenceClassification` (Longformer "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:28
msgid ""
"**mbart** -- :class:`~transformers.MBartForSequenceClassification` (mBART"
" model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:29
msgid ""
"**megatron-bert** -- "
":class:`~transformers.MegatronBertForSequenceClassification` "
"(MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:30
msgid ""
"**mobilebert** -- "
":class:`~transformers.MobileBertForSequenceClassification` (MobileBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:31
msgid ""
"**mpnet** -- :class:`~transformers.MPNetForSequenceClassification` (MPNet"
" model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:32
msgid ""
"**openai-gpt** -- "
":class:`~transformers.OpenAIGPTForSequenceClassification` (OpenAI GPT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:33
msgid ""
"**reformer** -- :class:`~transformers.ReformerForSequenceClassification` "
"(Reformer model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:34
msgid ""
"**rembert** -- :class:`~transformers.RemBertForSequenceClassification` "
"(RemBERT model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:35
msgid ""
"**roberta** -- :class:`~transformers.RobertaForSequenceClassification` "
"(RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:36
msgid ""
"**roformer** -- :class:`~transformers.RoFormerForSequenceClassification` "
"(RoFormer model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:37
msgid ""
"**squeezebert** -- "
":class:`~transformers.SqueezeBertForSequenceClassification` (SqueezeBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:38
msgid ""
"**tapas** -- :class:`~transformers.TapasForSequenceClassification` (TAPAS"
" model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:39
msgid ""
"**transfo-xl** -- "
":class:`~transformers.TransfoXLForSequenceClassification` (Transformer-XL"
" model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:40
msgid "**xlm** -- :class:`~transformers.XLMForSequenceClassification` (XLM model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:41
msgid ""
"**xlm-roberta** -- "
":class:`~transformers.XLMRobertaForSequenceClassification` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.AutoModelForSequenceClassification.from_pretrained:42
msgid ""
"**xlnet** -- :class:`~transformers.XLNetForSequenceClassification` (XLNet"
" model)"
msgstr ""

#: ../../source/model_doc/auto.rst:97
msgid "AutoModelForMultipleChoice"
msgstr ""

#: of transformers.AutoModelForMultipleChoice:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a multiple choice head) when created "
"with the :meth:`~transformers.AutoModelForMultipleChoice.from_pretrained`"
" class method or the "
":meth:`~transformers.AutoModelForMultipleChoice.from_config` class "
"method."
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:1
#: transformers.FlaxAutoModelForMultipleChoice.from_config:1
#: transformers.TFAutoModelForMultipleChoice.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a multiple "
"choice head) from a configuration."
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForMultipleChoice.from_pretrained` to load "
"the model weights."
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForMultipleChoice` (ALBERT model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForMultipleChoice` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForMultipleChoice` (BigBird model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForMultipleChoice` (CamemBERT model) - "
":class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineForMultipleChoice` (Canine model) - "
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForMultipleChoice` (ConvBERT model) - "
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForMultipleChoice` (DistilBERT model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForMultipleChoice` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertForMultipleChoice` (FlauBERT model) - "
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForMultipleChoice` (Funnel Transformer model)"
" - :class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForMultipleChoice` (I-BERT model) - "
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForMultipleChoice` (Longformer model) - "
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForMultipleChoice` (MPNet model) - "
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForMultipleChoice` (MegatronBert model)"
" - :class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForMultipleChoice` (MobileBERT model) - "
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForMultipleChoice` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForMultipleChoice` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForMultipleChoice` (RoBERTa model) - "
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForMultipleChoice` (SqueezeBERT model) -"
" :class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMForMultipleChoice` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForMultipleChoice` (XLM-RoBERTa model) - "
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetForMultipleChoice` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForMultipleChoice` (ALBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForMultipleChoice` (BERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:13
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForMultipleChoice` (BigBird model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:14
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForMultipleChoice` (CamemBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:15
msgid ""
":class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineForMultipleChoice` (Canine model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:16
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForMultipleChoice` (ConvBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:17
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForMultipleChoice` (DistilBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:18
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForMultipleChoice` (ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:19
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertForMultipleChoice` (FlauBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:20
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForMultipleChoice` (Funnel Transformer model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:21
msgid ""
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForMultipleChoice` (I-BERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:22
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForMultipleChoice` (Longformer model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:23
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForMultipleChoice` (MPNet model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:24
msgid ""
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForMultipleChoice` (MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:25
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForMultipleChoice` (MobileBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:26
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForMultipleChoice` (RemBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:27
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForMultipleChoice` (RoFormer model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:28
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForMultipleChoice` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:29
msgid ""
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForMultipleChoice` (SqueezeBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:30
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMForMultipleChoice` (XLM model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:31
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForMultipleChoice` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_config:32
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetForMultipleChoice` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:1
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:1
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a multiple "
"choice head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:7
msgid ""
"**albert** -- :class:`~transformers.AlbertForMultipleChoice` (ALBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:8
msgid "**bert** -- :class:`~transformers.BertForMultipleChoice` (BERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:9
msgid ""
"**big_bird** -- :class:`~transformers.BigBirdForMultipleChoice` (BigBird "
"model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:10
msgid ""
"**camembert** -- :class:`~transformers.CamembertForMultipleChoice` "
"(CamemBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:11
msgid ""
"**canine** -- :class:`~transformers.CanineForMultipleChoice` (Canine "
"model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:12
msgid ""
"**convbert** -- :class:`~transformers.ConvBertForMultipleChoice` "
"(ConvBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:13
msgid ""
"**distilbert** -- :class:`~transformers.DistilBertForMultipleChoice` "
"(DistilBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:14
msgid ""
"**electra** -- :class:`~transformers.ElectraForMultipleChoice` (ELECTRA "
"model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:15
msgid ""
"**flaubert** -- :class:`~transformers.FlaubertForMultipleChoice` "
"(FlauBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:16
msgid ""
"**funnel** -- :class:`~transformers.FunnelForMultipleChoice` (Funnel "
"Transformer model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:17
msgid "**ibert** -- :class:`~transformers.IBertForMultipleChoice` (I-BERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:18
msgid ""
"**longformer** -- :class:`~transformers.LongformerForMultipleChoice` "
"(Longformer model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:19
msgid ""
"**megatron-bert** -- :class:`~transformers.MegatronBertForMultipleChoice`"
" (MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:20
msgid ""
"**mobilebert** -- :class:`~transformers.MobileBertForMultipleChoice` "
"(MobileBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:21
msgid "**mpnet** -- :class:`~transformers.MPNetForMultipleChoice` (MPNet model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:22
msgid ""
"**rembert** -- :class:`~transformers.RemBertForMultipleChoice` (RemBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:23
msgid ""
"**roberta** -- :class:`~transformers.RobertaForMultipleChoice` (RoBERTa "
"model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:24
msgid ""
"**roformer** -- :class:`~transformers.RoFormerForMultipleChoice` "
"(RoFormer model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:25
msgid ""
"**squeezebert** -- :class:`~transformers.SqueezeBertForMultipleChoice` "
"(SqueezeBERT model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:26
msgid "**xlm** -- :class:`~transformers.XLMForMultipleChoice` (XLM model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:27
msgid ""
"**xlm-roberta** -- :class:`~transformers.XLMRobertaForMultipleChoice` "
"(XLM-RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForMultipleChoice.from_pretrained:28
msgid "**xlnet** -- :class:`~transformers.XLNetForMultipleChoice` (XLNet model)"
msgstr ""

#: ../../source/model_doc/auto.rst:104
msgid "AutoModelForNextSentencePrediction"
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a next sentence prediction head) when "
"created with the "
":meth:`~transformers.AutoModelForNextSentencePrediction.from_pretrained` "
"class method or the "
":meth:`~transformers.AutoModelForNextSentencePrediction.from_config` "
"class method."
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_config:1
#: transformers.FlaxAutoModelForNextSentencePrediction.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a next "
"sentence prediction head) from a configuration."
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForNextSentencePrediction.from_pretrained` "
"to load the model weights."
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForNextSentencePrediction` (BERT model) - "
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForNextSentencePrediction` "
"(MegatronBert model) - :class:`~transformers.MobileBertConfig` "
"configuration class: "
":class:`~transformers.MobileBertForNextSentencePrediction` (MobileBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_config:11
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForNextSentencePrediction` (BERT model)"
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_config:12
msgid ""
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForNextSentencePrediction` "
"(MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_config:13
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForNextSentencePrediction` (MobileBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_pretrained:1
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a next sentence"
" prediction head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_pretrained:7
msgid ""
"**bert** -- :class:`~transformers.BertForNextSentencePrediction` (BERT "
"model)"
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_pretrained:8
msgid ""
"**megatron-bert** -- "
":class:`~transformers.MegatronBertForNextSentencePrediction` "
"(MegatronBert model)"
msgstr ""

#: of transformers.AutoModelForNextSentencePrediction.from_pretrained:9
msgid ""
"**mobilebert** -- "
":class:`~transformers.MobileBertForNextSentencePrediction` (MobileBERT "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:111
msgid "AutoModelForTokenClassification"
msgstr ""

#: of transformers.AutoModelForTokenClassification:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a token classification head) when "
"created with the "
":meth:`~transformers.AutoModelForTokenClassification.from_pretrained` "
"class method or the "
":meth:`~transformers.AutoModelForTokenClassification.from_config` class "
"method."
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:1
#: transformers.FlaxAutoModelForTokenClassification.from_config:1
#: transformers.TFAutoModelForTokenClassification.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a token "
"classification head) from a configuration."
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForTokenClassification.from_pretrained` to "
"load the model weights."
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForTokenClassification` (ALBERT model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForTokenClassification` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForTokenClassification` (BigBird model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForTokenClassification` (CamemBERT model) "
"- :class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineForTokenClassification` (Canine model) - "
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForTokenClassification` (ConvBERT model) - "
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaForTokenClassification` (DeBERTa model) - "
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2ForTokenClassification` (DeBERTa-v2 model)"
" - :class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForTokenClassification` (DistilBERT "
"model) - :class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForTokenClassification` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertForTokenClassification` (FlauBERT model) - "
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForTokenClassification` (Funnel Transformer "
"model) - :class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForTokenClassification` (I-BERT model) - "
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.LayoutLMForTokenClassification` (LayoutLM model) - "
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForTokenClassification` (Longformer "
"model) - :class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForTokenClassification` (MPNet model) - "
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForTokenClassification` (MegatronBert "
"model) - :class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForTokenClassification` (MobileBERT "
"model) - :class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForTokenClassification` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForTokenClassification` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForTokenClassification` (RoBERTa model) - "
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForTokenClassification` (SqueezeBERT "
"model) - :class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMForTokenClassification` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForTokenClassification` (XLM-RoBERTa "
"model) - :class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetForTokenClassification` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForTokenClassification` (ALBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForTokenClassification` (BERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:13
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForTokenClassification` (BigBird model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:14
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForTokenClassification` (CamemBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:15
msgid ""
":class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineForTokenClassification` (Canine model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:16
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForTokenClassification` (ConvBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:17
msgid ""
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaForTokenClassification` (DeBERTa model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:18
msgid ""
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2ForTokenClassification` (DeBERTa-v2 model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:19
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForTokenClassification` (DistilBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:20
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForTokenClassification` (ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:21
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertForTokenClassification` (FlauBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:22
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForTokenClassification` (Funnel Transformer "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:23
msgid ""
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForTokenClassification` (I-BERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:24
msgid ""
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.LayoutLMForTokenClassification` (LayoutLM model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:25
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForTokenClassification` (Longformer "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:26
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForTokenClassification` (MPNet model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:27
msgid ""
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForTokenClassification` (MegatronBert "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:28
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForTokenClassification` (MobileBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:29
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForTokenClassification` (RemBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:30
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForTokenClassification` (RoFormer model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:31
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForTokenClassification` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:32
msgid ""
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForTokenClassification` (SqueezeBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:33
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMForTokenClassification` (XLM model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:34
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForTokenClassification` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_config:35
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetForTokenClassification` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:1
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:1
#: transformers.TFAutoModelForTokenClassification.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a token "
"classification head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:7
msgid ""
"**albert** -- :class:`~transformers.AlbertForTokenClassification` (ALBERT"
" model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:8
msgid "**bert** -- :class:`~transformers.BertForTokenClassification` (BERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:9
msgid ""
"**big_bird** -- :class:`~transformers.BigBirdForTokenClassification` "
"(BigBird model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:10
msgid ""
"**camembert** -- :class:`~transformers.CamembertForTokenClassification` "
"(CamemBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:11
msgid ""
"**canine** -- :class:`~transformers.CanineForTokenClassification` (Canine"
" model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:12
msgid ""
"**convbert** -- :class:`~transformers.ConvBertForTokenClassification` "
"(ConvBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:13
msgid ""
"**deberta** -- :class:`~transformers.DebertaForTokenClassification` "
"(DeBERTa model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:14
msgid ""
"**deberta-v2** -- :class:`~transformers.DebertaV2ForTokenClassification` "
"(DeBERTa-v2 model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:15
msgid ""
"**distilbert** -- :class:`~transformers.DistilBertForTokenClassification`"
" (DistilBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:16
msgid ""
"**electra** -- :class:`~transformers.ElectraForTokenClassification` "
"(ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:17
msgid ""
"**flaubert** -- :class:`~transformers.FlaubertForTokenClassification` "
"(FlauBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:18
msgid ""
"**funnel** -- :class:`~transformers.FunnelForTokenClassification` (Funnel"
" Transformer model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:19
msgid ""
"**ibert** -- :class:`~transformers.IBertForTokenClassification` (I-BERT "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:20
msgid ""
"**layoutlm** -- :class:`~transformers.LayoutLMForTokenClassification` "
"(LayoutLM model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:21
msgid ""
"**longformer** -- :class:`~transformers.LongformerForTokenClassification`"
" (Longformer model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:22
msgid ""
"**megatron-bert** -- "
":class:`~transformers.MegatronBertForTokenClassification` (MegatronBert "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:23
msgid ""
"**mobilebert** -- :class:`~transformers.MobileBertForTokenClassification`"
" (MobileBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:24
msgid ""
"**mpnet** -- :class:`~transformers.MPNetForTokenClassification` (MPNet "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:25
msgid ""
"**rembert** -- :class:`~transformers.RemBertForTokenClassification` "
"(RemBERT model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:26
msgid ""
"**roberta** -- :class:`~transformers.RobertaForTokenClassification` "
"(RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:27
msgid ""
"**roformer** -- :class:`~transformers.RoFormerForTokenClassification` "
"(RoFormer model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:28
msgid ""
"**squeezebert** -- "
":class:`~transformers.SqueezeBertForTokenClassification` (SqueezeBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:29
msgid "**xlm** -- :class:`~transformers.XLMForTokenClassification` (XLM model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:30
msgid ""
"**xlm-roberta** -- "
":class:`~transformers.XLMRobertaForTokenClassification` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.AutoModelForTokenClassification.from_pretrained:31
msgid ""
"**xlnet** -- :class:`~transformers.XLNetForTokenClassification` (XLNet "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:118
msgid "AutoModelForQuestionAnswering"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a question answering head) when "
"created with the "
":meth:`~transformers.AutoModelForQuestionAnswering.from_pretrained` class"
" method or the "
":meth:`~transformers.AutoModelForQuestionAnswering.from_config` class "
"method."
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:1
#: transformers.FlaxAutoModelForQuestionAnswering.from_config:1
#: transformers.TFAutoModelForQuestionAnswering.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a question "
"answering head) from a configuration."
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForQuestionAnswering.from_pretrained` to "
"load the model weights."
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForQuestionAnswering` (ALBERT model) - "
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForQuestionAnswering` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForQuestionAnswering` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForQuestionAnswering` (BigBird model) - "
":class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusForQuestionAnswering` (BigBirdPegasus"
" model) - :class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForQuestionAnswering` (CamemBERT model) - "
":class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineForQuestionAnswering` (Canine model) - "
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForQuestionAnswering` (ConvBERT model) - "
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaForQuestionAnswering` (DeBERTa model) - "
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2ForQuestionAnswering` (DeBERTa-v2 model) -"
" :class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForQuestionAnswering` (DistilBERT model) "
"- :class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForQuestionAnswering` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertForQuestionAnsweringSimple` (FlauBERT "
"model) - :class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForQuestionAnswering` (Funnel Transformer "
"model) - :class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForQuestionAnswering` (I-BERT model) - "
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.LEDForQuestionAnswering` (LED model) - "
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForQuestionAnswering` (Longformer model) "
"- :class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.LxmertForQuestionAnswering` (LXMERT model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartForQuestionAnswering` (mBART model) - "
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForQuestionAnswering` (MPNet model) - "
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForQuestionAnswering` (MegatronBert "
"model) - :class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForQuestionAnswering` (MobileBERT model) "
"- :class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerForQuestionAnswering` (Reformer model) - "
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForQuestionAnswering` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForQuestionAnswering` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForQuestionAnswering` (RoBERTa model) - "
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForQuestionAnswering` (SqueezeBERT "
"model) - :class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMForQuestionAnsweringSimple` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForQuestionAnswering` (XLM-RoBERTa model)"
" - :class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetForQuestionAnsweringSimple` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.AlbertForQuestionAnswering` (ALBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:12
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.BartForQuestionAnswering` (BART model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:13
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.BertForQuestionAnswering` (BERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:14
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.BigBirdForQuestionAnswering` (BigBird model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:15
msgid ""
":class:`~transformers.BigBirdPegasusConfig` configuration class: "
":class:`~transformers.BigBirdPegasusForQuestionAnswering` (BigBirdPegasus"
" model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:16
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.CamembertForQuestionAnswering` (CamemBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:17
msgid ""
":class:`~transformers.CanineConfig` configuration class: "
":class:`~transformers.CanineForQuestionAnswering` (Canine model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:18
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.ConvBertForQuestionAnswering` (ConvBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:19
msgid ""
":class:`~transformers.DebertaConfig` configuration class: "
":class:`~transformers.DebertaForQuestionAnswering` (DeBERTa model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:20
msgid ""
":class:`~transformers.DebertaV2Config` configuration class: "
":class:`~transformers.DebertaV2ForQuestionAnswering` (DeBERTa-v2 model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:21
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.DistilBertForQuestionAnswering` (DistilBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:22
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.ElectraForQuestionAnswering` (ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:23
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.FlaubertForQuestionAnsweringSimple` (FlauBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:24
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.FunnelForQuestionAnswering` (Funnel Transformer "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:25
msgid ""
":class:`~transformers.IBertConfig` configuration class: "
":class:`~transformers.IBertForQuestionAnswering` (I-BERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:26
msgid ""
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.LEDForQuestionAnswering` (LED model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:27
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.LongformerForQuestionAnswering` (Longformer model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:28
msgid ""
":class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.LxmertForQuestionAnswering` (LXMERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:29
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.MBartForQuestionAnswering` (mBART model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:30
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.MPNetForQuestionAnswering` (MPNet model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:31
msgid ""
":class:`~transformers.MegatronBertConfig` configuration class: "
":class:`~transformers.MegatronBertForQuestionAnswering` (MegatronBert "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:32
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.MobileBertForQuestionAnswering` (MobileBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:33
msgid ""
":class:`~transformers.ReformerConfig` configuration class: "
":class:`~transformers.ReformerForQuestionAnswering` (Reformer model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:34
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.RemBertForQuestionAnswering` (RemBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:35
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.RoFormerForQuestionAnswering` (RoFormer model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:36
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.RobertaForQuestionAnswering` (RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:37
msgid ""
":class:`~transformers.SqueezeBertConfig` configuration class: "
":class:`~transformers.SqueezeBertForQuestionAnswering` (SqueezeBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:38
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.XLMForQuestionAnsweringSimple` (XLM model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:39
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.XLMRobertaForQuestionAnswering` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_config:40
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.XLNetForQuestionAnsweringSimple` (XLNet model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:1
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:1
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a question "
"answering head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:7
msgid ""
"**albert** -- :class:`~transformers.AlbertForQuestionAnswering` (ALBERT "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:8
msgid "**bart** -- :class:`~transformers.BartForQuestionAnswering` (BART model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:9
msgid "**bert** -- :class:`~transformers.BertForQuestionAnswering` (BERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:10
msgid ""
"**big_bird** -- :class:`~transformers.BigBirdForQuestionAnswering` "
"(BigBird model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:11
msgid ""
"**bigbird_pegasus** -- "
":class:`~transformers.BigBirdPegasusForQuestionAnswering` (BigBirdPegasus"
" model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:12
msgid ""
"**camembert** -- :class:`~transformers.CamembertForQuestionAnswering` "
"(CamemBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:13
msgid ""
"**canine** -- :class:`~transformers.CanineForQuestionAnswering` (Canine "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:14
msgid ""
"**convbert** -- :class:`~transformers.ConvBertForQuestionAnswering` "
"(ConvBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:15
msgid ""
"**deberta** -- :class:`~transformers.DebertaForQuestionAnswering` "
"(DeBERTa model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:16
msgid ""
"**deberta-v2** -- :class:`~transformers.DebertaV2ForQuestionAnswering` "
"(DeBERTa-v2 model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:17
msgid ""
"**distilbert** -- :class:`~transformers.DistilBertForQuestionAnswering` "
"(DistilBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:18
msgid ""
"**electra** -- :class:`~transformers.ElectraForQuestionAnswering` "
"(ELECTRA model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:19
msgid ""
"**flaubert** -- :class:`~transformers.FlaubertForQuestionAnsweringSimple`"
" (FlauBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:20
msgid ""
"**funnel** -- :class:`~transformers.FunnelForQuestionAnswering` (Funnel "
"Transformer model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:21
msgid ""
"**ibert** -- :class:`~transformers.IBertForQuestionAnswering` (I-BERT "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:22
msgid "**led** -- :class:`~transformers.LEDForQuestionAnswering` (LED model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:23
msgid ""
"**longformer** -- :class:`~transformers.LongformerForQuestionAnswering` "
"(Longformer model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:24
msgid ""
"**lxmert** -- :class:`~transformers.LxmertForQuestionAnswering` (LXMERT "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:25
msgid ""
"**mbart** -- :class:`~transformers.MBartForQuestionAnswering` (mBART "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:26
msgid ""
"**megatron-bert** -- "
":class:`~transformers.MegatronBertForQuestionAnswering` (MegatronBert "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:27
msgid ""
"**mobilebert** -- :class:`~transformers.MobileBertForQuestionAnswering` "
"(MobileBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:28
msgid ""
"**mpnet** -- :class:`~transformers.MPNetForQuestionAnswering` (MPNet "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:29
msgid ""
"**reformer** -- :class:`~transformers.ReformerForQuestionAnswering` "
"(Reformer model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:30
msgid ""
"**rembert** -- :class:`~transformers.RemBertForQuestionAnswering` "
"(RemBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:31
msgid ""
"**roberta** -- :class:`~transformers.RobertaForQuestionAnswering` "
"(RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:32
msgid ""
"**roformer** -- :class:`~transformers.RoFormerForQuestionAnswering` "
"(RoFormer model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:33
msgid ""
"**squeezebert** -- :class:`~transformers.SqueezeBertForQuestionAnswering`"
" (SqueezeBERT model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:34
msgid ""
"**xlm** -- :class:`~transformers.XLMForQuestionAnsweringSimple` (XLM "
"model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:35
msgid ""
"**xlm-roberta** -- :class:`~transformers.XLMRobertaForQuestionAnswering` "
"(XLM-RoBERTa model)"
msgstr ""

#: of transformers.AutoModelForQuestionAnswering.from_pretrained:36
msgid ""
"**xlnet** -- :class:`~transformers.XLNetForQuestionAnsweringSimple` "
"(XLNet model)"
msgstr ""

#: ../../source/model_doc/auto.rst:125
msgid "AutoModelForTableQuestionAnswering"
msgstr ""

#: of transformers.AutoModelForTableQuestionAnswering:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a table question answering head) when "
"created with the "
":meth:`~transformers.AutoModelForTableQuestionAnswering.from_pretrained` "
"class method or the "
":meth:`~transformers.AutoModelForTableQuestionAnswering.from_config` "
"class method."
msgstr ""

#: of transformers.AutoModelForTableQuestionAnswering.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a table "
"question answering head) from a configuration."
msgstr ""

#: of transformers.AutoModelForTableQuestionAnswering.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForTableQuestionAnswering.from_pretrained` "
"to load the model weights."
msgstr ""

#: of transformers.AutoModelForTableQuestionAnswering.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.TapasConfig` configuration class: "
":class:`~transformers.TapasForQuestionAnswering` (TAPAS model)"
msgstr ""

#: of transformers.AutoModelForTableQuestionAnswering.from_config:11
msgid ""
":class:`~transformers.TapasConfig` configuration class: "
":class:`~transformers.TapasForQuestionAnswering` (TAPAS model)"
msgstr ""

#: of transformers.AutoModelForTableQuestionAnswering.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a table "
"question answering head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForTableQuestionAnswering.from_pretrained:7
msgid ""
"**tapas** -- :class:`~transformers.TapasForQuestionAnswering` (TAPAS "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:132
msgid "AutoModelForImageClassification"
msgstr ""

#: of transformers.AutoModelForImageClassification:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a image classification head) when "
"created with the "
":meth:`~transformers.AutoModelForImageClassification.from_pretrained` "
"class method or the "
":meth:`~transformers.AutoModelForImageClassification.from_config` class "
"method."
msgstr ""

#: of transformers.AutoModelForImageClassification.from_config:1
#: transformers.FlaxAutoModelForImageClassification.from_config:1
msgid ""
"Instantiates one of the model classes of the library (with a image "
"classification head) from a configuration."
msgstr ""

#: of transformers.AutoModelForImageClassification.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.AutoModelForImageClassification.from_pretrained` to "
"load the model weights."
msgstr ""

#: of transformers.AutoModelForImageClassification.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BeitConfig` configuration class: "
":class:`~transformers.BeitForImageClassification` (BeiT model) - "
":class:`~transformers.DeiTConfig` configuration class: "
":class:`~transformers.DeiTForImageClassification` or "
":class:`~transformers.DeiTForImageClassificationWithTeacher` (DeiT model)"
" - :class:`~transformers.ViTConfig` configuration class: "
":class:`~transformers.ViTForImageClassification` (ViT model)"
msgstr ""

#: of transformers.AutoModelForImageClassification.from_config:11
msgid ""
":class:`~transformers.BeitConfig` configuration class: "
":class:`~transformers.BeitForImageClassification` (BeiT model)"
msgstr ""

#: of transformers.AutoModelForImageClassification.from_config:12
msgid ""
":class:`~transformers.DeiTConfig` configuration class: "
":class:`~transformers.DeiTForImageClassification` or "
":class:`~transformers.DeiTForImageClassificationWithTeacher` (DeiT model)"
msgstr ""

#: of transformers.AutoModelForImageClassification.from_config:13
msgid ""
":class:`~transformers.ViTConfig` configuration class: "
":class:`~transformers.ViTForImageClassification` (ViT model)"
msgstr ""

#: of transformers.AutoModelForImageClassification.from_pretrained:1
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:1
msgid ""
"Instantiate one of the model classes of the library (with a image "
"classification head) from a pretrained model."
msgstr ""

#: of transformers.AutoModelForImageClassification.from_pretrained:7
msgid "**beit** -- :class:`~transformers.BeitForImageClassification` (BeiT model)"
msgstr ""

#: of transformers.AutoModelForImageClassification.from_pretrained:8
msgid ""
"**deit** -- :class:`~transformers.DeiTForImageClassification` or "
":class:`~transformers.DeiTForImageClassificationWithTeacher` (DeiT model)"
msgstr ""

#: of transformers.AutoModelForImageClassification.from_pretrained:9
msgid "**vit** -- :class:`~transformers.ViTForImageClassification` (ViT model)"
msgstr ""

#: ../../source/model_doc/auto.rst:139
msgid "TFAutoModel"
msgstr ""

#: of transformers.TFAutoModel:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"base model classes of the library when created with the "
":meth:`~transformers.TFAutoModel.from_pretrained` class method or the "
":meth:`~transformers.TFAutoModel.from_config` class method."
msgstr ""

#: of transformers.TFAutoModel.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.TFAutoModel.from_pretrained` to load the model "
"weights."
msgstr ""

#: of transformers.TFAutoModel.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertModel` (ALBERT model) - "
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.TFBartModel` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertModel` (BERT model) - "
":class:`~transformers.BlenderbotConfig` configuration class: "
":class:`~transformers.TFBlenderbotModel` (Blenderbot model) - "
":class:`~transformers.BlenderbotSmallConfig` configuration class: "
":class:`~transformers.TFBlenderbotSmallModel` (BlenderbotSmall model) - "
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.TFCTRLModel` (CTRL model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertModel` (CamemBERT model) - "
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertModel` (ConvBERT model) - "
":class:`~transformers.DPRConfig` configuration class: "
":class:`~transformers.TFDPRQuestionEncoder` (DPR model) - "
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertModel` (DistilBERT model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraModel` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertModel` (FlauBERT model) - "
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelModel` or "
":class:`~transformers.TFFunnelBaseModel` (Funnel Transformer model) - "
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.TFGPT2Model` (OpenAI GPT-2 model) - "
":class:`~transformers.HubertConfig` configuration class: "
":class:`~transformers.TFHubertModel` (Hubert model) - "
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.TFLEDModel` (LED model) - "
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.TFLayoutLMModel` (LayoutLM model) - "
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerModel` (Longformer model) - "
":class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.TFLxmertModel` (LXMERT model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.TFMBartModel` (mBART model) - "
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetModel` (MPNet model) - "
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.TFMT5Model` (mT5 model) - "
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.TFMarianModel` (Marian model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertModel` (MobileBERT model) - "
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.TFOpenAIGPTModel` (OpenAI GPT model) - "
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.TFPegasusModel` (Pegasus model) - "
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertModel` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerModel` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaModel` (RoBERTa model) - "
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.TFT5Model` (T5 model) - "
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TFTransfoXLModel` (Transformer-XL model) - "
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.TFWav2Vec2Model` (Wav2Vec2 model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMModel` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaModel` (XLM-RoBERTa model) - "
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetModel` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertModel` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:12
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.TFBartModel` (BART model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:13
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertModel` (BERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:14
msgid ""
":class:`~transformers.BlenderbotConfig` configuration class: "
":class:`~transformers.TFBlenderbotModel` (Blenderbot model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:15
msgid ""
":class:`~transformers.BlenderbotSmallConfig` configuration class: "
":class:`~transformers.TFBlenderbotSmallModel` (BlenderbotSmall model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:16
msgid ""
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.TFCTRLModel` (CTRL model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:17
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertModel` (CamemBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:18
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertModel` (ConvBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:19
msgid ""
":class:`~transformers.DPRConfig` configuration class: "
":class:`~transformers.TFDPRQuestionEncoder` (DPR model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:20
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertModel` (DistilBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:21
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraModel` (ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:22
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertModel` (FlauBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:23
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelModel` or "
":class:`~transformers.TFFunnelBaseModel` (Funnel Transformer model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:24
msgid ""
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.TFGPT2Model` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:25
msgid ""
":class:`~transformers.HubertConfig` configuration class: "
":class:`~transformers.TFHubertModel` (Hubert model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:26
msgid ""
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.TFLEDModel` (LED model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:27
msgid ""
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.TFLayoutLMModel` (LayoutLM model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:28
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerModel` (Longformer model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:29
msgid ""
":class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.TFLxmertModel` (LXMERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:30
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.TFMBartModel` (mBART model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:31
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetModel` (MPNet model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:32
msgid ""
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.TFMT5Model` (mT5 model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:33
msgid ""
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.TFMarianModel` (Marian model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:34
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertModel` (MobileBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:35
msgid ""
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.TFOpenAIGPTModel` (OpenAI GPT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:36
msgid ""
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.TFPegasusModel` (Pegasus model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:37
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertModel` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:38
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerModel` (RoFormer model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:39
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaModel` (RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:40
msgid ""
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.TFT5Model` (T5 model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:41
msgid ""
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TFTransfoXLModel` (Transformer-XL model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:42
msgid ""
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.TFWav2Vec2Model` (Wav2Vec2 model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:43
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMModel` (XLM model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:44
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaModel` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModel.from_config:45
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetModel` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:7
msgid "**albert** -- :class:`~transformers.TFAlbertModel` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:8
msgid "**bart** -- :class:`~transformers.TFBartModel` (BART model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:9
msgid "**bert** -- :class:`~transformers.TFBertModel` (BERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:10
msgid ""
"**blenderbot** -- :class:`~transformers.TFBlenderbotModel` (Blenderbot "
"model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:11
msgid ""
"**blenderbot-small** -- :class:`~transformers.TFBlenderbotSmallModel` "
"(BlenderbotSmall model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:12
msgid "**camembert** -- :class:`~transformers.TFCamembertModel` (CamemBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:13
msgid "**convbert** -- :class:`~transformers.TFConvBertModel` (ConvBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:14
msgid "**ctrl** -- :class:`~transformers.TFCTRLModel` (CTRL model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:15
msgid ""
"**distilbert** -- :class:`~transformers.TFDistilBertModel` (DistilBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:16
msgid "**dpr** -- :class:`~transformers.TFDPRQuestionEncoder` (DPR model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:17
msgid "**electra** -- :class:`~transformers.TFElectraModel` (ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:18
msgid "**flaubert** -- :class:`~transformers.TFFlaubertModel` (FlauBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:19
msgid ""
"**funnel** -- :class:`~transformers.TFFunnelModel` or "
":class:`~transformers.TFFunnelBaseModel` (Funnel Transformer model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:20
msgid "**gpt2** -- :class:`~transformers.TFGPT2Model` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:21
msgid "**hubert** -- :class:`~transformers.TFHubertModel` (Hubert model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:22
msgid "**layoutlm** -- :class:`~transformers.TFLayoutLMModel` (LayoutLM model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:23
msgid "**led** -- :class:`~transformers.TFLEDModel` (LED model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:24
msgid ""
"**longformer** -- :class:`~transformers.TFLongformerModel` (Longformer "
"model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:25
msgid "**lxmert** -- :class:`~transformers.TFLxmertModel` (LXMERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:26
msgid "**marian** -- :class:`~transformers.TFMarianModel` (Marian model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:27
msgid "**mbart** -- :class:`~transformers.TFMBartModel` (mBART model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:28
msgid ""
"**mobilebert** -- :class:`~transformers.TFMobileBertModel` (MobileBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:29
msgid "**mpnet** -- :class:`~transformers.TFMPNetModel` (MPNet model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:30
msgid "**mt5** -- :class:`~transformers.TFMT5Model` (mT5 model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:31
msgid ""
"**openai-gpt** -- :class:`~transformers.TFOpenAIGPTModel` (OpenAI GPT "
"model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:32
msgid "**pegasus** -- :class:`~transformers.TFPegasusModel` (Pegasus model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:33
msgid "**rembert** -- :class:`~transformers.TFRemBertModel` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:34
msgid "**roberta** -- :class:`~transformers.TFRobertaModel` (RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:35
msgid "**roformer** -- :class:`~transformers.TFRoFormerModel` (RoFormer model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:36
msgid "**t5** -- :class:`~transformers.TFT5Model` (T5 model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:37
msgid ""
"**transfo-xl** -- :class:`~transformers.TFTransfoXLModel` (Transformer-XL"
" model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:38
msgid "**wav2vec2** -- :class:`~transformers.TFWav2Vec2Model` (Wav2Vec2 model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:39
msgid "**xlm** -- :class:`~transformers.TFXLMModel` (XLM model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:40
msgid ""
"**xlm-roberta** -- :class:`~transformers.TFXLMRobertaModel` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.TFAutoModel.from_pretrained:41
msgid "**xlnet** -- :class:`~transformers.TFXLNetModel` (XLNet model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:22
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:10
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:9
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:14
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:12
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:9
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:17
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:14
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:12
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:14
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:12
#: transformers.TFAutoModel.from_pretrained:43
#: transformers.TFAutoModelForCausalLM.from_pretrained:17
#: transformers.TFAutoModelForMaskedLM.from_pretrained:25
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:25
#: transformers.TFAutoModelForPreTraining.from_pretrained:29
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:25
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:17
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:30
#: transformers.TFAutoModelForTokenClassification.from_pretrained:26
msgid ""
"Can be either:      - A string, the `model id` of a pretrained model "
"hosted inside a model repo on huggingface.co.       Valid model ids can "
"be located at the root-level, like ``bert-base-uncased``, or namespaced "
"under       a user or organization name, like ``dbmdz/bert-base-german-"
"cased``.     - A path to a `directory` containing model weights saved "
"using       :func:`~transformers.PreTrainedModel.save_pretrained`, e.g., "
"``./my_model_directory/``.     - A path or url to a `PyTorch state_dict "
"save file` (e.g, ``./pt_model/pytorch_model.bin``). In       this case, "
"``from_pt`` should be set to :obj:`True` and a configuration object "
"should be provided       as ``config`` argument. This loading path is "
"slower than converting the PyTorch model in a       TensorFlow model "
"using the provided conversion scripts and loading the TensorFlow model"
"       afterwards."
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:30
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:18
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:17
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:22
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:20
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:17
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:25
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:22
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:20
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:22
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:20
#: transformers.TFAutoModel.from_pretrained:51
#: transformers.TFAutoModelForCausalLM.from_pretrained:25
#: transformers.TFAutoModelForMaskedLM.from_pretrained:33
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:33
#: transformers.TFAutoModelForPreTraining.from_pretrained:37
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:33
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:25
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:38
#: transformers.TFAutoModelForTokenClassification.from_pretrained:34
msgid ""
"A path or url to a `PyTorch state_dict save file` (e.g, "
"``./pt_model/pytorch_model.bin``). In this case, ``from_pt`` should be "
"set to :obj:`True` and a configuration object should be provided as "
"``config`` argument. This loading path is slower than converting the "
"PyTorch model in a TensorFlow model using the provided conversion scripts"
" and loading the TensorFlow model afterwards."
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:51
#: transformers.FlaxAutoModelForCausalLM.from_pretrained:39
#: transformers.FlaxAutoModelForImageClassification.from_pretrained:38
#: transformers.FlaxAutoModelForMaskedLM.from_pretrained:43
#: transformers.FlaxAutoModelForMultipleChoice.from_pretrained:41
#: transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:38
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:46
#: transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:43
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:41
#: transformers.FlaxAutoModelForSequenceClassification.from_pretrained:43
#: transformers.FlaxAutoModelForTokenClassification.from_pretrained:41
#: transformers.TFAutoModel.from_pretrained:72
#: transformers.TFAutoModelForCausalLM.from_pretrained:46
#: transformers.TFAutoModelForMaskedLM.from_pretrained:54
#: transformers.TFAutoModelForMultipleChoice.from_pretrained:54
#: transformers.TFAutoModelForPreTraining.from_pretrained:58
#: transformers.TFAutoModelForQuestionAnswering.from_pretrained:54
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:46
#: transformers.TFAutoModelForSequenceClassification.from_pretrained:59
#: transformers.TFAutoModelForTokenClassification.from_pretrained:55
msgid ""
"Load the model weights from a PyTorch checkpoint save file (see docstring"
" of ``pretrained_model_name_or_path`` argument)."
msgstr ""

#: ../../source/model_doc/auto.rst:146
msgid "TFAutoModelForPreTraining"
msgstr ""

#: of transformers.TFAutoModelForPreTraining:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a pretraining head) when created with "
"the :meth:`~transformers.TFAutoModelForPreTraining.from_pretrained` class"
" method or the "
":meth:`~transformers.TFAutoModelForPreTraining.from_config` class method."
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.TFAutoModelForPreTraining.from_pretrained` to load "
"the model weights."
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForPreTraining` (ALBERT model) - "
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.TFBartForConditionalGeneration` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForPreTraining` (BERT model) - "
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.TFCTRLLMHeadModel` (CTRL model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForMaskedLM` (CamemBERT model) - "
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForMaskedLM` (DistilBERT model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForPreTraining` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertWithLMHeadModel` (FlauBERT model) - "
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForPreTraining` (Funnel Transformer model) "
"- :class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.TFGPT2LMHeadModel` (OpenAI GPT-2 model) - "
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.TFLayoutLMForMaskedLM` (LayoutLM model) - "
":class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.TFLxmertForPreTraining` (LXMERT model) - "
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForMaskedLM` (MPNet model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForPreTraining` (MobileBERT model) - "
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.TFOpenAIGPTLMHeadModel` (OpenAI GPT model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForMaskedLM` (RoBERTa model) - "
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.TFT5ForConditionalGeneration` (T5 model) - "
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TFTransfoXLLMHeadModel` (Transformer-XL model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMWithLMHeadModel` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForMaskedLM` (XLM-RoBERTa model) - "
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetLMHeadModel` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForPreTraining` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:12
#: transformers.TFAutoModelForSeq2SeqLM.from_config:11
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.TFBartForConditionalGeneration` (BART model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:13
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForPreTraining` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:12
#: transformers.TFAutoModelForPreTraining.from_config:14
msgid ""
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.TFCTRLLMHeadModel` (CTRL model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:13
#: transformers.TFAutoModelForPreTraining.from_config:15
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForMaskedLM` (CamemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:15
#: transformers.TFAutoModelForPreTraining.from_config:16
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForMaskedLM` (DistilBERT model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:17
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForPreTraining` (ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:17
#: transformers.TFAutoModelForPreTraining.from_config:18
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertWithLMHeadModel` (FlauBERT model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:19
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForPreTraining` (Funnel Transformer model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:13
#: transformers.TFAutoModelForPreTraining.from_config:20
msgid ""
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.TFGPT2LMHeadModel` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:19
#: transformers.TFAutoModelForPreTraining.from_config:21
msgid ""
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.TFLayoutLMForMaskedLM` (LayoutLM model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:22
msgid ""
":class:`~transformers.LxmertConfig` configuration class: "
":class:`~transformers.TFLxmertForPreTraining` (LXMERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:21
#: transformers.TFAutoModelForPreTraining.from_config:23
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForMaskedLM` (MPNet model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:24
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForPreTraining` (MobileBERT model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:14
#: transformers.TFAutoModelForPreTraining.from_config:25
msgid ""
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.TFOpenAIGPTLMHeadModel` (OpenAI GPT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:25
#: transformers.TFAutoModelForPreTraining.from_config:26
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForMaskedLM` (RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_config:27
#: transformers.TFAutoModelForSeq2SeqLM.from_config:19
msgid ""
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.TFT5ForConditionalGeneration` (T5 model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:17
#: transformers.TFAutoModelForPreTraining.from_config:28
msgid ""
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TFTransfoXLLMHeadModel` (Transformer-XL model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:18
#: transformers.TFAutoModelForMaskedLM.from_config:26
#: transformers.TFAutoModelForPreTraining.from_config:29
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMWithLMHeadModel` (XLM model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:27
#: transformers.TFAutoModelForPreTraining.from_config:30
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForMaskedLM` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:19
#: transformers.TFAutoModelForPreTraining.from_config:31
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetLMHeadModel` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_pretrained:7
msgid "**albert** -- :class:`~transformers.TFAlbertForPreTraining` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_pretrained:8
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:7
msgid ""
"**bart** -- :class:`~transformers.TFBartForConditionalGeneration` (BART "
"model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_pretrained:9
msgid "**bert** -- :class:`~transformers.TFBertForPreTraining` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:9
#: transformers.TFAutoModelForPreTraining.from_pretrained:10
msgid ""
"**camembert** -- :class:`~transformers.TFCamembertForMaskedLM` (CamemBERT"
" model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_pretrained:8
#: transformers.TFAutoModelForPreTraining.from_pretrained:11
msgid "**ctrl** -- :class:`~transformers.TFCTRLLMHeadModel` (CTRL model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:11
#: transformers.TFAutoModelForPreTraining.from_pretrained:12
msgid ""
"**distilbert** -- :class:`~transformers.TFDistilBertForMaskedLM` "
"(DistilBERT model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_pretrained:13
msgid ""
"**electra** -- :class:`~transformers.TFElectraForPreTraining` (ELECTRA "
"model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:13
#: transformers.TFAutoModelForPreTraining.from_pretrained:14
msgid ""
"**flaubert** -- :class:`~transformers.TFFlaubertWithLMHeadModel` "
"(FlauBERT model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_pretrained:15
msgid ""
"**funnel** -- :class:`~transformers.TFFunnelForPreTraining` (Funnel "
"Transformer model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_pretrained:9
#: transformers.TFAutoModelForPreTraining.from_pretrained:16
msgid "**gpt2** -- :class:`~transformers.TFGPT2LMHeadModel` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:15
#: transformers.TFAutoModelForPreTraining.from_pretrained:17
msgid ""
"**layoutlm** -- :class:`~transformers.TFLayoutLMForMaskedLM` (LayoutLM "
"model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_pretrained:18
msgid "**lxmert** -- :class:`~transformers.TFLxmertForPreTraining` (LXMERT model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_pretrained:19
msgid ""
"**mobilebert** -- :class:`~transformers.TFMobileBertForPreTraining` "
"(MobileBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:18
#: transformers.TFAutoModelForPreTraining.from_pretrained:20
msgid "**mpnet** -- :class:`~transformers.TFMPNetForMaskedLM` (MPNet model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_pretrained:10
#: transformers.TFAutoModelForPreTraining.from_pretrained:21
msgid ""
"**openai-gpt** -- :class:`~transformers.TFOpenAIGPTLMHeadModel` (OpenAI "
"GPT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:20
#: transformers.TFAutoModelForPreTraining.from_pretrained:22
msgid "**roberta** -- :class:`~transformers.TFRobertaForMaskedLM` (RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForPreTraining.from_pretrained:23
#: transformers.TFAutoModelForSeq2SeqLM.from_pretrained:15
msgid "**t5** -- :class:`~transformers.TFT5ForConditionalGeneration` (T5 model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_pretrained:13
#: transformers.TFAutoModelForPreTraining.from_pretrained:24
msgid ""
"**transfo-xl** -- :class:`~transformers.TFTransfoXLLMHeadModel` "
"(Transformer-XL model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_pretrained:14
#: transformers.TFAutoModelForMaskedLM.from_pretrained:22
#: transformers.TFAutoModelForPreTraining.from_pretrained:25
msgid "**xlm** -- :class:`~transformers.TFXLMWithLMHeadModel` (XLM model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:23
#: transformers.TFAutoModelForPreTraining.from_pretrained:26
msgid ""
"**xlm-roberta** -- :class:`~transformers.TFXLMRobertaForMaskedLM` (XLM-"
"RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_pretrained:15
#: transformers.TFAutoModelForPreTraining.from_pretrained:27
msgid "**xlnet** -- :class:`~transformers.TFXLNetLMHeadModel` (XLNet model)"
msgstr ""

#: ../../source/model_doc/auto.rst:153
msgid "TFAutoModelForCausalLM"
msgstr ""

#: of transformers.TFAutoModelForCausalLM:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a causal language modeling head) when "
"created with the "
":meth:`~transformers.TFAutoModelForCausalLM.from_pretrained` class method"
" or the :meth:`~transformers.TFAutoModelForCausalLM.from_config` class "
"method."
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.TFAutoModelForCausalLM.from_pretrained` to load the "
"model weights."
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertLMHeadModel` (BERT model) - "
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.TFCTRLLMHeadModel` (CTRL model) - "
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.TFGPT2LMHeadModel` (OpenAI GPT-2 model) - "
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.TFOpenAIGPTLMHeadModel` (OpenAI GPT model) - "
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForCausalLM` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForCausalLM` (RoFormer model) - "
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TFTransfoXLLMHeadModel` (Transformer-XL model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMWithLMHeadModel` (XLM model) - "
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetLMHeadModel` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:11
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertLMHeadModel` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:15
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForCausalLM` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_config:16
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForCausalLM` (RoFormer model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_pretrained:7
msgid "**bert** -- :class:`~transformers.TFBertLMHeadModel` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_pretrained:11
msgid "**rembert** -- :class:`~transformers.TFRemBertForCausalLM` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForCausalLM.from_pretrained:12
msgid ""
"**roformer** -- :class:`~transformers.TFRoFormerForCausalLM` (RoFormer "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:160
msgid "TFAutoModelForMaskedLM"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a masked language modeling head) when "
"created with the "
":meth:`~transformers.TFAutoModelForMaskedLM.from_pretrained` class method"
" or the :meth:`~transformers.TFAutoModelForMaskedLM.from_config` class "
"method."
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.TFAutoModelForMaskedLM.from_pretrained` to load the "
"model weights."
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForMaskedLM` (ALBERT model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForMaskedLM` (BERT model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForMaskedLM` (CamemBERT model) - "
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForMaskedLM` (ConvBERT model) - "
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForMaskedLM` (DistilBERT model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForMaskedLM` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertWithLMHeadModel` (FlauBERT model) - "
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForMaskedLM` (Funnel Transformer model) - "
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.TFLayoutLMForMaskedLM` (LayoutLM model) - "
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForMaskedLM` (Longformer model) - "
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForMaskedLM` (MPNet model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForMaskedLM` (MobileBERT model) - "
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForMaskedLM` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForMaskedLM` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForMaskedLM` (RoBERTa model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMWithLMHeadModel` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForMaskedLM` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForMaskedLM` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForMaskedLM` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:14
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForMaskedLM` (ConvBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:16
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForMaskedLM` (ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:18
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForMaskedLM` (Funnel Transformer model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:20
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForMaskedLM` (Longformer model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:22
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForMaskedLM` (MobileBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:23
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForMaskedLM` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_config:24
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForMaskedLM` (RoFormer model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:7
msgid "**albert** -- :class:`~transformers.TFAlbertForMaskedLM` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:8
msgid "**bert** -- :class:`~transformers.TFBertForMaskedLM` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:10
msgid ""
"**convbert** -- :class:`~transformers.TFConvBertForMaskedLM` (ConvBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:12
msgid "**electra** -- :class:`~transformers.TFElectraForMaskedLM` (ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:14
msgid ""
"**funnel** -- :class:`~transformers.TFFunnelForMaskedLM` (Funnel "
"Transformer model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:16
msgid ""
"**longformer** -- :class:`~transformers.TFLongformerForMaskedLM` "
"(Longformer model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:17
msgid ""
"**mobilebert** -- :class:`~transformers.TFMobileBertForMaskedLM` "
"(MobileBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:19
msgid "**rembert** -- :class:`~transformers.TFRemBertForMaskedLM` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMaskedLM.from_pretrained:21
msgid ""
"**roformer** -- :class:`~transformers.TFRoFormerForMaskedLM` (RoFormer "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:167
msgid "TFAutoModelForSeq2SeqLM"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a sequence-to-sequence language "
"modeling head) when created with the "
":meth:`~transformers.TFAutoModelForSeq2SeqLM.from_pretrained` class "
"method or the :meth:`~transformers.TFAutoModelForSeq2SeqLM.from_config` "
"class method."
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.TFAutoModelForSeq2SeqLM.from_pretrained` to load the"
" model weights."
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.TFBartForConditionalGeneration` (BART model) - "
":class:`~transformers.BlenderbotConfig` configuration class: "
":class:`~transformers.TFBlenderbotForConditionalGeneration` (Blenderbot "
"model) - :class:`~transformers.BlenderbotSmallConfig` configuration "
"class: :class:`~transformers.TFBlenderbotSmallForConditionalGeneration` "
"(BlenderbotSmall model) - :class:`~transformers.LEDConfig` configuration "
"class: :class:`~transformers.TFLEDForConditionalGeneration` (LED model) -"
" :class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.TFMBartForConditionalGeneration` (mBART model) - "
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.TFMT5ForConditionalGeneration` (mT5 model) - "
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.TFMarianMTModel` (Marian model) - "
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.TFPegasusForConditionalGeneration` (Pegasus model) "
"- :class:`~transformers.T5Config` configuration class: "
":class:`~transformers.TFT5ForConditionalGeneration` (T5 model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_config:12
msgid ""
":class:`~transformers.BlenderbotConfig` configuration class: "
":class:`~transformers.TFBlenderbotForConditionalGeneration` (Blenderbot "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_config:13
msgid ""
":class:`~transformers.BlenderbotSmallConfig` configuration class: "
":class:`~transformers.TFBlenderbotSmallForConditionalGeneration` "
"(BlenderbotSmall model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_config:14
msgid ""
":class:`~transformers.LEDConfig` configuration class: "
":class:`~transformers.TFLEDForConditionalGeneration` (LED model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_config:15
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.TFMBartForConditionalGeneration` (mBART model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_config:16
msgid ""
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.TFMT5ForConditionalGeneration` (mT5 model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_config:17
msgid ""
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.TFMarianMTModel` (Marian model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_config:18
msgid ""
":class:`~transformers.PegasusConfig` configuration class: "
":class:`~transformers.TFPegasusForConditionalGeneration` (Pegasus model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_pretrained:8
msgid ""
"**blenderbot** -- "
":class:`~transformers.TFBlenderbotForConditionalGeneration` (Blenderbot "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_pretrained:9
msgid ""
"**blenderbot-small** -- "
":class:`~transformers.TFBlenderbotSmallForConditionalGeneration` "
"(BlenderbotSmall model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_pretrained:10
msgid ""
"**led** -- :class:`~transformers.TFLEDForConditionalGeneration` (LED "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_pretrained:11
msgid "**marian** -- :class:`~transformers.TFMarianMTModel` (Marian model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_pretrained:12
msgid ""
"**mbart** -- :class:`~transformers.TFMBartForConditionalGeneration` "
"(mBART model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_pretrained:13
msgid ""
"**mt5** -- :class:`~transformers.TFMT5ForConditionalGeneration` (mT5 "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSeq2SeqLM.from_pretrained:14
msgid ""
"**pegasus** -- :class:`~transformers.TFPegasusForConditionalGeneration` "
"(Pegasus model)"
msgstr ""

#: ../../source/model_doc/auto.rst:174
msgid "TFAutoModelForSequenceClassification"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a sequence classification head) when "
"created with the "
":meth:`~transformers.TFAutoModelForSequenceClassification.from_pretrained`"
" class method or the "
":meth:`~transformers.TFAutoModelForSequenceClassification.from_config` "
"class method."
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.TFAutoModelForSequenceClassification.from_pretrained`"
" to load the model weights."
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForSequenceClassification` (ALBERT model) -"
" :class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForSequenceClassification` (BERT model) - "
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.TFCTRLForSequenceClassification` (CTRL model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForSequenceClassification` (CamemBERT "
"model) - :class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForSequenceClassification` (ConvBERT "
"model) - :class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForSequenceClassification` (DistilBERT "
"model) - :class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForSequenceClassification` (ELECTRA model)"
" - :class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertForSequenceClassification` (FlauBERT "
"model) - :class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForSequenceClassification` (Funnel "
"Transformer model) - :class:`~transformers.GPT2Config` configuration "
"class: :class:`~transformers.TFGPT2ForSequenceClassification` (OpenAI "
"GPT-2 model) - :class:`~transformers.LayoutLMConfig` configuration class:"
" :class:`~transformers.TFLayoutLMForSequenceClassification` (LayoutLM "
"model) - :class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForSequenceClassification` (Longformer "
"model) - :class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForSequenceClassification` (MPNet model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForSequenceClassification` (MobileBERT "
"model) - :class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.TFOpenAIGPTForSequenceClassification` (OpenAI GPT "
"model) - :class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForSequenceClassification` (RemBERT model)"
" - :class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForSequenceClassification` (RoFormer "
"model) - :class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForSequenceClassification` (RoBERTa model)"
" - :class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TFTransfoXLForSequenceClassification` (Transformer-"
"XL model) - :class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMForSequenceClassification` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForSequenceClassification` (XLM-RoBERTa"
" model) - :class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetForSequenceClassification` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForSequenceClassification` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForSequenceClassification` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:13
msgid ""
":class:`~transformers.CTRLConfig` configuration class: "
":class:`~transformers.TFCTRLForSequenceClassification` (CTRL model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:14
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForSequenceClassification` (CamemBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:15
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForSequenceClassification` (ConvBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:16
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForSequenceClassification` (DistilBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:17
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForSequenceClassification` (ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:18
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertForSequenceClassification` (FlauBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:19
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForSequenceClassification` (Funnel "
"Transformer model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:20
msgid ""
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.TFGPT2ForSequenceClassification` (OpenAI GPT-2 "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:21
msgid ""
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.TFLayoutLMForSequenceClassification` (LayoutLM "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:22
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForSequenceClassification` (Longformer "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:23
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForSequenceClassification` (MPNet model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:24
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForSequenceClassification` (MobileBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:25
msgid ""
":class:`~transformers.OpenAIGPTConfig` configuration class: "
":class:`~transformers.TFOpenAIGPTForSequenceClassification` (OpenAI GPT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:26
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForSequenceClassification` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:27
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForSequenceClassification` (RoFormer "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:28
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForSequenceClassification` (RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:29
msgid ""
":class:`~transformers.TransfoXLConfig` configuration class: "
":class:`~transformers.TFTransfoXLForSequenceClassification` (Transformer-"
"XL model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:30
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMForSequenceClassification` (XLM model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:31
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForSequenceClassification` (XLM-RoBERTa"
" model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_config:32
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetForSequenceClassification` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:7
msgid ""
"**albert** -- :class:`~transformers.TFAlbertForSequenceClassification` "
"(ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:8
msgid ""
"**bert** -- :class:`~transformers.TFBertForSequenceClassification` (BERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:9
msgid ""
"**camembert** -- "
":class:`~transformers.TFCamembertForSequenceClassification` (CamemBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:10
msgid ""
"**convbert** -- "
":class:`~transformers.TFConvBertForSequenceClassification` (ConvBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:11
msgid ""
"**ctrl** -- :class:`~transformers.TFCTRLForSequenceClassification` (CTRL "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:12
msgid ""
"**distilbert** -- "
":class:`~transformers.TFDistilBertForSequenceClassification` (DistilBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:13
msgid ""
"**electra** -- :class:`~transformers.TFElectraForSequenceClassification` "
"(ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:14
msgid ""
"**flaubert** -- "
":class:`~transformers.TFFlaubertForSequenceClassification` (FlauBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:15
msgid ""
"**funnel** -- :class:`~transformers.TFFunnelForSequenceClassification` "
"(Funnel Transformer model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:16
msgid ""
"**gpt2** -- :class:`~transformers.TFGPT2ForSequenceClassification` "
"(OpenAI GPT-2 model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:17
msgid ""
"**layoutlm** -- "
":class:`~transformers.TFLayoutLMForSequenceClassification` (LayoutLM "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:18
msgid ""
"**longformer** -- "
":class:`~transformers.TFLongformerForSequenceClassification` (Longformer "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:19
msgid ""
"**mobilebert** -- "
":class:`~transformers.TFMobileBertForSequenceClassification` (MobileBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:20
msgid ""
"**mpnet** -- :class:`~transformers.TFMPNetForSequenceClassification` "
"(MPNet model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:21
msgid ""
"**openai-gpt** -- "
":class:`~transformers.TFOpenAIGPTForSequenceClassification` (OpenAI GPT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:22
msgid ""
"**rembert** -- :class:`~transformers.TFRemBertForSequenceClassification` "
"(RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:23
msgid ""
"**roberta** -- :class:`~transformers.TFRobertaForSequenceClassification` "
"(RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:24
msgid ""
"**roformer** -- "
":class:`~transformers.TFRoFormerForSequenceClassification` (RoFormer "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:25
msgid ""
"**transfo-xl** -- "
":class:`~transformers.TFTransfoXLForSequenceClassification` (Transformer-"
"XL model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:26
msgid ""
"**xlm** -- :class:`~transformers.TFXLMForSequenceClassification` (XLM "
"model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:27
msgid ""
"**xlm-roberta** -- "
":class:`~transformers.TFXLMRobertaForSequenceClassification` (XLM-RoBERTa"
" model)"
msgstr ""

#: of transformers.TFAutoModelForSequenceClassification.from_pretrained:28
msgid ""
"**xlnet** -- :class:`~transformers.TFXLNetForSequenceClassification` "
"(XLNet model)"
msgstr ""

#: ../../source/model_doc/auto.rst:181
msgid "TFAutoModelForMultipleChoice"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a multiple choice head) when created "
"with the "
":meth:`~transformers.TFAutoModelForMultipleChoice.from_pretrained` class "
"method or the "
":meth:`~transformers.TFAutoModelForMultipleChoice.from_config` class "
"method."
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.TFAutoModelForMultipleChoice.from_pretrained` to "
"load the model weights."
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForMultipleChoice` (ALBERT model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForMultipleChoice` (BERT model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForMultipleChoice` (CamemBERT model) - "
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForMultipleChoice` (ConvBERT model) - "
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForMultipleChoice` (DistilBERT model) -"
" :class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForMultipleChoice` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertForMultipleChoice` (FlauBERT model) - "
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForMultipleChoice` (Funnel Transformer "
"model) - :class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForMultipleChoice` (Longformer model) -"
" :class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForMultipleChoice` (MPNet model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForMultipleChoice` (MobileBERT model) -"
" :class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForMultipleChoice` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForMultipleChoice` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForMultipleChoice` (RoBERTa model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMForMultipleChoice` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForMultipleChoice` (XLM-RoBERTa model) "
"- :class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetForMultipleChoice` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForMultipleChoice` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForMultipleChoice` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:13
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForMultipleChoice` (CamemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:14
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForMultipleChoice` (ConvBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:15
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForMultipleChoice` (DistilBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:16
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForMultipleChoice` (ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:17
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertForMultipleChoice` (FlauBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:18
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForMultipleChoice` (Funnel Transformer "
"model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:19
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForMultipleChoice` (Longformer model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:20
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForMultipleChoice` (MPNet model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:21
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForMultipleChoice` (MobileBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:22
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForMultipleChoice` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:23
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForMultipleChoice` (RoFormer model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:24
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForMultipleChoice` (RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:25
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMForMultipleChoice` (XLM model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:26
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForMultipleChoice` (XLM-RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_config:27
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetForMultipleChoice` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:7
msgid ""
"**albert** -- :class:`~transformers.TFAlbertForMultipleChoice` (ALBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:8
msgid "**bert** -- :class:`~transformers.TFBertForMultipleChoice` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:9
msgid ""
"**camembert** -- :class:`~transformers.TFCamembertForMultipleChoice` "
"(CamemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:10
msgid ""
"**convbert** -- :class:`~transformers.TFConvBertForMultipleChoice` "
"(ConvBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:11
msgid ""
"**distilbert** -- :class:`~transformers.TFDistilBertForMultipleChoice` "
"(DistilBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:12
msgid ""
"**electra** -- :class:`~transformers.TFElectraForMultipleChoice` (ELECTRA"
" model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:13
msgid ""
"**flaubert** -- :class:`~transformers.TFFlaubertForMultipleChoice` "
"(FlauBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:14
msgid ""
"**funnel** -- :class:`~transformers.TFFunnelForMultipleChoice` (Funnel "
"Transformer model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:15
msgid ""
"**longformer** -- :class:`~transformers.TFLongformerForMultipleChoice` "
"(Longformer model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:16
msgid ""
"**mobilebert** -- :class:`~transformers.TFMobileBertForMultipleChoice` "
"(MobileBERT model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:17
msgid "**mpnet** -- :class:`~transformers.TFMPNetForMultipleChoice` (MPNet model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:18
msgid ""
"**rembert** -- :class:`~transformers.TFRemBertForMultipleChoice` (RemBERT"
" model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:19
msgid ""
"**roberta** -- :class:`~transformers.TFRobertaForMultipleChoice` (RoBERTa"
" model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:20
msgid ""
"**roformer** -- :class:`~transformers.TFRoFormerForMultipleChoice` "
"(RoFormer model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:21
msgid "**xlm** -- :class:`~transformers.TFXLMForMultipleChoice` (XLM model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:22
msgid ""
"**xlm-roberta** -- :class:`~transformers.TFXLMRobertaForMultipleChoice` "
"(XLM-RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForMultipleChoice.from_pretrained:23
msgid "**xlnet** -- :class:`~transformers.TFXLNetForMultipleChoice` (XLNet model)"
msgstr ""

#: ../../source/model_doc/auto.rst:188
msgid "TFAutoModelForTokenClassification"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a token classification head) when "
"created with the "
":meth:`~transformers.TFAutoModelForTokenClassification.from_pretrained` "
"class method or the "
":meth:`~transformers.TFAutoModelForTokenClassification.from_config` class"
" method."
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.TFAutoModelForTokenClassification.from_pretrained` "
"to load the model weights."
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForTokenClassification` (ALBERT model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForTokenClassification` (BERT model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForTokenClassification` (CamemBERT "
"model) - :class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForTokenClassification` (ConvBERT model) "
"- :class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForTokenClassification` (DistilBERT "
"model) - :class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForTokenClassification` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertForTokenClassification` (FlauBERT model) "
"- :class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForTokenClassification` (Funnel Transformer"
" model) - :class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.TFLayoutLMForTokenClassification` (LayoutLM model) "
"- :class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForTokenClassification` (Longformer "
"model) - :class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForTokenClassification` (MPNet model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForTokenClassification` (MobileBERT "
"model) - :class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForTokenClassification` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForTokenClassification` (RoFormer model) "
"- :class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForTokenClassification` (RoBERTa model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMForTokenClassification` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForTokenClassification` (XLM-RoBERTa "
"model) - :class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetForTokenClassification` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForTokenClassification` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForTokenClassification` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:13
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForTokenClassification` (CamemBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:14
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForTokenClassification` (ConvBERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:15
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForTokenClassification` (DistilBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:16
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForTokenClassification` (ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:17
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertForTokenClassification` (FlauBERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:18
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForTokenClassification` (Funnel Transformer"
" model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:19
msgid ""
":class:`~transformers.LayoutLMConfig` configuration class: "
":class:`~transformers.TFLayoutLMForTokenClassification` (LayoutLM model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:20
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForTokenClassification` (Longformer "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:21
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForTokenClassification` (MPNet model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:22
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForTokenClassification` (MobileBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:23
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForTokenClassification` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:24
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForTokenClassification` (RoFormer model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:25
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForTokenClassification` (RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:26
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMForTokenClassification` (XLM model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:27
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForTokenClassification` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_config:28
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetForTokenClassification` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:7
msgid ""
"**albert** -- :class:`~transformers.TFAlbertForTokenClassification` "
"(ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:8
msgid ""
"**bert** -- :class:`~transformers.TFBertForTokenClassification` (BERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:9
msgid ""
"**camembert** -- :class:`~transformers.TFCamembertForTokenClassification`"
" (CamemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:10
msgid ""
"**convbert** -- :class:`~transformers.TFConvBertForTokenClassification` "
"(ConvBERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:11
msgid ""
"**distilbert** -- "
":class:`~transformers.TFDistilBertForTokenClassification` (DistilBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:12
msgid ""
"**electra** -- :class:`~transformers.TFElectraForTokenClassification` "
"(ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:13
msgid ""
"**flaubert** -- :class:`~transformers.TFFlaubertForTokenClassification` "
"(FlauBERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:14
msgid ""
"**funnel** -- :class:`~transformers.TFFunnelForTokenClassification` "
"(Funnel Transformer model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:15
msgid ""
"**layoutlm** -- :class:`~transformers.TFLayoutLMForTokenClassification` "
"(LayoutLM model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:16
msgid ""
"**longformer** -- "
":class:`~transformers.TFLongformerForTokenClassification` (Longformer "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:17
msgid ""
"**mobilebert** -- "
":class:`~transformers.TFMobileBertForTokenClassification` (MobileBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:18
msgid ""
"**mpnet** -- :class:`~transformers.TFMPNetForTokenClassification` (MPNet "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:19
msgid ""
"**rembert** -- :class:`~transformers.TFRemBertForTokenClassification` "
"(RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:20
msgid ""
"**roberta** -- :class:`~transformers.TFRobertaForTokenClassification` "
"(RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:21
msgid ""
"**roformer** -- :class:`~transformers.TFRoFormerForTokenClassification` "
"(RoFormer model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:22
msgid "**xlm** -- :class:`~transformers.TFXLMForTokenClassification` (XLM model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:23
msgid ""
"**xlm-roberta** -- "
":class:`~transformers.TFXLMRobertaForTokenClassification` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.TFAutoModelForTokenClassification.from_pretrained:24
msgid ""
"**xlnet** -- :class:`~transformers.TFXLNetForTokenClassification` (XLNet "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:195
msgid "TFAutoModelForQuestionAnswering"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a question answering head) when "
"created with the "
":meth:`~transformers.TFAutoModelForQuestionAnswering.from_pretrained` "
"class method or the "
":meth:`~transformers.TFAutoModelForQuestionAnswering.from_config` class "
"method."
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.TFAutoModelForQuestionAnswering.from_pretrained` to "
"load the model weights."
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForQuestionAnswering` (ALBERT model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForQuestionAnswering` (BERT model) - "
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForQuestionAnswering` (CamemBERT model) "
"- :class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForQuestionAnswering` (ConvBERT model) - "
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForQuestionAnswering` (DistilBERT "
"model) - :class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForQuestionAnswering` (ELECTRA model) - "
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertForQuestionAnsweringSimple` (FlauBERT "
"model) - :class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForQuestionAnswering` (Funnel Transformer "
"model) - :class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForQuestionAnswering` (Longformer "
"model) - :class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForQuestionAnswering` (MPNet model) - "
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForQuestionAnswering` (MobileBERT "
"model) - :class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForQuestionAnswering` (RemBERT model) - "
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForQuestionAnswering` (RoFormer model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForQuestionAnswering` (RoBERTa model) - "
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMForQuestionAnsweringSimple` (XLM model) - "
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForQuestionAnswering` (XLM-RoBERTa "
"model) - :class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetForQuestionAnsweringSimple` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:11
msgid ""
":class:`~transformers.AlbertConfig` configuration class: "
":class:`~transformers.TFAlbertForQuestionAnswering` (ALBERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.TFBertForQuestionAnswering` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:13
msgid ""
":class:`~transformers.CamembertConfig` configuration class: "
":class:`~transformers.TFCamembertForQuestionAnswering` (CamemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:14
msgid ""
":class:`~transformers.ConvBertConfig` configuration class: "
":class:`~transformers.TFConvBertForQuestionAnswering` (ConvBERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:15
msgid ""
":class:`~transformers.DistilBertConfig` configuration class: "
":class:`~transformers.TFDistilBertForQuestionAnswering` (DistilBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:16
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.TFElectraForQuestionAnswering` (ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:17
msgid ""
":class:`~transformers.FlaubertConfig` configuration class: "
":class:`~transformers.TFFlaubertForQuestionAnsweringSimple` (FlauBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:18
msgid ""
":class:`~transformers.FunnelConfig` configuration class: "
":class:`~transformers.TFFunnelForQuestionAnswering` (Funnel Transformer "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:19
msgid ""
":class:`~transformers.LongformerConfig` configuration class: "
":class:`~transformers.TFLongformerForQuestionAnswering` (Longformer "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:20
msgid ""
":class:`~transformers.MPNetConfig` configuration class: "
":class:`~transformers.TFMPNetForQuestionAnswering` (MPNet model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:21
msgid ""
":class:`~transformers.MobileBertConfig` configuration class: "
":class:`~transformers.TFMobileBertForQuestionAnswering` (MobileBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:22
msgid ""
":class:`~transformers.RemBertConfig` configuration class: "
":class:`~transformers.TFRemBertForQuestionAnswering` (RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:23
msgid ""
":class:`~transformers.RoFormerConfig` configuration class: "
":class:`~transformers.TFRoFormerForQuestionAnswering` (RoFormer model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:24
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.TFRobertaForQuestionAnswering` (RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:25
msgid ""
":class:`~transformers.XLMConfig` configuration class: "
":class:`~transformers.TFXLMForQuestionAnsweringSimple` (XLM model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:26
msgid ""
":class:`~transformers.XLMRobertaConfig` configuration class: "
":class:`~transformers.TFXLMRobertaForQuestionAnswering` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_config:27
msgid ""
":class:`~transformers.XLNetConfig` configuration class: "
":class:`~transformers.TFXLNetForQuestionAnsweringSimple` (XLNet model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:7
msgid ""
"**albert** -- :class:`~transformers.TFAlbertForQuestionAnswering` (ALBERT"
" model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:8
msgid "**bert** -- :class:`~transformers.TFBertForQuestionAnswering` (BERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:9
msgid ""
"**camembert** -- :class:`~transformers.TFCamembertForQuestionAnswering` "
"(CamemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:10
msgid ""
"**convbert** -- :class:`~transformers.TFConvBertForQuestionAnswering` "
"(ConvBERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:11
msgid ""
"**distilbert** -- :class:`~transformers.TFDistilBertForQuestionAnswering`"
" (DistilBERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:12
msgid ""
"**electra** -- :class:`~transformers.TFElectraForQuestionAnswering` "
"(ELECTRA model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:13
msgid ""
"**flaubert** -- "
":class:`~transformers.TFFlaubertForQuestionAnsweringSimple` (FlauBERT "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:14
msgid ""
"**funnel** -- :class:`~transformers.TFFunnelForQuestionAnswering` (Funnel"
" Transformer model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:15
msgid ""
"**longformer** -- :class:`~transformers.TFLongformerForQuestionAnswering`"
" (Longformer model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:16
msgid ""
"**mobilebert** -- :class:`~transformers.TFMobileBertForQuestionAnswering`"
" (MobileBERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:17
msgid ""
"**mpnet** -- :class:`~transformers.TFMPNetForQuestionAnswering` (MPNet "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:18
msgid ""
"**rembert** -- :class:`~transformers.TFRemBertForQuestionAnswering` "
"(RemBERT model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:19
msgid ""
"**roberta** -- :class:`~transformers.TFRobertaForQuestionAnswering` "
"(RoBERTa model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:20
msgid ""
"**roformer** -- :class:`~transformers.TFRoFormerForQuestionAnswering` "
"(RoFormer model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:21
msgid ""
"**xlm** -- :class:`~transformers.TFXLMForQuestionAnsweringSimple` (XLM "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:22
msgid ""
"**xlm-roberta** -- "
":class:`~transformers.TFXLMRobertaForQuestionAnswering` (XLM-RoBERTa "
"model)"
msgstr ""

#: of transformers.TFAutoModelForQuestionAnswering.from_pretrained:23
msgid ""
"**xlnet** -- :class:`~transformers.TFXLNetForQuestionAnsweringSimple` "
"(XLNet model)"
msgstr ""

#: ../../source/model_doc/auto.rst:202
msgid "FlaxAutoModel"
msgstr ""

#: of transformers.FlaxAutoModel:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"base model classes of the library when created with the "
":meth:`~transformers.FlaxAutoModel.from_pretrained` class method or the "
":meth:`~transformers.FlaxAutoModel.from_config` class method."
msgstr ""

#: of transformers.FlaxAutoModel.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModel.from_pretrained` to load the model "
"weights."
msgstr ""

#: of transformers.FlaxAutoModel.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartModel` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertModel` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdModel` (BigBird model) - "
":class:`~transformers.CLIPConfig` configuration class: "
":class:`~transformers.FlaxCLIPModel` (CLIP model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraModel` (ELECTRA model) - "
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.FlaxGPT2Model` (OpenAI GPT-2 model) - "
":class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.FlaxGPTNeoModel` (GPT Neo model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.FlaxMBartModel` (mBART model) - "
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.FlaxMT5Model` (mT5 model) - "
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.FlaxMarianModel` (Marian model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaModel` (RoBERTa model) - "
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.FlaxT5Model` (T5 model) - "
":class:`~transformers.ViTConfig` configuration class: "
":class:`~transformers.FlaxViTModel` (ViT model) - "
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.FlaxWav2Vec2Model` (Wav2Vec2 model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:11
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartModel` (BART model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertModel` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:13
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdModel` (BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:14
msgid ""
":class:`~transformers.CLIPConfig` configuration class: "
":class:`~transformers.FlaxCLIPModel` (CLIP model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:15
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraModel` (ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:16
msgid ""
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.FlaxGPT2Model` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:17
msgid ""
":class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.FlaxGPTNeoModel` (GPT Neo model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:18
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.FlaxMBartModel` (mBART model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:19
msgid ""
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.FlaxMT5Model` (mT5 model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:20
msgid ""
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.FlaxMarianModel` (Marian model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:21
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaModel` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:22
msgid ""
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.FlaxT5Model` (T5 model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:23
msgid ""
":class:`~transformers.ViTConfig` configuration class: "
":class:`~transformers.FlaxViTModel` (ViT model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_config:24
msgid ""
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.FlaxWav2Vec2Model` (Wav2Vec2 model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:7
msgid "**bart** -- :class:`~transformers.FlaxBartModel` (BART model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:8
msgid "**bert** -- :class:`~transformers.FlaxBertModel` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:9
msgid "**big_bird** -- :class:`~transformers.FlaxBigBirdModel` (BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:10
msgid "**clip** -- :class:`~transformers.FlaxCLIPModel` (CLIP model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:11
msgid "**electra** -- :class:`~transformers.FlaxElectraModel` (ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:12
msgid "**gpt2** -- :class:`~transformers.FlaxGPT2Model` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:13
msgid "**gpt_neo** -- :class:`~transformers.FlaxGPTNeoModel` (GPT Neo model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:14
msgid "**marian** -- :class:`~transformers.FlaxMarianModel` (Marian model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:15
msgid "**mbart** -- :class:`~transformers.FlaxMBartModel` (mBART model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:16
msgid "**mt5** -- :class:`~transformers.FlaxMT5Model` (mT5 model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:17
msgid "**roberta** -- :class:`~transformers.FlaxRobertaModel` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:18
msgid "**t5** -- :class:`~transformers.FlaxT5Model` (T5 model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:19
msgid "**vit** -- :class:`~transformers.FlaxViTModel` (ViT model)"
msgstr ""

#: of transformers.FlaxAutoModel.from_pretrained:20
msgid "**wav2vec2** -- :class:`~transformers.FlaxWav2Vec2Model` (Wav2Vec2 model)"
msgstr ""

#: ../../source/model_doc/auto.rst:209
msgid "FlaxAutoModelForCausalLM"
msgstr ""

#: of transformers.FlaxAutoModelForCausalLM:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a causal language modeling head) when "
"created with the "
":meth:`~transformers.FlaxAutoModelForCausalLM.from_pretrained` class "
"method or the :meth:`~transformers.FlaxAutoModelForCausalLM.from_config` "
"class method."
msgstr ""

#: of transformers.FlaxAutoModelForCausalLM.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForCausalLM.from_pretrained` to load "
"the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForCausalLM.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.FlaxGPT2LMHeadModel` (OpenAI GPT-2 model) - "
":class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.FlaxGPTNeoForCausalLM` (GPT Neo model)"
msgstr ""

#: of transformers.FlaxAutoModelForCausalLM.from_config:11
msgid ""
":class:`~transformers.GPT2Config` configuration class: "
":class:`~transformers.FlaxGPT2LMHeadModel` (OpenAI GPT-2 model)"
msgstr ""

#: of transformers.FlaxAutoModelForCausalLM.from_config:12
msgid ""
":class:`~transformers.GPTNeoConfig` configuration class: "
":class:`~transformers.FlaxGPTNeoForCausalLM` (GPT Neo model)"
msgstr ""

#: of transformers.FlaxAutoModelForCausalLM.from_pretrained:7
msgid ""
"**gpt2** -- :class:`~transformers.FlaxGPT2LMHeadModel` (OpenAI GPT-2 "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForCausalLM.from_pretrained:8
msgid ""
"**gpt_neo** -- :class:`~transformers.FlaxGPTNeoForCausalLM` (GPT Neo "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:216
msgid "FlaxAutoModelForPreTraining"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a pretraining head) when created with "
"the :meth:`~transformers.FlaxAutoModelForPreTraining.from_pretrained` "
"class method or the "
":meth:`~transformers.FlaxAutoModelForPreTraining.from_config` class "
"method."
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForPreTraining.from_pretrained` to load"
" the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartForConditionalGeneration` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForPreTraining` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForPreTraining` (BigBird model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForPreTraining` (ELECTRA model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.FlaxMBartForConditionalGeneration` (mBART model) - "
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.FlaxMT5ForConditionalGeneration` (mT5 model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForMaskedLM` (RoBERTa model) - "
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.FlaxT5ForConditionalGeneration` (T5 model) - "
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.FlaxWav2Vec2ForPreTraining` (Wav2Vec2 model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_config:11
#: transformers.FlaxAutoModelForPreTraining.from_config:11
#: transformers.FlaxAutoModelForSeq2SeqLM.from_config:11
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartForConditionalGeneration` (BART model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForPreTraining` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_config:13
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForPreTraining` (BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_config:14
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForPreTraining` (ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_config:15
#: transformers.FlaxAutoModelForPreTraining.from_config:15
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.FlaxMBartForConditionalGeneration` (mBART model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_config:16
#: transformers.FlaxAutoModelForSeq2SeqLM.from_config:12
msgid ""
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.FlaxMT5ForConditionalGeneration` (mT5 model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_config:16
#: transformers.FlaxAutoModelForPreTraining.from_config:17
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForMaskedLM` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_config:18
#: transformers.FlaxAutoModelForSeq2SeqLM.from_config:14
msgid ""
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.FlaxT5ForConditionalGeneration` (T5 model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_config:19
msgid ""
":class:`~transformers.Wav2Vec2Config` configuration class: "
":class:`~transformers.FlaxWav2Vec2ForPreTraining` (Wav2Vec2 model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_pretrained:7
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:7
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:7
msgid ""
"**bart** -- :class:`~transformers.FlaxBartForConditionalGeneration` (BART"
" model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_pretrained:8
msgid "**bert** -- :class:`~transformers.FlaxBertForPreTraining` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_pretrained:9
msgid ""
"**big_bird** -- :class:`~transformers.FlaxBigBirdForPreTraining` (BigBird"
" model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_pretrained:10
msgid ""
"**electra** -- :class:`~transformers.FlaxElectraForPreTraining` (ELECTRA "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_pretrained:11
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:11
msgid ""
"**mbart** -- :class:`~transformers.FlaxMBartForConditionalGeneration` "
"(mBART model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_pretrained:12
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:9
msgid ""
"**mt5** -- :class:`~transformers.FlaxMT5ForConditionalGeneration` (mT5 "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_pretrained:12
#: transformers.FlaxAutoModelForPreTraining.from_pretrained:13
msgid ""
"**roberta** -- :class:`~transformers.FlaxRobertaForMaskedLM` (RoBERTa "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_pretrained:14
#: transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:10
msgid "**t5** -- :class:`~transformers.FlaxT5ForConditionalGeneration` (T5 model)"
msgstr ""

#: of transformers.FlaxAutoModelForPreTraining.from_pretrained:15
msgid ""
"**wav2vec2** -- :class:`~transformers.FlaxWav2Vec2ForPreTraining` "
"(Wav2Vec2 model)"
msgstr ""

#: ../../source/model_doc/auto.rst:223
msgid "FlaxAutoModelForMaskedLM"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a masked language modeling head) when "
"created with the "
":meth:`~transformers.FlaxAutoModelForMaskedLM.from_pretrained` class "
"method or the :meth:`~transformers.FlaxAutoModelForMaskedLM.from_config` "
"class method."
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForMaskedLM.from_pretrained` to load "
"the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartForConditionalGeneration` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForMaskedLM` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForMaskedLM` (BigBird model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForMaskedLM` (ELECTRA model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.FlaxMBartForConditionalGeneration` (mBART model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForMaskedLM` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForMaskedLM` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_config:13
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForMaskedLM` (BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_config:14
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForMaskedLM` (ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_pretrained:8
msgid "**bert** -- :class:`~transformers.FlaxBertForMaskedLM` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_pretrained:9
msgid ""
"**big_bird** -- :class:`~transformers.FlaxBigBirdForMaskedLM` (BigBird "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForMaskedLM.from_pretrained:10
msgid ""
"**electra** -- :class:`~transformers.FlaxElectraForMaskedLM` (ELECTRA "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:230
msgid "FlaxAutoModelForSeq2SeqLM"
msgstr ""

#: of transformers.FlaxAutoModelForSeq2SeqLM:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a sequence-to-sequence language "
"modeling head) when created with the "
":meth:`~transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained` class "
"method or the :meth:`~transformers.FlaxAutoModelForSeq2SeqLM.from_config`"
" class method."
msgstr ""

#: of transformers.FlaxAutoModelForSeq2SeqLM.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained` to load "
"the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForSeq2SeqLM.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartForConditionalGeneration` (BART model) - "
":class:`~transformers.MT5Config` configuration class: "
":class:`~transformers.FlaxMT5ForConditionalGeneration` (mT5 model) - "
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.FlaxMarianMTModel` (Marian model) - "
":class:`~transformers.T5Config` configuration class: "
":class:`~transformers.FlaxT5ForConditionalGeneration` (T5 model)"
msgstr ""

#: of transformers.FlaxAutoModelForSeq2SeqLM.from_config:13
msgid ""
":class:`~transformers.MarianConfig` configuration class: "
":class:`~transformers.FlaxMarianMTModel` (Marian model)"
msgstr ""

#: of transformers.FlaxAutoModelForSeq2SeqLM.from_pretrained:8
msgid "**marian** -- :class:`~transformers.FlaxMarianMTModel` (Marian model)"
msgstr ""

#: ../../source/model_doc/auto.rst:237
msgid "FlaxAutoModelForSequenceClassification"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a sequence classification head) when "
"created with the "
":meth:`~transformers.FlaxAutoModelForSequenceClassification.from_pretrained`"
" class method or the "
":meth:`~transformers.FlaxAutoModelForSequenceClassification.from_config` "
"class method."
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForSequenceClassification.from_pretrained`"
" to load the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartForSequenceClassification` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForSequenceClassification` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForSequenceClassification` (BigBird "
"model) - :class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForSequenceClassification` (ELECTRA "
"model) - :class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.FlaxMBartForSequenceClassification` (mBART model) -"
" :class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForSequenceClassification` (RoBERTa "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_config:11
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartForSequenceClassification` (BART model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForSequenceClassification` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_config:13
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForSequenceClassification` (BigBird "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_config:14
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForSequenceClassification` (ELECTRA "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_config:15
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.FlaxMBartForSequenceClassification` (mBART model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_config:16
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForSequenceClassification` (RoBERTa "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_pretrained:7
msgid ""
"**bart** -- :class:`~transformers.FlaxBartForSequenceClassification` "
"(BART model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_pretrained:8
msgid ""
"**bert** -- :class:`~transformers.FlaxBertForSequenceClassification` "
"(BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_pretrained:9
msgid ""
"**big_bird** -- "
":class:`~transformers.FlaxBigBirdForSequenceClassification` (BigBird "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_pretrained:10
msgid ""
"**electra** -- "
":class:`~transformers.FlaxElectraForSequenceClassification` (ELECTRA "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_pretrained:11
msgid ""
"**mbart** -- :class:`~transformers.FlaxMBartForSequenceClassification` "
"(mBART model)"
msgstr ""

#: of transformers.FlaxAutoModelForSequenceClassification.from_pretrained:12
msgid ""
"**roberta** -- "
":class:`~transformers.FlaxRobertaForSequenceClassification` (RoBERTa "
"model)"
msgstr ""

#: ../../source/model_doc/auto.rst:244
msgid "FlaxAutoModelForQuestionAnswering"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a question answering head) when "
"created with the "
":meth:`~transformers.FlaxAutoModelForQuestionAnswering.from_pretrained` "
"class method or the "
":meth:`~transformers.FlaxAutoModelForQuestionAnswering.from_config` class"
" method."
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForQuestionAnswering.from_pretrained` "
"to load the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartForQuestionAnswering` (BART model) - "
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForQuestionAnswering` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForQuestionAnswering` (BigBird model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForQuestionAnswering` (ELECTRA model) - "
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.FlaxMBartForQuestionAnswering` (mBART model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForQuestionAnswering` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_config:11
msgid ""
":class:`~transformers.BartConfig` configuration class: "
":class:`~transformers.FlaxBartForQuestionAnswering` (BART model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_config:12
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForQuestionAnswering` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_config:13
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForQuestionAnswering` (BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_config:14
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForQuestionAnswering` (ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_config:15
msgid ""
":class:`~transformers.MBartConfig` configuration class: "
":class:`~transformers.FlaxMBartForQuestionAnswering` (mBART model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_config:16
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForQuestionAnswering` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:7
msgid ""
"**bart** -- :class:`~transformers.FlaxBartForQuestionAnswering` (BART "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:8
msgid ""
"**bert** -- :class:`~transformers.FlaxBertForQuestionAnswering` (BERT "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:9
msgid ""
"**big_bird** -- :class:`~transformers.FlaxBigBirdForQuestionAnswering` "
"(BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:10
msgid ""
"**electra** -- :class:`~transformers.FlaxElectraForQuestionAnswering` "
"(ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:11
msgid ""
"**mbart** -- :class:`~transformers.FlaxMBartForQuestionAnswering` (mBART "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForQuestionAnswering.from_pretrained:12
msgid ""
"**roberta** -- :class:`~transformers.FlaxRobertaForQuestionAnswering` "
"(RoBERTa model)"
msgstr ""

#: ../../source/model_doc/auto.rst:251
msgid "FlaxAutoModelForTokenClassification"
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a token classification head) when "
"created with the "
":meth:`~transformers.FlaxAutoModelForTokenClassification.from_pretrained`"
" class method or the "
":meth:`~transformers.FlaxAutoModelForTokenClassification.from_config` "
"class method."
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForTokenClassification.from_pretrained`"
" to load the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForTokenClassification` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForTokenClassification` (BigBird model) "
"- :class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForTokenClassification` (ELECTRA model) "
"- :class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForTokenClassification` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_config:11
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForTokenClassification` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_config:12
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForTokenClassification` (BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_config:13
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForTokenClassification` (ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_config:14
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForTokenClassification` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_pretrained:7
msgid ""
"**bert** -- :class:`~transformers.FlaxBertForTokenClassification` (BERT "
"model)"
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_pretrained:8
msgid ""
"**big_bird** -- :class:`~transformers.FlaxBigBirdForTokenClassification` "
"(BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_pretrained:9
msgid ""
"**electra** -- :class:`~transformers.FlaxElectraForTokenClassification` "
"(ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModelForTokenClassification.from_pretrained:10
msgid ""
"**roberta** -- :class:`~transformers.FlaxRobertaForTokenClassification` "
"(RoBERTa model)"
msgstr ""

#: ../../source/model_doc/auto.rst:258
msgid "FlaxAutoModelForMultipleChoice"
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a multiple choice head) when created "
"with the "
":meth:`~transformers.FlaxAutoModelForMultipleChoice.from_pretrained` "
"class method or the "
":meth:`~transformers.FlaxAutoModelForMultipleChoice.from_config` class "
"method."
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForMultipleChoice.from_pretrained` to "
"load the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForMultipleChoice` (BERT model) - "
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForMultipleChoice` (BigBird model) - "
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForMultipleChoice` (ELECTRA model) - "
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForMultipleChoice` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_config:11
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForMultipleChoice` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_config:12
msgid ""
":class:`~transformers.BigBirdConfig` configuration class: "
":class:`~transformers.FlaxBigBirdForMultipleChoice` (BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_config:13
msgid ""
":class:`~transformers.ElectraConfig` configuration class: "
":class:`~transformers.FlaxElectraForMultipleChoice` (ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_config:14
msgid ""
":class:`~transformers.RobertaConfig` configuration class: "
":class:`~transformers.FlaxRobertaForMultipleChoice` (RoBERTa model)"
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_pretrained:7
msgid "**bert** -- :class:`~transformers.FlaxBertForMultipleChoice` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_pretrained:8
msgid ""
"**big_bird** -- :class:`~transformers.FlaxBigBirdForMultipleChoice` "
"(BigBird model)"
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_pretrained:9
msgid ""
"**electra** -- :class:`~transformers.FlaxElectraForMultipleChoice` "
"(ELECTRA model)"
msgstr ""

#: of transformers.FlaxAutoModelForMultipleChoice.from_pretrained:10
msgid ""
"**roberta** -- :class:`~transformers.FlaxRobertaForMultipleChoice` "
"(RoBERTa model)"
msgstr ""

#: ../../source/model_doc/auto.rst:265
msgid "FlaxAutoModelForNextSentencePrediction"
msgstr ""

#: of transformers.FlaxAutoModelForNextSentencePrediction:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a next sentence prediction head) when "
"created with the "
":meth:`~transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained`"
" class method or the "
":meth:`~transformers.FlaxAutoModelForNextSentencePrediction.from_config` "
"class method."
msgstr ""

#: of transformers.FlaxAutoModelForNextSentencePrediction.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained`"
" to load the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForNextSentencePrediction.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForNextSentencePrediction` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForNextSentencePrediction.from_config:11
msgid ""
":class:`~transformers.BertConfig` configuration class: "
":class:`~transformers.FlaxBertForNextSentencePrediction` (BERT model)"
msgstr ""

#: of transformers.FlaxAutoModelForNextSentencePrediction.from_pretrained:7
msgid ""
"**bert** -- :class:`~transformers.FlaxBertForNextSentencePrediction` "
"(BERT model)"
msgstr ""

#: ../../source/model_doc/auto.rst:272
msgid "FlaxAutoModelForImageClassification"
msgstr ""

#: of transformers.FlaxAutoModelForImageClassification:1
msgid ""
"This is a generic model class that will be instantiated as one of the "
"model classes of the library (with a image classification head) when "
"created with the "
":meth:`~transformers.FlaxAutoModelForImageClassification.from_pretrained`"
" class method or the "
":meth:`~transformers.FlaxAutoModelForImageClassification.from_config` "
"class method."
msgstr ""

#: of transformers.FlaxAutoModelForImageClassification.from_config:5
msgid ""
"Loading a model from its configuration file does **not** load the model "
"weights. It only affects the model's configuration. Use "
":meth:`~transformers.FlaxAutoModelForImageClassification.from_pretrained`"
" to load the model weights."
msgstr ""

#: of transformers.FlaxAutoModelForImageClassification.from_config:9
msgid ""
"The model class to instantiate is selected based on the configuration "
"class:  - :class:`~transformers.ViTConfig` configuration class: "
":class:`~transformers.FlaxViTForImageClassification` (ViT model)"
msgstr ""

#: of transformers.FlaxAutoModelForImageClassification.from_config:11
msgid ""
":class:`~transformers.ViTConfig` configuration class: "
":class:`~transformers.FlaxViTForImageClassification` (ViT model)"
msgstr ""

#: of transformers.FlaxAutoModelForImageClassification.from_pretrained:7
msgid ""
"**vit** -- :class:`~transformers.FlaxViTForImageClassification` (ViT "
"model)"
msgstr ""

